molleo
BioT5_c-met
MolFilter is using the following filters:
Rule_Glaxo: True
Rule_PAINS: True
Rule_SureChEMBL: True
['CNC(=S)c1ccc(cc1F)-c1cnc2ncc(Cc3cc(Cl)c4ncccc4c3)n2n1', 'Cn1cc(cn1)-c1ccc(=O)n(CC2CN(CCO2)c2ncc(OCC3CCNCC3)cn2)n1', 'Fc1cc(F)cc(c1)-c1ccc2nnc(CNc3ccnc4cc(OCCn5cncn5)cnc34)n2n1', 'COc1ccc2c(OCc3nnc4ncc(nn34)-c3ccccc3)ccnc2c1', 'CCN1Cc2c(O[C@@H](C)CNC(=O)c3c(N)nn4ccc1nc34)ccc(F)c2C#N', 'CC\\C(=N/N(C(N)=O)c1ccc(Oc2ccnc3cc(OCCCN4CCCCC4)c(OC)cc23)c(F)c1)c1ccccc1', 'Cc1c(O)ccc2nc(oc12)-c1cc(cnc1N)-c1cnn(c1)C1CCNCC1', 'NC(=O)NNC(=N)c1cnc2nnn(Cc3ccc4ncccc4c3)c2n1', 'CC(=NNC(N)=O)c1cnc2nnn(Cc3cc4cccnc4cc3F)c2n1', 'C[C@H](c1nnc2ccc(nn12)C(C)=NNC(N)=O)c1ccc2ncccc2c1', 'CCN1CCC(CC1)n1cc(cn1)-c1cnc2ccc3ccc(NS(=O)(=O)N(C)C)cc3c(=O)c2c1', 'Cc1c(C(=O)Nc2ccc(Oc3ccnc(NC(=O)C4CC4)c3)cc2)c(=O)n(-c2ccccc2)n1C', 'Fc1ccc(cc1)-c1cnc2nnc(n2n1)C(F)(F)c1ccc2ncccc2c1', 'OCCn1cc(cn1)-c1cnc2nnn(Cc3ccc4ncccc4c3)c2n1', 'CC(c1ccc2ncc(cc2c1)-c1cnn(C)c1)n1nnc2ncc(nc12)-c1ccncc1', 'CC(c1c(F)cc2ncc(cc2c1F)-c1cnn(C)c1)n1nnc2ncc(nc12)-c1ccc(C(N)=O)c(F)c1', 'COc1ccc2c(OCc3nnc4c(F)cc(cn34)-c3cc(C)cs3)ccnc2c1', 'NC(=O)NN=Cc1cnc2nnn(Cc3ccc4ncccc4c3)c2n1', 'C[C@@H](Oc1c[nH]c(=O)c(c1)C(=O)NC1CCOCC1)c1c(Cl)ccc(F)c1Cl', 'COc1ccc2c(Oc3ccc(NC(=O)c4c(C)n(CCO)n(-c5ccccc5)c4=O)nc3)ccnc2c1', 'CC(=O)NN=C(C)c1cnc2nnn(Cc3cc4cccnc4cc3F)c2n1', 'CC(N=O)c1ccc2nnc(Cc3c(F)cc4ncccc4c3F)n2n1', 'CC(c1c(F)cc2ncc(cc2c1F)-c1cnn(C)c1)n1nnc2ncc(nc12)-c1cnn(CCO)c1', 'Cn1cc(cn1)-c1ccc(=O)n(CCOc2ccnc3cc(OCc4ccc(cc4)C(=O)Nc4ccccc4N)ccc23)n1', 'C[C@@H](c1nnc2ccc(nn12)C(C)=NOC(N)=O)c1c(F)cc2ncccc2c1F', 'Cc1c(C(=O)Nc2ccc(Oc3ccnc(NC(=O)C4CC4)c3)c(F)c2)c(=O)n(-c2ccccc2)n1C', 'OC[C@@H]1CCCN1CCCCNC(=O)c1cc2NC\\C(=N/NC(=O)Cc3ccc4OCCc4c3)c2c(Br)c1', 'Cn1cc(cn1)-c1cnc2nnc(n2n1)C(F)(F)c1ccc2ncccc2c1', 'Cn1cc(cn1)-c1cnc2cnn(c2c1)S(=O)(=O)c1cnc2ccc(cn12)-c1cnn(C)c1', 'C[C@H](NC(=O)c1ccc(cc1Cl)-c1cnc2ncc(Cc3ccc4ncccc4c3)n2n1)c1noc(C)n1', 'O=C(NCCN1CCOCC1)Nc1nc2ccc(Sc3nnc4ccc(OC5CCCCC5)nn34)cc2s1', 'COc1ccc(cc1)-n1c2ccccc2cc(C(=O)Nc2ccc(Oc3ccnc(N)c3Cl)c(F)c2)c1=O', 'C[C@@H](Oc1cc(nnc1N)C(=O)Nc1ccc(cc1)C(=O)N1CCN(C)CC1)c1c(Cl)ccc(F)c1Cl', 'COc1cc2nccc(Oc3ccc(NC(=O)c4c(I)ccn(-c5ccc(F)cc5)c4=O)cc3F)c2cc1OC', 'Cn1cc(cn1)-c1cnc2ccc3ccc(N)cc3c(=O)c2c1', 'Cc1cc(C)cc(c1)-n1c2ccccc2cc(C(=O)Nc2ccc(Oc3ccnc(N)c3Cl)c(F)c2)c1=O', 'Cc1csc(c1)-c1ccc2nnc(Cc3ccc4ncccc4c3)n2n1', 'CN1C(=O)COc2c1cnc1ccc(Sc3nnc4c(F)cc(cn34)-c3cnn(C)c3)cc21', 'Fc1cc(ccc1C(=O)NCC1CCCCN1)-c1cc(F)c2ncc(Cc3ccc4ncccc4c3)n2c1', '[O-][N+](=O)c1cccc(CNc2cc(cc3ncc(cc23)N2CCOCC2)C(F)(F)F)c1', 'C[C@H](CO)Nc1n[nH]c2nccc(Oc3ccc(NC(=O)c4cc(C)cn(-c5ccc(F)cc5)c4=O)cc3F)c12', '[O-][N+](=O)c1cccc(CNc2cc(cc3ncc(cc23)N2CCN(CC2)S(=O)(=O)C2CC2)C(F)(F)F)c1', 'Fc1ccc2ccn(-c3ccc(=O)n(CCOc4ccnc5cc(OCCCN6CCOCC6)ccc45)n3)c2c1', 'C[C@@H](Oc1cc(cnc1N)-c1ccn(n1)C1CCNCC1)c1c(Cl)ccc(F)c1Cl', 'Cn1ccnc1-c1cc2c(Oc3ccc(NC(=S)NC(=O)Cc4ccccc4)cc3F)ccnc2s1', 'Cn1cc(cn1)-c1ccc2nnc(Sc3ccc4ncc(NCCO)cc4c3)n2c1', 'Nc1nccc(Oc2ccc(NC(=O)c3cccn(-c4ccc(F)cc4)c3=O)cc2F)c1C#C', 'OCCn1cc(cn1)-c1cnc(nc1)N1CCOC(Cn2nnc3ncc(nc23)-c2ccc(F)c(c2)C#N)C1', 'COc1cc2c(Oc3ccc(NC(=O)c4nn(-c5ccccc5C(F)(F)F)c5ccccc5c4=O)cc3F)ccnc2cc1OCCCN1CCOCC1', 'CN1CCC(CC1)Nc1cnc2ccc(Sc3nnc4c(F)cc(cn34)-c3cnn(C)c3)cc2c1', 'Nc1n[nH]c2cccc(-c3ccc(NC(=O)C4(CC4)C(=O)Nc4ccc(F)cc4)cc3)c12', 'Cn1cc(cn1)-c1ccc2n(CCOc3ccnc4cc(ccc34)-c3cnn(C)c3)c(=O)oc2c1', 'Cn1cc(cn1)-c1cnc2ccc3ccc(CS(=O)(=O)NCc4ccccn4)cc3c(=O)c2c1', 'COc1cc(ccc1Nc1ncc(Cl)c(Nc2ccccc2N(C)S(C)(=O)=O)n1)N1CCC(CC1)N1CCN(C)CC1', 'Cc1csc(c1)-c1ccc2nnc(Cc3ccc(O)cc3)n2n1', 'CC(c1c(F)cc2ncccc2c1F)n1cnc2ncc(nc12)-c1cnn(C)c1', 'CC(C)OCCOc1n[nH]c2ccc(cc12)C1C(C#N)C(C)=NC(C)=C1C#N', 'COc1cnc2ccc(cc2c1)[C@H](C)c1nnc2c(F)cc(cn12)-c1cn(C)cn1', 'COCCOc1cnc2ccn([C@H](C)c3nnc4c(F)cc(cn34)-c3cc(C)no3)c(=O)c2c1', 'O=c1ccc(nn1Cc1cccc(c1)-c1ncc(OCCN2CCOCC2)cn1)-c1cccc(c1)C#N', 'Cc1[nH]nc2ccc(cc12)C1C([N+]#[C-])C(C)=NC2=C1C(=O)OC2', 'CC(c1c(F)cc2ncccc2c1F)n1cnc2ncc(nc12)-c1cnn(CCO)c1', 'CNC(=O)c1ccc(cc1Cl)-c1ccc2nnc(Cc3ccc(O)cc3)n2n1', 'COc1n[nH]c2ccc(cc12)C1c2cnoc2NC(C)=C1[N+]#[C-]', 'Cc1cc(=O)n(nc1C(=O)Nc1ccc(Oc2ccnc3[nH]ccc23)c(F)c1)-c1ccc(F)cc1', 'C[C@H](c1cccc(c1)-c1ncc(OCC2CCN(C)CC2)cn1)n1cc(cc(F)c1=O)-c1cc(ccn1)C#N', 'CCn1cc(C(=O)Nc2ccc(Oc3ccnc4[nH]nc(N[C@@H](C)COC)c34)c(F)c2)c(=O)n(-c2ccc(F)cc2)c1=O', 'COc1cc2c(Oc3ccc(cc3F)N=Cc3c(O)n(-c4ccc(C)cc4)c(=O)[nH]c3=O)ccnc2cc1OCCCN1CCCC1', 'C[C@@H](c1cc2cccnc2cc1F)n1cnc2ncc(nc12)-c1ccc(C(N)=O)c(F)c1', '[O-][n+]1c(cccc1-c1ccccc1)C(=O)Nc1ccc(Oc2ccnc3[nH]ccc23)c(F)c1', 'COc1cc2nccc(Oc3ccc(NC(=O)C4(CC4)C(=O)Nc4ccc(F)cc4)cc3)c2cc1OC', 'C[C@H](C(=O)NN=C1C(=O)Nc2c1c(Cl)ccc2C)c1ccc(O)cc1', 'COc1cc2c(Oc3ccc(NC(=O)NN=Cc4ccc(F)cc4F)cc3F)ccnc2cc1OCCCN1CCC(C)CC1', 'COc1cc2c(Oc3ccc(NC(=O)C4(CC4)C(=O)NC4=CCC(F)C=C4)cc3F)ccnc2cc1OCCCN1CCOCC1', 'Fc1ccc(cc1)-n1c(=O)c(cn(CC2CC2)c1=O)C(=O)Nc1ccc(Oc2ccnc(NC(=O)N3CCC3)c2)c(F)c1', 'NC1CCC(CC1)=Cc1ccn2ncnc(Oc3ccc(NC(=O)NC(=O)Cc4ccc(F)cc4)cc3F)c12', 'CCC(c1ccc2ncccc2c1F)n1cnc2ncc(nc12)-c1ccc(C(N)=O)c(F)c1', 'Nc1ncnc2[nH]cc(-c3cc(F)c(NC(=O)c4cn(CC5CCOCC5)cc(-c5ccc(F)cc5)c4=O)cc3F)c12', 'Nc1nccc(Oc2ccc(NC(=O)c3c[nH]cc(-c4ccc(F)cc4)c3=O)cc2F)c1Cl', 'Fc1cc(NC(=O)c2cccn(-c3ccccc3)c2=O)ccc1Oc1ccc2nc(NC(=O)C3CC3)cn2c1', 'CN1CCN(CCOc2cnc(nc2)-c2cccc(Cn3nc(ccc3=O)-n3ccc4ccc(F)cc34)c2)CC1', 'Fc1cc(cn2c(Cc3ccc4ncccc4c3)cnc12)-c1cccc(c1)C#N', 'Nc1n[nH]c2cccc(-c3ccc(NC(=O)C4(CC4)C(=O)Nc4ccc(F)cc4)cc3F)c12', 'CO\\N=C(/C)c1ccc2ncc(Cc3c(F)cc4ncccc4c3F)n2n1', 'CNC(=O)c1ccccc1Nc1nc(Nc2ccc3CCN(CC(C)c3c2)C(C)=O)ncc1Cl', 'Fc1ccc(cc1)-n1c2ccccc2nc(C(=O)Nc2ccc(Oc3ccnc(NC(=O)C4CC4)c3)cc2)c1=O', 'Cn1cc(cn1)-c1ccc2nnc(Cc3cccc4c3cc[nH]c4=O)n2n1', 'COc1ccc2c(OCc3nnc4sc(nn34)-c3cnn(C)c3)ccnc2c1', 'Fc1ccc(CC(=O)NC(=O)Nc2ccc(Oc3ccnc4[nH]cc(-c5cccnc5)c34)c(F)c2)cc1', 'COc1cnc2ccc(cc2c1)[C@H](C)c1nnc2c(F)cc(cn12)-c1cc(C)no1', 'COCCOc1cnc2ccc(cc2c1)[C@H](C)n1nnc2ccn(-c3cc(C)ns3)c(=O)c12', 'Cn1cc(cn1)-c1cnc2nnn(CC3CCCN(C3)c3ncc(cn3)-c3cnn(CCO)c3)c2n1', 'C1CN(CCO1)c1cnc2ccc(Sc3nnc4ccc(cn34)-c3cn[nH]c3)cc2c1', 'Cc1[nH]nc2ccc(cc12)C1C2C(=O)OCC2=NC(=C1[N+]#[C-])c1ccc(F)cc1F', 'Fc1ccc(cc1C#N)-c1cnc2nnn(C[C@@H]3CN(CCO3)c3ncc(cn3)C3=CCNCC3)c2n1', 'COCCOc1cnc2ccc(cc2c1)[C@H](C)n1nnc2ccn(-c3cccs3)c(=O)c12', 'CC(=NNC(N)=O)c1ccc2ncc(C(O)c3c(F)cc4ncccc4c3F)n2n1', 'CNc1snc(SCc2nnc3ncc(nn23)-c2ccc(F)cc2)c1C(N)=O', 'Cc1n[nH]c2ccc(cc12)C1C2=C(COC2=O)N2CCOCC2=C1[N+]#[C-]', 'CCN1CCC(COc2cnc(-c3cccc(Cn4c(=O)ccn5c6cc(C#N)ccc6nc45)c3)nc2)CC1', 'Cc1c(OCC(O)CN2CCC(O)CC2)cn2ncnc(Oc3ccc(NC(=O)C4(CC4)C(=O)Nc4ccc(F)cc4)cc3F)c12', 'CNC(=O)c1ccc(s1)-c1ccc2nnc(COc3ccnc4cc(OC)ccc34)n2c1', 'Fc1cc(NC(=O)c2cc3cccnc3n(-c3ccc(Cl)cc3)c2=O)ccc1Oc1ccnc2[nH]ccc12', 'COc1cc2nccc(Oc3ccc(NC(=O)C(OC(=O)c4ccc(F)cc4)C(C)(C)C)cc3F)c2cc1OC', 'Cc1cc2ccnc(Nc3ccc(Oc4ccnc(N)c4I)c(F)c3)c2c(=O)n1-c1ccc(F)cc1', 'C\\C(=N/OCCCO)c1ccc2nnc(Cc3c(F)cc4ncccc4c3F)n2n1', 'COc1cc2c(Oc3ccc(NC(=O)c4nnn(c4C(F)(F)F)-c4ccc(F)c(F)c4)cc3F)ccnc2cc1OCCCN1CCN(C)CC1', 'CC(NC\\N=C\\c1cnn(C)c1)c1ccc2ncccc2c1', 'Clc1ccc(Cl)c(c1)C1=NN(CC1)C(=O)Cc1cccc(NC(=O)OCCCN2CCOCC2)c1', 'Cn1cc(cn1)-c1ccc2nnc(n2n1)C(F)(F)c1ccc2ncccc2c1', 'CCCNC(=O)c1cc(Oc2ccc(NC(=O)c3cc4cccnc4n(-c4ccc(F)cc4)c3=O)cc2)ccn1', 'COc1cnc2ccc(cc2c1)[C@H](C)c1nnc2ccc(nn12)-c1ccccc1', 'CN(C)CCCOc1cnc(nc1)-c1cccc(Cn2nc(ccc2=O)-c2cc(F)cc(F)c2)c1', 'CN1CCN(CC1)c1cnc2cc(cc(OCc3cccc(c3)[N+]([O-])=O)c2c1)C(F)(F)F', 'CC(c1ccc2ncccc2c1C)n1cnc2ncc(nc12)-c1cn[nH]c1', 'Fc1ccc(NC(=O)C2(CC2)C(=O)Nc2cc(F)c(Oc3ccnc(NC(=O)C4CC4)c3)cc2F)cc1', 'CNC(=O)c1ccc(cc1C(F)(F)F)-c1ccc(=O)n(CCc2ccc3ncc(cc3c2)-c2cnn(CCO)c2)n1', 'FC(F)(c1nnc2ncc(nn12)-c1ccccc1)c1ccc2ncccc2c1', 'C[C@@H](c1ccc2ncccc2c1)n1nnc2ncc(nc12)-c1cnn(CCO)c1', 'FC(F)(F)c1cc-2ccc1C(=O)NCCCCn1cc(cn1)-c1cnc3ccc(CCn4nc-2ccc4=O)cc3c1']
{'population_size': 120, 'offspring_size': 70, 'mutation_rate': 0.0}
seed 0
120
CNC(=S)c1ccc(-c2cnc3ncc(Cc4cc(Cl)c5ncccc5c4)n3n2)cc1F

Boltz running on GPU 1
11.22
Cn1cc(-c2ccc(=O)n(CC3CN(c4ncc(OCC5CCNCC5)cn4)CCO3)n2)cn1

Boltz running on GPU 1
9.79
Fc1cc(F)cc(-c2ccc3nnc(CNc4ccnc5cc(OCCn6cncn6)cnc45)n3n2)c1

Boltz running on GPU 1
10.94
COc1ccc2c(OCc3nnc4ncc(-c5ccccc5)nn34)ccnc2c1

Boltz running on GPU 1
10.4
CCN1Cc2c(ccc(F)c2C#N)O[C@@H](C)CNC(=O)c2c(N)nn3ccc1nc23

Boltz running on GPU 1
11.2
CC/C(=N\N(C(N)=O)c1ccc(Oc2ccnc3cc(OCCCN4CCCCC4)c(OC)cc23)c(F)c1)c1ccccc1

Boltz running on GPU 1
9.53
Cc1c(O)ccc2nc(-c3cc(-c4cnn(C5CCNCC5)c4)cnc3N)oc12

Boltz running on GPU 1
8.83
N=C(NNC(N)=O)c1cnc2nnn(Cc3ccc4ncccc4c3)c2n1

Boltz running on GPU 1
11.39
CC(=NNC(N)=O)c1cnc2nnn(Cc3cc4cccnc4cc3F)c2n1

Boltz running on GPU 1
11.67
CC(=NNC(N)=O)c1ccc2nnc([C@@H](C)c3ccc4ncccc4c3)n2n1

Boltz running on GPU 1
11.42
Found local copy...
10/1000 | avg_top1: 11.670 | avg_top10: 10.639 | avg_top100: 10.639 | avg_sa: 3.196 | div: 0.835
{'avg_top1': 11.67, 'avg_top10': 10.639, 'avg_top100': 10.639, 'auc_top1': 0.05835, 'auc_top10': 0.05319499999999999, 'auc_top100': 0.05319499999999999, 'avg_sa': 3.1963304505386185, 'diversity_top100': 0.8346533798907552, 'n_oracle': 10}
CCN1CCC(n2cc(-c3cnc4ccc5ccc(NS(=O)(=O)N(C)C)cc5c(=O)c4c3)cn2)CC1

Boltz running on GPU 1
11.1
Cc1c(C(=O)Nc2ccc(Oc3ccnc(NC(=O)C4CC4)c3)cc2)c(=O)n(-c2ccccc2)n1C

Boltz running on GPU 1
9.94
Fc1ccc(-c2cnc3nnc(C(F)(F)c4ccc5ncccc5c4)n3n2)cc1

Boltz running on GPU 1
10.61
OCCn1cc(-c2cnc3nnn(Cc4ccc5ncccc5c4)c3n2)cn1

Boltz running on GPU 1
10.74
CC(c1ccc2ncc(-c3cnn(C)c3)cc2c1)n1nnc2ncc(-c3ccncc3)nc21

Boltz running on GPU 1
10.95
CC(c1c(F)cc2ncc(-c3cnn(C)c3)cc2c1F)n1nnc2ncc(-c3ccc(C(N)=O)c(F)c3)nc21

Boltz running on GPU 1
11.86
COc1ccc2c(OCc3nnc4c(F)cc(-c5cc(C)cs5)cn34)ccnc2c1

Boltz running on GPU 2
11.52
NC(=O)NN=Cc1cnc2nnn(Cc3ccc4ncccc4c3)c2n1

Boltz running on GPU 1
11.05
C[C@@H](Oc1c[nH]c(=O)c(C(=O)NC2CCOCC2)c1)c1c(Cl)ccc(F)c1Cl

Boltz running on GPU 1
10.94
COc1ccc2c(Oc3ccc(NC(=O)c4c(C)n(CCO)n(-c5ccccc5)c4=O)nc3)ccnc2c1

Boltz running on GPU 1
10.34
20/1000 | avg_top1: 11.860 | avg_top10: 11.338 | avg_top100: 10.772 | avg_sa: 3.061 | div: 0.824
{'avg_top1': 11.86, 'avg_top10': 11.338, 'avg_top100': 10.772, 'auc_top1': 0.176, 'auc_top10': 0.16307999999999997, 'auc_top100': 0.16025, 'avg_sa': 3.0612029815217627, 'diversity_top100': 0.8240934320134673, 'n_oracle': 20}
CC(=O)NN=C(C)c1cnc2nnn(Cc3cc4cccnc4cc3F)c2n1

Boltz running on GPU 1
11.07
CC(N=O)c1ccc2nnc(Cc3c(F)cc4ncccc4c3F)n2n1

Boltz running on GPU 1
11.79
CC(c1c(F)cc2ncc(-c3cnn(C)c3)cc2c1F)n1nnc2ncc(-c3cnn(CCO)c3)nc21

Boltz running on GPU 1
11.72
Cn1cc(-c2ccc(=O)n(CCOc3ccnc4cc(OCc5ccc(C(=O)Nc6ccccc6N)cc5)ccc34)n2)cn1

Boltz running on GPU 1
9.42
CC(=NOC(N)=O)c1ccc2nnc([C@H](C)c3c(F)cc4ncccc4c3F)n2n1

Boltz running on GPU 1
11.2
Cc1c(C(=O)Nc2ccc(Oc3ccnc(NC(=O)C4CC4)c3)c(F)c2)c(=O)n(-c2ccccc2)n1C

Boltz running on GPU 1
10.25
O=C(Cc1ccc2c(c1)CCO2)N/N=C1\CNc2cc(C(=O)NCCCCN3CCC[C@H]3CO)cc(Br)c21

Boltz running on GPU 1
9.59
Cn1cc(-c2cnc3nnc(C(F)(F)c4ccc5ncccc5c4)n3n2)cn1

Boltz running on GPU 1
11.31
Cn1cc(-c2cnc3cnn(S(=O)(=O)c4cnc5ccc(-c6cnn(C)c6)cn45)c3c2)cn1

Boltz running on GPU 1
10.61
Cc1nc([C@H](C)NC(=O)c2ccc(-c3cnc4ncc(Cc5ccc6ncccc6c5)n4n3)cc2Cl)no1

Boltz running on GPU 1
10.52
30/1000 | avg_top1: 11.860 | avg_top10: 11.510 | avg_top100: 10.764 | avg_sa: 3.126 | div: 0.816
{'avg_top1': 11.86, 'avg_top10': 11.510000000000002, 'avg_top100': 10.764, 'auc_top1': 0.29460000000000003, 'auc_top10': 0.27732, 'auc_top100': 0.26793, 'avg_sa': 3.12557242125954, 'diversity_top100': 0.8158881682548839, 'n_oracle': 30}
O=C(NCCN1CCOCC1)Nc1nc2ccc(Sc3nnc4ccc(OC5CCCCC5)nn34)cc2s1

Boltz running on GPU 1
10.8
COc1ccc(-n2c(=O)c(C(=O)Nc3ccc(Oc4ccnc(N)c4Cl)c(F)c3)cc3ccccc32)cc1

Boltz running on GPU 1
9.56
C[C@@H](Oc1cc(C(=O)Nc2ccc(C(=O)N3CCN(C)CC3)cc2)nnc1N)c1c(Cl)ccc(F)c1Cl

Boltz running on GPU 1
11.17
COc1cc2nccc(Oc3ccc(NC(=O)c4c(I)ccn(-c5ccc(F)cc5)c4=O)cc3F)c2cc1OC

Boltz running on GPU 1
11.4
Cn1cc(-c2cnc3ccc4ccc(N)cc4c(=O)c3c2)cn1

Boltz running on GPU 1
10.8
Cc1cc(C)cc(-n2c(=O)c(C(=O)Nc3ccc(Oc4ccnc(N)c4Cl)c(F)c3)cc3ccccc32)c1

Boltz running on GPU 1
9.88
Cc1csc(-c2ccc3nnc(Cc4ccc5ncccc5c4)n3n2)c1

Boltz running on GPU 1
11.2
CN1C(=O)COc2c1cnc1ccc(Sc3nnc4c(F)cc(-c5cnn(C)c5)cn34)cc21

Boltz running on GPU 1
10.8
O=C(NCC1CCCCN1)c1ccc(-c2cc(F)c3ncc(Cc4ccc5ncccc5c4)n3c2)cc1F

Boltz running on GPU 1
10.9
O=[N+]([O-])c1cccc(CNc2cc(C(F)(F)F)cc3ncc(N4CCOCC4)cc23)c1

Boltz running on GPU 1
10.28
40/1000 | avg_top1: 11.860 | avg_top10: 11.530 | avg_top100: 10.743 | avg_sa: 3.043 | div: 0.823
{'avg_top1': 11.86, 'avg_top10': 11.53, 'avg_top100': 10.742750000000001, 'auc_top1': 0.41320000000000007, 'auc_top10': 0.39252, 'auc_top100': 0.37546375, 'avg_sa': 3.0431176690414206, 'diversity_top100': 0.8233563130071616, 'n_oracle': 40}
Cc1cc(C(=O)Nc2ccc(Oc3ccnc4[nH]nc(N[C@H](C)CO)c34)c(F)c2)c(=O)n(-c2ccc(F)cc2)c1

Boltz running on GPU 1
11.32
O=[N+]([O-])c1cccc(CNc2cc(C(F)(F)F)cc3ncc(N4CCN(S(=O)(=O)C5CC5)CC4)cc23)c1

Boltz running on GPU 1
9.52
O=c1ccc(-n2ccc3ccc(F)cc32)nn1CCOc1ccnc2cc(OCCCN3CCOCC3)ccc12

Boltz running on GPU 1
11.57
C[C@@H](Oc1cc(-c2ccn(C3CCNCC3)n2)cnc1N)c1c(Cl)ccc(F)c1Cl

Boltz running on GPU 1
10.19
Cn1ccnc1-c1cc2c(Oc3ccc(NC(=S)NC(=O)Cc4ccccc4)cc3F)ccnc2s1

Boltz running on GPU 1
9.43
Cn1cc(-c2ccc3nnc(Sc4ccc5ncc(NCCO)cc5c4)n3c2)cn1

Boltz running on GPU 1
11.09
C#Cc1c(Oc2ccc(NC(=O)c3cccn(-c4ccc(F)cc4)c3=O)cc2F)ccnc1N

Boltz running on GPU 1
9.93
N#Cc1cc(-c2cnc3nnn(CC4CN(c5ncc(-c6cnn(CCO)c6)cn5)CCO4)c3n2)ccc1F

Boltz running on GPU 1
9.83
COc1cc2c(Oc3ccc(NC(=O)c4nn(-c5ccccc5C(F)(F)F)c5ccccc5c4=O)cc3F)ccnc2cc1OCCCN1CCOCC1

Boltz running on GPU 1
10.04
CN1CCC(Nc2cnc3ccc(Sc4nnc5c(F)cc(-c6cnn(C)c6)cn45)cc3c2)CC1

Boltz running on GPU 1
11.09
50/1000 | avg_top1: 11.860 | avg_top10: 11.566 | avg_top100: 10.674 | avg_sa: 3.041 | div: 0.826
{'avg_top1': 11.86, 'avg_top10': 11.565999999999999, 'avg_top100': 10.6744, 'auc_top1': 0.5318, 'auc_top10': 0.508, 'auc_top100': 0.48254949999999996, 'avg_sa': 3.041323386589125, 'diversity_top100': 0.8261393238175742, 'n_oracle': 50}
Nc1n[nH]c2cccc(-c3ccc(NC(=O)C4(C(=O)Nc5ccc(F)cc5)CC4)cc3)c12

Boltz running on GPU 1
10.5
Cn1cc(-c2ccc3c(OCCn4c(=O)oc5cc(-c6cnn(C)c6)ccc54)ccnc3c2)cn1

Boltz running on GPU 1
10.47
Cn1cc(-c2cnc3ccc4ccc(CS(=O)(=O)NCc5ccccn5)cc4c(=O)c3c2)cn1

Boltz running on GPU 1
10.3
COc1cc(N2CCC(N3CCN(C)CC3)CC2)ccc1Nc1ncc(Cl)c(Nc2ccccc2N(C)S(C)(=O)=O)n1

Boltz running on GPU 1
10.95
Cc1csc(-c2ccc3nnc(Cc4ccc(O)cc4)n3n2)c1

Boltz running on GPU 1
9.47
CC(c1c(F)cc2ncccc2c1F)n1cnc2ncc(-c3cnn(C)c3)nc21

Boltz running on GPU 1
10.95
CC1=NC(C)=C(C#N)C(c2ccc3[nH]nc(OCCOC(C)C)c3c2)C1C#N

Boltz running on GPU 1
9.45
COc1cnc2ccc([C@H](C)c3nnc4c(F)cc(-c5cn(C)cn5)cn34)cc2c1

Boltz running on GPU 1
11.42
COCCOc1cnc2ccn([C@H](C)c3nnc4c(F)cc(-c5cc(C)no5)cn34)c(=O)c2c1

Boltz running on GPU 1
11.18
N#Cc1cccc(-c2ccc(=O)n(Cc3cccc(-c4ncc(OCCN5CCOCC5)cn4)c3)n2)c1

Boltz running on GPU 1
10.38
60/1000 | avg_top1: 11.860 | avg_top10: 11.576 | avg_top100: 10.646 | avg_sa: 3.039 | div: 0.833
{'avg_top1': 11.86, 'avg_top10': 11.576, 'avg_top100': 10.6465, 'auc_top1': 0.6504000000000001, 'auc_top10': 0.62371, 'auc_top100': 0.589154, 'avg_sa': 3.038787448506568, 'diversity_top100': 0.8325766679951144, 'n_oracle': 60}
[C-]#[N+]C1C(C)=NC2=C(C(=O)OC2)C1c1ccc2n[nH]c(C)c2c1

Boltz running on GPU 1
10.35
CC(c1c(F)cc2ncccc2c1F)n1cnc2ncc(-c3cnn(CCO)c3)nc21

Boltz running on GPU 1
11.12
CNC(=O)c1ccc(-c2ccc3nnc(Cc4ccc(O)cc4)n3n2)cc1Cl

Boltz running on GPU 1
10.6
[C-]#[N+]C1=C(C)Nc2oncc2C1c1ccc2[nH]nc(OC)c2c1

Boltz running on GPU 1
9.24
Cc1cc(=O)n(-c2ccc(F)cc2)nc1C(=O)Nc1ccc(Oc2ccnc3[nH]ccc23)c(F)c1

Boltz running on GPU 1
8.49
C[C@H](c1cccc(-c2ncc(OCC3CCN(C)CC3)cn2)c1)n1cc(-c2cc(C#N)ccn2)cc(F)c1=O

Boltz running on GPU 2
10.34
CCn1cc(C(=O)Nc2ccc(Oc3ccnc4[nH]nc(N[C@@H](C)COC)c34)c(F)c2)c(=O)n(-c2ccc(F)cc2)c1=O

Boltz running on GPU 1
10.63
COc1cc2c(Oc3ccc(N=Cc4c(O)n(-c5ccc(C)cc5)c(=O)[nH]c4=O)cc3F)ccnc2cc1OCCCN1CCCC1

Boltz running on GPU 1
10.35
C[C@@H](c1cc2cccnc2cc1F)n1cnc2ncc(-c3ccc(C(N)=O)c(F)c3)nc21

Boltz running on GPU 1
10.9
O=C(Nc1ccc(Oc2ccnc3[nH]ccc23)c(F)c1)c1cccc(-c2ccccc2)[n+]1[O-]

Boltz running on GPU 1
10.33
70/1000 | avg_top1: 11.860 | avg_top10: 11.576 | avg_top100: 10.588 | avg_sa: 3.075 | div: 0.835
{'avg_top1': 11.86, 'avg_top10': 11.576, 'avg_top100': 10.587714285714286, 'auc_top1': 0.7690000000000001, 'auc_top10': 0.7394700000000001, 'auc_top100': 0.6953250714285714, 'avg_sa': 3.0749616173239893, 'diversity_top100': 0.8347962600705654, 'n_oracle': 70}
COc1cc2nccc(Oc3ccc(NC(=O)C4(C(=O)Nc5ccc(F)cc5)CC4)cc3)c2cc1OC

Boltz running on GPU 1
10.3
Cc1ccc(Cl)c2c1NC(=O)C2=NNC(=O)[C@@H](C)c1ccc(O)cc1

Boltz running on GPU 1
9.62
COc1cc2c(Oc3ccc(NC(=O)NN=Cc4ccc(F)cc4F)cc3F)ccnc2cc1OCCCN1CCC(C)CC1

Boltz running on GPU 1
10.99
COc1cc2c(Oc3ccc(NC(=O)C4(C(=O)NC5=CCC(F)C=C5)CC4)cc3F)ccnc2cc1OCCCN1CCOCC1

Boltz running on GPU 1
11.36
O=C(Nc1ccc(Oc2ccnc(NC(=O)N3CCC3)c2)c(F)c1)c1cn(CC2CC2)c(=O)n(-c2ccc(F)cc2)c1=O

Boltz running on GPU 1
11.71
NC1CCC(=Cc2ccn3ncnc(Oc4ccc(NC(=O)NC(=O)Cc5ccc(F)cc5)cc4F)c23)CC1

Boltz running on GPU 1
8.97
CCC(c1ccc2ncccc2c1F)n1cnc2ncc(-c3ccc(C(N)=O)c(F)c3)nc21

Boltz running on GPU 1
10.71
Nc1ncnc2[nH]cc(-c3cc(F)c(NC(=O)c4cn(CC5CCOCC5)cc(-c5ccc(F)cc5)c4=O)cc3F)c12

Boltz running on GPU 1
11.42
Nc1nccc(Oc2ccc(NC(=O)c3c[nH]cc(-c4ccc(F)cc4)c3=O)cc2F)c1Cl

Boltz running on GPU 1
9.52
O=C(Nc1ccc(Oc2ccc3nc(NC(=O)C4CC4)cn3c2)c(F)c1)c1cccn(-c2ccccc2)c1=O

Boltz running on GPU 1
10.18
80/1000 | avg_top1: 11.860 | avg_top10: 11.610 | avg_top100: 10.574 | avg_sa: 3.063 | div: 0.834
{'avg_top1': 11.86, 'avg_top10': 11.61, 'avg_top100': 10.574, 'auc_top1': 0.8876000000000002, 'auc_top10': 0.8554, 'auc_top100': 0.8011336428571428, 'avg_sa': 3.063418382809787, 'diversity_top100': 0.8336594325423045, 'n_oracle': 80}
CN1CCN(CCOc2cnc(-c3cccc(Cn4nc(-n5ccc6ccc(F)cc65)ccc4=O)c3)nc2)CC1

Boltz running on GPU 1
11.18
N#Cc1cccc(-c2cc(F)c3ncc(Cc4ccc5ncccc5c4)n3c2)c1

Boltz running on GPU 1
11.07
Nc1n[nH]c2cccc(-c3ccc(NC(=O)C4(C(=O)Nc5ccc(F)cc5)CC4)cc3F)c12

Boltz running on GPU 1
10.58
CO/N=C(\C)c1ccc2ncc(Cc3c(F)cc4ncccc4c3F)n2n1

Boltz running on GPU 1
10.95
CNC(=O)c1ccccc1Nc1nc(Nc2ccc3c(c2)C(C)CN(C(C)=O)CC3)ncc1Cl

Boltz running on GPU 1
11.28
O=C(Nc1ccc(Oc2ccnc(NC(=O)C3CC3)c2)cc1)c1nc2ccccc2n(-c2ccc(F)cc2)c1=O

Boltz running on GPU 1
10.76
Cn1cc(-c2ccc3nnc(Cc4cccc5c(=O)[nH]ccc45)n3n2)cn1

Boltz running on GPU 1
10.34
COc1ccc2c(OCc3nnc4sc(-c5cnn(C)c5)nn34)ccnc2c1

Boltz running on GPU 1
10.23
O=C(Cc1ccc(F)cc1)NC(=O)Nc1ccc(Oc2ccnc3[nH]cc(-c4cccnc4)c23)c(F)c1

Boltz running on GPU 1
9.82
COc1cnc2ccc([C@H](C)c3nnc4c(F)cc(-c5cc(C)no5)cn34)cc2c1

Boltz running on GPU 1
11.12
90/1000 | avg_top1: 11.860 | avg_top10: 11.610 | avg_top100: 10.592 | avg_sa: 3.033 | div: 0.834
{'avg_top1': 11.86, 'avg_top10': 11.61, 'avg_top100': 10.591666666666667, 'auc_top1': 1.0062000000000002, 'auc_top10': 0.9715000000000001, 'auc_top100': 0.9069619761904762, 'avg_sa': 3.0334189944182386, 'diversity_top100': 0.8338699370084478, 'n_oracle': 90}
COCCOc1cnc2ccc([C@H](C)n3nnc4ccn(-c5cc(C)ns5)c(=O)c43)cc2c1

Boltz running on GPU 1
11.39
Cn1cc(-c2cnc3nnn(CC4CCCN(c5ncc(-c6cnn(CCO)c6)cn5)C4)c3n2)cn1

Boltz running on GPU 1
10.76
c1cc2ncc(N3CCOCC3)cc2cc1Sc1nnc2ccc(-c3cn[nH]c3)cn12

Boltz running on GPU 1
11.09
[C-]#[N+]C1=C(c2ccc(F)cc2F)N=C2COC(=O)C2C1c1ccc2n[nH]c(C)c2c1

Boltz running on GPU 1
10.1
N#Cc1cc(-c2cnc3nnn(C[C@@H]4CN(c5ncc(C6=CCNCC6)cn5)CCO4)c3n2)ccc1F

Boltz running on GPU 1
10.56
COCCOc1cnc2ccc([C@H](C)n3nnc4ccn(-c5cccs5)c(=O)c43)cc2c1

Boltz running on GPU 1
10.93
CC(=NNC(N)=O)c1ccc2ncc(C(O)c3c(F)cc4ncccc4c3F)n2n1

Boltz running on GPU 1
11.5
CNc1snc(SCc2nnc3ncc(-c4ccc(F)cc4)nn23)c1C(N)=O

Boltz running on GPU 1
10.65
[C-]#[N+]C1=C2COCCN2C2=C(C(=O)OC2)C1c1ccc2[nH]nc(C)c2c1

Boltz running on GPU 1
10.9
CCN1CCC(COc2cnc(-c3cccc(Cn4c(=O)ccn5c6cc(C#N)ccc6nc45)c3)nc2)CC1

Boltz running on GPU 1
10.31
100/1000 | avg_top1: 11.860 | avg_top10: 11.618 | avg_top100: 10.614 | avg_sa: 3.082 | div: 0.838
{'avg_top1': 11.86, 'avg_top10': 11.618, 'avg_top100': 10.614399999999998, 'auc_top1': 1.1248000000000002, 'auc_top10': 1.0876400000000002, 'auc_top100': 1.0129923095238096, 'avg_sa': 3.082062843785506, 'diversity_top100': 0.8382016552845918, 'n_oracle': 100}
Cc1c(OCC(O)CN2CCC(O)CC2)cn2ncnc(Oc3ccc(NC(=O)C4(C(=O)Nc5ccc(F)cc5)CC4)cc3F)c12

Boltz running on GPU 1
10.89
CNC(=O)c1ccc(-c2ccc3nnc(COc4ccnc5cc(OC)ccc45)n3c2)s1

Boltz running on GPU 1
11.21
O=C(Nc1ccc(Oc2ccnc3[nH]ccc23)c(F)c1)c1cc2cccnc2n(-c2ccc(Cl)cc2)c1=O

Boltz running on GPU 1
9.44
COc1cc2nccc(Oc3ccc(NC(=O)C(OC(=O)c4ccc(F)cc4)C(C)(C)C)cc3F)c2cc1OC

Boltz running on GPU 1
10.46
Cc1cc2ccnc(Nc3ccc(Oc4ccnc(N)c4I)c(F)c3)c2c(=O)n1-c1ccc(F)cc1

Boltz running on GPU 1
10.92
C/C(=N\OCCCO)c1ccc2nnc(Cc3c(F)cc4ncccc4c3F)n2n1

Boltz running on GPU 1
11.55
COc1cc2c(Oc3ccc(NC(=O)c4nnn(-c5ccc(F)c(F)c5)c4C(F)(F)F)cc3F)ccnc2cc1OCCCN1CCN(C)CC1

Boltz running on GPU 1
9.72
CC(NC/N=C/c1cnn(C)c1)c1ccc2ncccc2c1

Boltz running on GPU 1
10.19
O=C(Nc1cccc(CC(=O)N2CCC(c3cc(Cl)ccc3Cl)=N2)c1)OCCCN1CCOCC1

Boltz running on GPU 1
9.06
Cn1cc(-c2ccc3nnc(C(F)(F)c4ccc5ncccc5c4)n3n2)cn1

Boltz running on GPU 1
10.42
110/1000 | avg_top1: 11.860 | avg_top10: 11.631 | avg_top100: 10.735 | avg_sa: 3.080 | div: 0.833
{'avg_top1': 11.86, 'avg_top10': 11.631, 'avg_top100': 10.734999999999998, 'auc_top1': 1.2434, 'auc_top10': 1.2038850000000003, 'auc_top100': 1.1197393095238097, 'avg_sa': 3.0795202990448725, 'diversity_top100': 0.8331934213459512, 'n_oracle': 110}
CCCNC(=O)c1cc(Oc2ccc(NC(=O)c3cc4cccnc4n(-c4ccc(F)cc4)c3=O)cc2)ccn1

Boltz running on GPU 1
9.45
COc1cnc2ccc([C@H](C)c3nnc4ccc(-c5ccccc5)nn34)cc2c1

Boltz running on GPU 1
10.63
CN(C)CCCOc1cnc(-c2cccc(Cn3nc(-c4cc(F)cc(F)c4)ccc3=O)c2)nc1

Boltz running on GPU 1
9.74
CN1CCN(c2cnc3cc(C(F)(F)F)cc(OCc4cccc([N+](=O)[O-])c4)c3c2)CC1

Boltz running on GPU 1
9.79
Cc1c(C(C)n2cnc3ncc(-c4cn[nH]c4)nc32)ccc2ncccc12

Boltz running on GPU 1
9.93
O=C(Nc1cc(Oc2cc(F)c(NC(=O)C3(C(=O)Nc4ccc(F)cc4)CC3)cc2F)ccn1)C1CC1

Boltz running on GPU 1
10.49
CNC(=O)c1ccc(-c2ccc(=O)n(CCc3ccc4ncc(-c5cnn(CCO)c5)cc4c3)n2)cc1C(F)(F)F

Boltz running on GPU 1
11.8
FC(F)(c1ccc2ncccc2c1)c1nnc2ncc(-c3ccccc3)nn12

Boltz running on GPU 1
10.21
C[C@@H](c1ccc2ncccc2c1)n1nnc2ncc(-c3cnn(CCO)c3)nc21

Boltz running on GPU 1
11.3
O=C1NCCCCn2cc(cn2)-c2cnc3ccc(cc3c2)CCn2nc(ccc2=O)-c2ccc1c(C(F)(F)F)c2

Boltz running on GPU 1
12.05
120/1000 | avg_top1: 12.050 | avg_top10: 11.724 | avg_top100: 10.828 | avg_sa: 3.110 | div: 0.831
{'avg_top1': 12.05, 'avg_top10': 11.724, 'avg_top100': 10.828499999999998, 'auc_top1': 1.36295, 'auc_top10': 1.3206600000000004, 'auc_top100': 1.2275568095238096, 'avg_sa': 3.110125665722502, 'diversity_top100': 0.8309237393984792, 'n_oracle': 120}
[(11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (9.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12dd0>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12e40>), (10.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12eb0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (9.53, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f90>), (8.83, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05040>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b050b0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05200>), (9.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05270>), (10.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b052e0>), (10.74, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05350>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b053c0>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05510>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05580>), (10.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b055f0>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05660>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (9.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b057b0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (10.25, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05890>), (9.59, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05900>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (10.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b059e0>), (10.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05a50>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ac0>), (9.56, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05b30>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ba0>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c80>), (9.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05cf0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05dd0>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05e40>), (10.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05eb0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (9.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f90>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (10.19, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c0b0>), (9.43, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c120>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c190>), (9.93, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c200>), (9.83, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c270>), (10.04, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c2e0>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c350>), (10.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c3c0>), (10.47, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c430>), (10.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c4a0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c510>), (9.47, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c580>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c5f0>), (9.45, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c660>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c740>), (10.38, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c7b0>), (10.35, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c820>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c890>), (10.6, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c900>), (9.24, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c970>), (8.49, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c9e0>), (10.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ca50>), (10.63, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cac0>), (10.35, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cb30>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cba0>), (10.33, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cc10>), (10.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cc80>), (9.62, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ccf0>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cd60>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (8.97, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ceb0>), (10.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf20>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (9.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc040>), (10.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc0b0>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc190>), (10.58, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc200>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc270>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc350>), (10.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc3c0>), (10.23, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc430>), (9.82, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc4a0>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc5f0>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc660>), (10.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc6d0>), (10.56, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc740>), (10.93, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc7b0>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc820>), (10.65, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc890>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc900>), (10.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc970>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc9e0>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (9.44, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcac0>), (10.46, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcb30>), (10.92, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcba0>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (9.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc80>), (10.19, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afccf0>), (9.06, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcd60>), (10.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcdd0>), (9.45, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afce40>), (10.63, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afceb0>), (9.74, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcf20>), (9.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcf90>), (9.93, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15040>), (10.49, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (10.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15190>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>)]
[0.008829848350104308, 0.007704475521179474, 0.008609495628356787, 0.008184529664986572, 0.008814108869979484, 0.007499862279556777, 0.006948980475187979, 0.008963633931165301, 0.009183986652912821, 0.008987243151352535, 0.00873541146935537, 0.007822521622115646, 0.008349794206297211, 0.00845210082710856, 0.008617365368419198, 0.009333511714098637, 0.00906594055197665, 0.008696062769043314, 0.008609495628356787, 0.008137311224612103, 0.008711802249168137, 0.009278423533661758, 0.009223335353224879, 0.007413295138870252, 0.008814108869979484, 0.0080664835640504, 0.007547080719931246, 0.008900676010666011, 0.008349794206297211, 0.008278966545735508, 0.008499319267483029, 0.007523471499744013, 0.00879049964979225, 0.008971503671227713, 0.008499319267483029, 0.007775303181741178, 0.008814108869979484, 0.008499319267483029, 0.008578016668107142, 0.008090092784237633, 0.008908545750728422, 0.007491992539494366, 0.009105289252288708, 0.008019265123675932, 0.007421164878932664, 0.00872754172929296, 0.007814651882053235, 0.00773595448142912, 0.007901219022739759, 0.00872754172929296, 0.008263227065610685, 0.008239617845423451, 0.008105832264362458, 0.008617365368419198, 0.00745264383918231, 0.008617365368419198, 0.007436904359057486, 0.008987243151352535, 0.008798369389854661, 0.00816879018486175, 0.008145180964674514, 0.008751150949480193, 0.0083419244662348, 0.007271639817746847, 0.006681409313065991, 0.008137311224612103, 0.008365533686422035, 0.008145180964674514, 0.008578016668107142, 0.008129441484549691, 0.008105832264362458, 0.00757068994011848, 0.008648844328668845, 0.008940024710978068, 0.009215465613162468, 0.007059156836061739, 0.008428491606921325, 0.008987243151352535, 0.007491992539494366, 0.00801139538361352, 0.008798369389854661, 0.008711802249168137, 0.008326184986109977, 0.008617365368419198, 0.008877066790478776, 0.008467840307233382, 0.008137311224612103, 0.008050744083925577, 0.007728084741366709, 0.008751150949480193, 0.008963633931165301, 0.008467840307233382, 0.00872754172929296, 0.007948437463114228, 0.008310445505985154, 0.008601625888294375, 0.009050201071851827, 0.008381273166546858, 0.008578016668107142, 0.008113702004424869, 0.00857014692804473, 0.008821978610041897, 0.007429034618995075, 0.00823174810536104, 0.008593756148231964, 0.009089549772163886, 0.007649387340742595, 0.008019265123675932, 0.007129984496623442, 0.008200269145111395, 0.007436904359057486, 0.008365533686422035, 0.007665126820867418, 0.007704475521179474, 0.007814651882053235, 0.008255357325548274, 0.009286293273724171, 0.008035004603800754, 0.0088928062706036, 0.009483036775284455]
[(10.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ca50>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc350>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cd60>), (10.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ca50>), (10.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c3c0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (10.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c4a0>), (9.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc80>), (10.49, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c190>), (10.56, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc740>), (9.24, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c970>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cba0>), (10.63, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afceb0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05200>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12e40>), (10.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc970>), (10.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc6d0>), (10.92, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcba0>), (10.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15190>), (10.93, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc7b0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c5f0>), (10.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc6d0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b053c0>), (10.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf20>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (9.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcf90>), (10.6, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c900>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c350>), (9.56, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05b30>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc660>), (9.47, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c580>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cba0>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12e40>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (9.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcf90>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc190>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (10.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c4a0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc270>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b050b0>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05dd0>), (10.19, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c0b0>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cba0>), (10.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c4a0>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (10.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b052e0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05580>), (9.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc040>), (10.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05a50>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c5f0>), (10.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b059e0>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05580>), (10.74, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05350>), (9.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc040>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (10.19, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c0b0>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc900>), (9.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05270>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc9e0>), (9.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05270>), (10.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15190>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c5f0>), (10.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15190>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cd60>), (9.82, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc4a0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b053c0>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c80>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b053c0>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05dd0>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c350>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b050b0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc270>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cba0>), (9.56, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05b30>), (10.6, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c900>), (9.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05270>), (10.33, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cc10>), (10.63, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afceb0>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05dd0>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc350>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c80>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (10.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cc80>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12e40>), (10.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc970>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc190>), (9.56, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05b30>), (9.82, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc4a0>), (10.49, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (10.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05a50>), (10.33, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cc10>), (9.62, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ccf0>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cba0>), (9.59, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05900>), (9.93, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15040>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c510>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc270>), (9.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05cf0>), (10.65, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc890>), (9.83, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c270>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (10.33, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cc10>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc270>)]
Bin size: 100
===== for SMILES O=C1NCCCCn2cc(cn2)-c2cnc3ccc(cc3c2)CCn2nc(ccc2=O)-c2ccc1c(C(F)(F)F)c2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][N][=C][C][=C][C][=Branch1][Branch2][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][=C][Ring2][Ring2][C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][Ring2][Ring1][C][=C][Ring2][Ring1][=Branch1]
generated smiles O=C(O)C1=C2C=CC3=C1C=CC4=CC5=CC=C(N(C)C)C=C5N=C4C3=C2
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=C][N][=C][Branch1][#Branch2][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=N][=C][Ring1][P][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][F]
generated smiles C12C=CC(F)=C(C3=CC=C4C=CN=C(NC5=CC=CC=C5)C4=C3C=C1)C=C2C6=CC=CC=C6F
added!
adding editted molecule!!!
===== for SMILES CNC(=O)c1ccc(-c2ccc(=O)n(CCc3ccc4ncc(-c5cnn(CCO)c5)cc4c3)n2)cc1C(F)(F)F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][#C][C][C][=C][C][=Branch1][C][=O][N][Branch2][Ring1][S][C][C][C][=C][C][=C][N][=C][C][Branch1][=N][C][C][=N][N][Branch1][Ring2][C][C][O][C][=Ring1][Branch2][=C][C][Ring1][=C][=C][Ring2][Ring1][C][N][=Ring2][Ring1][O][C][=C][Ring2][Ring1][P][C][Branch1][C][F][Branch1][C][F][F]<eom>
Output: 
output selfies [C][N][C][=Branch1][C][=O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][C][=Branch1][C][=O][N][Ring1][O][C][C][O][C][C][O][C][C][N][C][C][=C][N][Branch1][P][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][Ring1][=C][C][=Ring1][S][Ring2][Ring1][Ring1]
generated smiles CNC(=O)C1=CC=CC=C1C2=CC=CC(=C2)C(C(F)(F)F)=CC(=O)NCCOCCOCCN3C4C=CN(C5=NC6=CC=CC=C6C=C54)C3
added!
adding editted molecule!!!
===== for SMILES CC(N=O)C1=NN2C(=NN=C2CC2=C(F)C=C3N=CC=CC3=C2F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch1][Ring1][N][=O][C][=N][N][C][=Branch2][Ring1][=Branch2][=N][N][=C][Ring1][Branch1][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch2][Ring2][C][C][=C][C][=C][C][Branch2][Ring1][=Branch1][N][C][=Branch1][C][=O][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][=C][Ring2][Ring1][Ring1][=C][C][=C][Ring2][Ring1][#Branch2][F]
generated smiles C1C(C)(C2)C=NC(C=CC=CC1(NC(=O)C3=NC4=CC=CC=C4C=C3F)C)C=C2F
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Ring2][S][=C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][N][=C][Ring1][O][C][=C][C][=C][Branch1][S][N][C][C][N][Branch1][=Branch1][C][C][C][Ring1][Ring1][C][C][Ring1][=Branch2][C][=C][Ring1][#C][C][=C][Ring2][Ring1][P][C][=C][Ring2][Ring2][=Branch1][C]
generated smiles CC1=CC(F)=CC(=C12)C=NC=NC(=CC3=C(F)C=CC=C3N=CC4=CC=C(N5CCN(C6CC6)CC5)C=C4C=C2C)CC
added!
adding editted molecule!!!
===== for SMILES O=C(NC1=CC=C(OC2=CC=NC(NC(=O)N3CCC3)=C2)C(F)=C1)C1=CN(CC2CC2)C(=O)N(C2=CC=C(F)C=C2)C1=O =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][Branch2][Ring2][#Branch1][N][C][=C][C][=C][Branch2][Ring1][#Branch1][O][C][=C][C][=N][C][Branch1][N][N][C][=Branch1][C][=O][N][C][C][C][Ring1][Ring2][=C][Ring1][=N][C][Branch1][C][F][=C][Ring2][Ring1][Branch1][C][=C][N][Branch1][#Branch1][C][C][C][C][Ring1][Ring1][C][=Branch1][C][=O][N][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][Ring2][Ring1][C][=O]<eom>
Output: 
output selfies [C][C][C][C][=N][C][Branch2][Ring2][=Branch1][C][=C][C][=C][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][Cl][C][=C][Ring2][Ring1][C][=C][C][=C][Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][C][C][N][C][C][C][C][C][Ring1][=Branch1]
generated smiles C1CC2C=NC3(C=CC=C(NC4=CC=C(C(F)(F)F)C=C4Cl)C3=CC=C2)C(=O)N1CCCN5CCCCC5
added!
adding editted molecule!!!
===== for SMILES CC(=NNC(N)=O)C1=CN=C2N=NN(CC3=CC4=CC=CN=C4C=C3F)C2=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Branch2][=N][N][C][Branch1][C][N][=O][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch1][=C][N][C][=C][C][=C][Branch1][C][N][C][=C][Ring1][#Branch1][F][=N][C][=C][Ring1][#C][C][=C][C][=C][N][=C][N][=C][Branch1][C][N][N][=C][Ring1][#Branch1][Ring1][#Branch2]
generated smiles CC(C)(C)C1=NC(NC2=CC=C(N)C=C2F)=NC=C1C=C3C=CN=CN=C(N)N=C3
added!
adding editted molecule!!!
===== for SMILES O=c1ccc(-n2ccc3ccc(F)cc32)nn1CCOc1ccnc2cc(OCCCN3CCOCC3)ccc12 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][C][=C][C][Branch1][P][N][C][=C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][Ring1][#Branch2][=N][N][Ring1][S][C][C][O][C][=C][C][=N][C][=C][C][Branch1][=N][O][C][C][C][N][C][C][O][C][C][Ring1][=Branch1][=C][C][=C][Ring2][Ring1][Ring2][Ring1][S]<eom>
Output: 
output selfies [O][=C][Branch2][Ring1][N][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][Ring1][S][N][C][C][C][N][C][C][O]
generated smiles O=C(C1=CC=CC(F)=C1NC2=CC=C(F)C=C2)CCNCCO
added!
adding editted molecule!!!
===== for SMILES C/C(=N\OCCCO)C1=NN2C(=NN=C2CC2=C(F)C=C3N=CC=CC3=C2F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][/C][=Branch1][#Branch1][=N][\O][C][C][C][O][C][=N][N][C][=Branch2][Ring1][=Branch2][=N][N][=C][Ring1][Branch1][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][C][=C][Ring1][Branch2][C][=C][C][=C][N][=C][Branch1][#Branch2][N][C][C][C][O][C][C][Ring1][=Branch1][N][=C][Ring1][=N][N][=C][Ring1][P][N].[H+1]
generated smiles CC1=C(F)C(F)=CC=C1C2=CC3=CN=C(NC4CCOCC4)N=C3N=C2N.[H+1]
added!
adding editted molecule!!!
===== for SMILES COC1=CC=C2C(=C1)N=CC=C2OCC1=NN=C2C(F)=CC(C3=CC(C)=CS3)=CN12 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][N][=C][C][=C][Ring1][#Branch1][O][C][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][C][Branch1][C][C][=C][S][Ring1][=Branch1][=C][N][Ring1][S][Ring1][=N]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][Branch2][Ring1][=N][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1][Ring1][S][=C][C][Branch1][Ring1][O][C][=C][Ring2][Ring1][=Branch2][O][C]
generated smiles C1OC=CC=CC2(C3=CC=CC(F)=C3NC4=CC=C(Cl)C=C42)C=C1OC
added!
adding editted molecule!!!
===== for SMILES CC(=NNC(N)=O)c1ccc2ncc(C(O)c3c(F)cc4ncccc4c3F)n2n1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Branch2][=N][N][C][Branch1][C][N][=O][C][C][=C][C][=N][C][=C][Branch2][Ring1][#Branch1][C][Branch1][C][O][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][N][Ring2][Ring1][Ring1][N][=Ring2][Ring1][#Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][N][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][=C][Branch1][=Branch1][C][=Branch1][C][=O][O][C][=C][Ring1][=Branch2][C][=C][Ring1][S][C][=C][Ring2][Ring1][Branch2][N][C][=N][C][=C][C][Branch1][=Branch2][C][=C][C][=C][N][=C][Ring1][=Branch1][=N][Ring1][N]
generated smiles CC=C1C(F)=C(NC=C2C=C(C=CC3=CC=C(C(=O)O)C=C3)C=C2)C=C1NC4=NC=CC(C5=CC=CN=C5)=N4
added!
adding editted molecule!!!
===== for SMILES CC(=NNC(N)=O)c1ccc2nnc([C@@H](C)c3ccc4ncccc4c3)n2n1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Branch2][=N][N][C][Branch1][C][N][=O][C][C][=C][C][=N][N][=C][Branch2][Ring1][Ring1][C@@H1][Branch1][C][C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][N][Ring1][P][N][=Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][C][S][C][=N][C][Branch2][Ring1][Ring2][N][C][C][=C][C][=C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring1][N][=C][N][=C][N][Branch1][=Branch1][C][Branch1][C][C][C][C][Ring1][Branch2][=N][Ring2][Ring1][=Branch2]
generated smiles CCCSC=NC(NCC1=CC=C(C2=CC=CC=C2)C=C1)=C3N=CN(C(C)C)C3=N
added!
adding editted molecule!!!
===== for SMILES NC1=NC=NC2=C1C(C1=CC(F)=C(NC(=O)C3=CN(CC4CCOCC4)C=C(C4=CC=C(F)C=C4)C3=O)C=C1F)=CN2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=N][C][=N][C][=C][Ring1][=Branch1][C][Branch2][Branch1][Branch2][C][=C][C][Branch1][C][F][=C][Branch2][Ring2][Branch2][N][C][=Branch1][C][=O][C][=C][N][Branch1][#Branch2][C][C][C][C][O][C][C][Ring1][=Branch1][C][=C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][Ring2][Ring1][Ring2][=O][C][=C][Ring2][Ring1][#C][F][=C][N][Ring2][Ring2][Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][=N][N][C][=N][C][=C][C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][=C][C][=C][Ring1][N][C][=C][Ring2][Ring1][C][F][C][=C][Ring2][Ring1][#Branch2][C][Branch1][C][N][=O]
generated smiles C1C=CC(F)=C(NC=NC2=CC(C3=CC=CC=C3)=CC=C2C=CF)C1C(N)=O
added!
adding editted molecule!!!
===== for SMILES COc1cnc2ccc([C@H](C)c3nnc4c(F)cc(-c5cn(C)cn5)cn34)cc2c1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][N][=C][C][=C][C][Branch2][Ring1][P][C@H1][Branch1][C][C][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][N][Branch1][C][C][C][=N][Ring1][=Branch1][=C][N][Ring1][S][Ring1][=N][=C][C][Ring2][Ring1][Branch2][=C][Ring2][Ring1][N]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][=C][C][C][=Branch2][Ring1][#Branch2][=C][N][Branch1][=Branch1][C][C][C][Ring1][Ring1][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][P][C][Ring2][Ring1][Branch2]
generated smiles C1OC2=CC=CC(=C2)C(F)=CCC1=CN(C3CC3)C4=CC=CC=C4C5=CC=CC=C5
added!
adding editted molecule!!!
===== for SMILES COC1=CC2=NC=CC(OC3=CC=C(NC(=O)C4=C(I)C=CN(C5=CC=C(F)C=C5)C4=O)C=C3F)=C2C=C1OC =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=N][C][=C][C][Branch2][Ring2][=N][O][C][=C][C][=C][Branch2][Ring1][#C][N][C][=Branch1][C][=O][C][=C][Branch1][C][I][C][=C][N][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][Ring1][=C][=O][C][=C][Ring2][Ring1][Branch2][F][=C][Ring2][Ring1][S][C][=C][Ring2][Ring2][Ring2][O][C]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring2][N][N][C][=C][C][=C][Branch2][Ring1][S][N][C][=Branch1][C][=O][C][=C][C][=C][Branch1][P][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2][F][C][=C][Ring1][S][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][#C][N][C][=C][C][=C][C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][=C][Ring1][N]
generated smiles CC1=CC(F)=C(NC=CC=C(NC(=O)C=CC=C(C2=CC=C(F)C(F)=C2F)CC)C)C=C1NC3=CC=CC(C4=CC=CC=C4)=C3
added!
adding editted molecule!!!
===== for SMILES COCCOc1cnc2ccc([C@H](C)n3nnc4ccn(-c5cc(C)ns5)c(=O)c43)cc2c1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][C][O][C][=C][N][=C][C][=C][C][Branch2][Ring1][P][C@H1][Branch1][C][C][N][N][=N][C][C][=C][N][Branch1][O][C][=C][C][Branch1][C][C][=N][S][Ring1][=Branch1][C][=Branch1][C][=O][C][=Ring1][=N][Ring1][S][=C][C][Ring2][Ring1][Branch2][=C][Ring2][Ring1][N]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][Branch2][Ring1][#C][N][C][=Branch1][C][=O][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][=Branch1][Ring2][=N][Ring1][=Branch1][C][C][O][Ring1][=Branch1][C][=C][Ring1][S][C][Ring2][Ring1][#Branch1][=C][Ring2][Ring1][N][=C][Ring2][Ring1][S]
generated smiles CCOC(=O)C1=CC=C2C(C=CC3=CN=C(NC(=O)NC=CC=C(C4=CC=C5C(=N4)CCO5)C)C3=C2)=C1
added!
adding editted molecule!!!
===== for SMILES N=C(NNC(N)=O)C1=CN=C2N=NN(CC3=CC=C4N=CC=CC4=C3)C2=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][=C][Branch1][Branch2][N][N][C][Branch1][C][N][=O][C][=C][N][=C][N][=N][N][Branch1][S][C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][Ring1][S][=N][Ring2][Ring1][Ring2]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][=N][N][C][=N][C][=N][C][=C][Ring1][=Branch1][N][=C][N][Ring1][Branch1][C][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][N][N][C][=Branch1][C][=O][/C][=C][/C][N][Branch1][C][C][C]
generated smiles C1C2=CC(F)=C(NC3=NC=NC4=C3N=CN4CC5=CC=CC=C5C=C2)C=C1NC(=O)/C=C/CN(C)C
added!
adding editted molecule!!!
===== for SMILES COC1=CC2=C(OC3=CC=C(NC(=O)C4(C(=O)NC5=CCC(F)C=C5)CC4)C=C3F)C=CN=C2C=C1OCCCN1CCOCC1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=C][Branch2][Ring2][O][O][C][=C][C][=C][Branch2][Ring1][=N][N][C][=Branch1][C][=O][C][Branch1][P][C][=Branch1][C][=O][N][C][=C][C][C][Branch1][C][F][C][=C][Ring1][#Branch1][C][C][Ring1][=N][C][=C][Ring2][Ring1][=Branch1][F][C][=C][N][=C][Ring2][Ring1][=C][C][=C][Ring2][Ring2][C][O][C][C][C][N][C][C][O][C][C][Ring1][=Branch1]<eom>
Output: 
output selfies [N][C][=C][C][=C][Branch1][C][F][C][Branch2][Ring1][=N][C][=C][C][=C][N][=C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][=C][C][Ring1][=N][=C][Ring1][P][=C][Ring2][Ring1][=Branch2]
generated smiles N1C=CC=C(F)C1C2=CC=C3N=C(C4=CC=C(F)C=C4)C=CC3=C2C
added!
adding editted molecule!!!
===== for SMILES Cc1cc(C(=O)Nc2ccc(Oc3ccnc4[nH]nc(N[C@H](C)CO)c34)c(F)c2)c(=O)n(-c2ccc(F)cc2)c1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][C][=C][Branch2][Ring2][N][C][=Branch1][C][=O][N][C][=C][C][=C][Branch2][Ring1][Branch2][O][C][=C][C][=N][C][NH1][N][=C][Branch1][Branch2][N][C@H1][Branch1][C][C][C][O][C][Ring1][=C][=Ring1][#Branch2][C][Branch1][C][F][=C][Ring2][Ring1][=Branch1][C][=Branch1][C][=O][N][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][=Ring2][Ring2][#Branch1]<eom>
Output: 
output selfies [C][C][C][=C][Branch1][C][F][C][Branch2][Ring1][#C][C][=C][C][=C][Branch2][Ring1][Ring1][O][C][=C][N][=C][C][=C][Branch1][C][F][C][=C][C][Ring1][#Branch1][=N][Ring1][O][C][=C][Ring2][Ring1][C][=C][C][=C][Ring2][Ring1][=Branch2][C][Branch1][C][F][Branch1][C][F][F]
generated smiles CCC1=C(F)C(C2=CC=C(OC3=CN=C4C=C(F)C=CC4=N3)C=C2)=CC=C1C(F)(F)F
added!
adding editted molecule!!!
===== for SMILES Cn1cc(-c2cnc3nnc(C(F)(F)c4ccc5ncccc5c4)n3n2)cn1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=C][Branch2][Ring2][Branch2][C][C][=N][C][=N][N][=C][Branch2][Ring1][=Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][N][Ring2][Ring1][C][N][=Ring2][Ring1][=Branch1][C][=N][Ring2][Ring1][O]<eom>
Output: 
output selfies [C][C][Branch1][C][F][Branch1][C][F][C][=C][C][=C][C][Branch1][C][F][=C][C][=C][Branch1][#Branch2][N][C][=N][C][=N][C][N][Ring1][=Branch1][C][Ring1][=N][=C][Ring1][P].[N][C][=N][C][Branch1][C][F][=N][C][N][=C][NH1][C][Ring1][#Branch2][=Ring1][Branch1]
generated smiles CC(F)(F)C=C1C=CC(F)=CC=C(NC2=NC=NCN2)C=C1.NC3=NC(F)=NC=4N=C[NH1]C3=4
added!
adding editted molecule!!!
===== for SMILES C[C@@H](c1ccc2ncccc2c1)n1nnc2ncc(-c3cnn(CCO)c3)nc21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C@@H1][Branch1][#C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][N][N][=N][C][=N][C][=C][Branch1][=N][C][C][=N][N][Branch1][Ring2][C][C][O][C][=Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][C][=N][N][=N][C][=C][C][=C][Branch1][S][C][=C][C][=C][C][=C][C][=C][N][=C][Ring1][#Branch2][Ring1][=Branch1][C][=C][Ring2][Ring1][Ring1][Ring1][#C]
generated smiles CC1=CC(F)=CC=C1C2=NN=NC3=CC=C(C4=CC=CC5=CC=CN=C45)C23
added!
adding editted molecule!!!
===== for SMILES CNC(=O)c1ccccc1Nc1nc(Nc2ccc3c(c2)C(C)CN(C(C)=O)CC3)ncc1Cl =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][C][=C][Ring1][=Branch1][N][C][=N][C][Branch2][Ring1][=N][N][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][C][C][N][Branch1][=Branch1][C][Branch1][C][C][=O][C][C][Ring1][N][=N][C][=C][Ring2][Ring1][=Branch1][Cl]<eom>
Output: 
output selfies [C][C][=Branch1][C][=O][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Ring1][=Branch1][N][Ring1][=Branch2][C][C][C][N][C][C][N][Branch2][Ring1][Ring2][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][Ring1][=C][Ring1][=Branch1][C][C][Ring2][Ring1][Ring2]
generated smiles CC(=O)NC1=CC=CC=C1C2=CC3=CC=CC=C3N2CCCN4CCN(C5=NC6=CC=CC=C6C7=CC=CC=C57)CC4
added!
adding editted molecule!!!
===== for SMILES CNC(=S)C1=CC=C(C2=NN3C(CC4=CC(Cl)=C5N=CC=CC5=C4)=CN=C3N=C2)C=C1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=S][C][=C][C][=C][Branch2][Ring2][Ring2][C][=N][N][C][Branch2][Ring1][Ring1][C][C][=C][C][Branch1][C][Cl][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][=C][N][=C][Ring1][P][N][=C][Ring2][Ring1][Branch1][C][=C][Ring2][Ring1][O][F]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][=C][C][=C][C][Branch1][C][F][=C][C][=N][C][Branch2][Ring2][S][N][C][=Branch1][C][=O][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][Branch1][C][Cl][C][=C][C][Ring1][#Branch1][=C][Branch1][C][Cl][C][=C][C][Ring1][N][=C][Ring2][Ring1][C][Ring1][P][=C][Ring2][Ring1][#Branch2][Ring2][Ring1][S]
generated smiles CC(C)C=CC=CC(F)=CC=NC(NC(=O)NC1=CC2=C3C=C1C=C4C=C(Cl)C=CC4=C(Cl)C=CC=C23)S
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=CN3C(=NN=C3COC3=CC=NC4=CC(OC)=CC=C43)C=C2)S1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][=Branch1][C][=C][N][C][=Branch2][Ring1][#Branch2][=N][N][=C][Ring1][Branch1][C][O][C][=C][C][=N][C][=C][C][Branch1][Ring1][O][C][=C][C][=C][Ring1][Branch2][Ring1][N][C][=C][Ring2][Ring1][#Branch1][S][Ring2][Ring1][N]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][N][=C][Branch2][Ring1][N][N][C][=C][C][=C][Branch1][=N][C][=C][C][=N][C][=C][C][=C][Ring1][=Branch1][Ring1][=Branch2][C][Branch1][C][Cl][=C][Ring1][S][C][Ring2][Ring1][#Branch1][=C][Ring2][Ring1][O][=C][Ring2][Ring1][S]
generated smiles C12OC=CC=CC2C=CC=CN=CN=C1N3C=CC=C(C=CC4=NC=CC=C4)C(Cl)=C3C
added!
adding editted molecule!!!
===== for SMILES CC(=NOC(N)=O)C1=NN2C(=NN=C2[C@H](C)C2=C(F)C=C3N=CC=CC3=C2F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Branch2][=N][O][C][Branch1][C][N][=O][C][=N][N][C][=Branch2][Ring1][N][=N][N][=C][Ring1][Branch1][C@H1][Branch1][C][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=C][Ring2][Ring1][#Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][=N][C][Branch1][=N][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][=C][S][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][P]
generated smiles CC(C)C=NC(NC1=CC=C(F)C=C1)=CSC2=CC=CC=C2
added!
adding editted molecule!!!
===== for SMILES CCN1CC2=C(C=CC(F)=C2C#N)O[C@@H](C)CNC(=O)C2=C3N=C1C=CN3N=C2N =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][N][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][#N][O][C@@H1][Branch1][C][C][C][N][C][=Branch1][C][=O][C][=C][N][=C][Ring2][Ring1][=Branch1][C][=C][N][Ring1][=Branch1][N][=C][Ring1][=Branch2][N]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][C][=C][Branch1][C][C][N][C][=C][C][=C][Branch2][Ring1][P][C][=Branch1][C][=O][N][C][C][C][C@@H1][C@H1][Branch1][Ring2][C][Ring1][=Branch1][C][C@@H1][C][=C][C][=C][C][NH1][C][=C][Branch1][=Branch1][C][Ring1][=Branch2][=Ring1][Branch1][C][C@H1][Ring1][N][Ring1][P][C][=C][Ring2][Ring1][#Branch2][N]
generated smiles CCOC(=O)C=C(C)NC=CC=C(C(=O)NC1CC2[C@@H1][C@H1](C1)C[C@@H1]3C4=CC=CC=5[NH1]C=CC4=5)C[C@H1]32
added!
adding editted molecule!!!
===== for SMILES Cc1csc(-c2ccc3nnc(Cc4ccc5ncccc5c4)n3n2)c1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=C][S][C][Branch2][Ring1][S][C][C][=C][C][=N][N][=C][Branch1][S][C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][N][Ring1][S][N][=Ring2][Ring1][Ring2][=C][Ring2][Ring1][=Branch2]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][C][=C][C][Branch1][C][C][=C][Ring1][Branch2][N][C][=N][C][=N][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][Ring1][#Branch2]
generated smiles CC1=CC(C)=CC(C)=C1NC2=NC=NC3=C2C=CC4=CC=CN=C43
added!
adding editted molecule!!!
===== for SMILES COCCOc1cnc2ccn([C@H](C)c3nnc4c(F)cc(-c5cc(C)no5)cn34)c(=O)c2c1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][C][O][C][=C][N][=C][C][=C][N][Branch2][Ring1][P][C@H1][Branch1][C][C][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][C][Branch1][C][C][=N][O][Ring1][=Branch1][=C][N][Ring1][S][Ring1][=N][C][=Branch1][C][=O][C][Ring2][Ring1][=Branch2][=C][Ring2][Ring1][=N]<eom>
Output: 
output selfies [C][C][O][C][=N][C][Branch1][C][F][=C][C][=Branch1][Ring2][=N][Ring1][#Branch1][C][=C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][Ring1][N][=N][C][=Ring1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][N][Ring1][O][C][C][C][C][N][C][C][O]
generated smiles CCOC1=NC(F)=CC(=N1)C=CC2=CC=C(F)C=C2C=NCC3=CC=CC=C3C(=O)NCCCCNCCO
added!
adding editted molecule!!!
===== for SMILES CN1CCN(CCOC2=CN=C(C3=CC=CC(CN4N=C(N5C=CC6=CC=C(F)C=C65)C=CC4=O)=C3)N=C2)CC1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][C][N][Branch2][Branch1][Branch2][C][C][O][C][=C][N][=C][Branch2][Ring2][=Branch2][C][=C][C][=C][C][Branch2][Ring1][=N][C][N][N][=C][Branch1][P][N][C][=C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][Ring1][#Branch2][C][=C][C][Ring1][S][=O][=C][Ring2][Ring1][Branch2][N][=C][Ring2][Ring1][=C][C][C][Ring2][Ring2][#Branch1]<eom>
Output: 
output selfies [C][N][C][C][N][Branch2][Ring2][#C][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][=C][C][=C][Branch2][Ring1][Ring2][N][C][C][N][Branch1][N][C][C][C][C][=C][C][=C][C][=C][Ring1][=Branch1][C][C][Ring1][#C][C][=C][Ring2][Ring1][=Branch1][C][C][Ring2][Ring1][P]
generated smiles C1N2CCN1C3=CC=CC(F)=C3C=CC=C2NCCN(CCCC4=CC=CC=C4)CC
added!
adding editted molecule!!!
===== for SMILES C[C@@H](Oc1cc(C(=O)Nc2ccc(C(=O)N3CCN(C)CC3)cc2)nnc1N)c1c(Cl)ccc(F)c1Cl =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C@@H1][Branch2][Ring2][=N][O][C][=C][C][Branch2][Ring1][#C][C][=Branch1][C][=O][N][C][=C][C][=C][Branch1][S][C][=Branch1][C][=O][N][C][C][N][Branch1][C][C][C][C][Ring1][#Branch1][C][=C][Ring1][#C][=N][N][=C][Ring2][Ring1][Branch2][N][C][=C][Branch1][C][Cl][C][=C][C][Branch1][C][F][=C][Ring1][Branch2][Cl]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][Cl][=C][Branch2][Ring1][P][N][C][=N][C][=C][C][Branch1][P][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2][Cl][=C][N][=C][Ring1][S][C][=C][Ring2][Ring1][=Branch2][N][C][C][N][Branch1][C][C][C][C][Ring1][#Branch1]
generated smiles C1C=CC(Cl)=C(NC2=NC=CC(C3=CC=C(F)C(F)=C3Cl)N=C2C=C1)N4CCN(C)CC4
added!
adding editted molecule!!!
fp_scores_to_top [0.0440251572327044, 0.18867924528301888, 0.2346368715083799, 0.22285714285714286, 0.1568627450980392, 0.23255813953488372, 0.08527131782945736, 0.2611111111111111, 0.2153846153846154, 0.3269230769230769, 0.06299212598425197, 0.2554347826086957, 0.10759493670886076, 0.20833333333333334, 0.24324324324324326, 0.25142857142857145, 0.10416666666666667, 0.09375, 0.07602339181286549, 0.16149068322981366, 0.06870229007633588, 0.18674698795180722, 0.20118343195266272, 0.23121387283236994, 0.26785714285714285, 0.1917808219178082, 0.25149700598802394, 0.05555555555555555, 0.06976744186046512, 0.16149068322981366, 0.06716417910447761, 0.031007751937984496, 0.17567567567567569, 0.14465408805031446, 0.1509433962264151, 0.25, 0.16083916083916083, 0.26875, 0.21428571428571427, 0.2236024844720497, 0.19473684210526315, 0.17073170731707318, 0.18404907975460122, 0.16352201257861634, 0.2154696132596685, 0.060810810810810814, 0.1497005988023952, 0.16666666666666666, 0.34591194968553457, 0.12418300653594772, 0.28313253012048195, 0.19387755102040816, 0.12244897959183673, 0.11564625850340136, 0.22485207100591717, 0.06428571428571428, 0.08552631578947369, 0.10638297872340426, 0.21052631578947367, 0.06428571428571428, 0.1450381679389313, 0.17088607594936708, 0.1419753086419753, 0.1780821917808219, 0.11724137931034483, 0.14743589743589744, 0.06201550387596899, 0.1411042944785276, 0.16759776536312848, 0.2774566473988439, 0.19254658385093168, 0.1978021978021978, 0.2102803738317757, 0.16, 0.22959183673469388, 0.23369565217391305, 0.14772727272727273, 0.12962962962962962, 0.18072289156626506, 0.15568862275449102, 0.19689119170984457, 0.14606741573033707, 0.16470588235294117, 0.19767441860465115, 0.18357487922705315, 0.21621621621621623, 0.16230366492146597, 0.22580645161290322, 0.3057324840764331, 0.15934065934065933, 0.2085889570552147, 0.21, 0.1306532663316583, 0.12169312169312169, 0.11728395061728394, 0.11734693877551021, 0.16875, 0.1330049261083744, 0.15469613259668508, 0.1807909604519774]
top 70 [48  9 88 50 69 37 24  7 11 26 15 35 14  2 75  5 23 74 87 54 39  3 85 44
  8 38 58 72 91 90 13 22 71 83 80 40 51 70 25  1 21 42 84 99 78 63 32 61
 41 96 68 47 82 43 86 29 19 36 73 89  4 79 98 34 46 76 65 81 60 33]
len offspring_mol 70
190
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
CN1C(=O)COc2c1cnc1ccc(Sc3ccc4ncc(-c5cnn(C)c5)cc4c3)cc21

Boltz running on GPU 1
10.41
CC(Cc1c(F)cc2ncccc2c1F)c1ccc2ncc(-c3cnn(C)c3)cc2c1

Boltz running on GPU 1
10.17
CCc1c(C(F)(F)F)ccc(-c2ccc(Oc3cnc4cc(F)ccc4n3)cc2)c1F

Boltz running on GPU 1
8.36
CC1C=CCN(c2cnc3ccc(Sc4nnc5ccc(-c6cn[nH]c6)cn45)cc3c2)C1

Boltz running on GPU 1
10.8
CCN1CCC(C(F)(c2ccc3ncccc3c2)c2nnc3ncc(-c4ccccc4)nn23)CC1

Boltz running on GPU 1
9.72
Fc1cc2ncccc2c(F)c1Cc1ccc2ncc(N3CCOCC3)cc2c1

Boltz running on GPU 1
9.71
CN1C(=O)COc2c1cnc1ccc(Sc3nnc4c(F)cc(-c5cnn(F)c5)cn34)cc21

Boltz running on GPU 1
10.88
NC(=O)c1ccc(-c2cnc3ncn([C@@H](c4ccc(O)cc4)c4cc5cccnc5cc4F)c3n2)cc1F

Boltz running on GPU 1
10.18
O=C(Nc1ccc(Oc2ccnc(NC(=O)N3CCC3)c2)c(F)c1)c1ccnc2[nH]cc(-c3cccnc3)c12

Boltz running on GPU 1
9.51
Fc1ccc(-c2cnc3nnc(C(F)(F)Cc4c(F)cc5ncccc5c4F)n3n2)cc1

Boltz running on GPU 1
9.24
130/1000 | avg_top1: 12.050 | avg_top10: 11.724 | avg_top100: 10.860 | avg_sa: 3.120 | div: 0.829
{'avg_top1': 12.05, 'avg_top10': 11.724, 'avg_top100': 10.8604, 'auc_top1': 1.48345, 'auc_top10': 1.4379000000000004, 'auc_top100': 1.3360013095238097, 'avg_sa': 3.1203488273683364, 'diversity_top100': 0.8292160105637161, 'n_oracle': 130}
Fc1cc(Nc2ccc3ncccc3c2)ccc1Oc1ccnc2[nH]cc(-c3cccnc3)c12

Boltz running on GPU 1
10.03
Fc1cc(F)cc(-c2ccc3nnc(CNc4ccnc5cc(OCCCc6ccc7ncccc7c6)cnc45)n3n2)c1

Boltz running on GPU 1
10.37
Nc1nccc(Oc2ccc(NC(=O)C3=C(F)c4ncc(Cc5ccc6ncccc6c5)n4C3)cc2F)c1Cl

Boltz running on GPU 1
10.74
CNC(=O)c1ccc(-c2cc(F)c3nnc(Sc4ccc5ncc6c(c5c4)OCC(=O)N6C)n3c2)s1

Boltz running on GPU 2
11.71
O=C1N(CCCN2CCCCC2)CCC2C=CC=C3C(Nc4ccc(C(F)(F)F)cc4Cl)=CC=CC13N=C2

Boltz running on GPU 1
7.89
C[C@@H](c1cc2cccnc2cc1C#N)n1cnc2ncc(-c3ccc(C(N)=O)c(F)c3)nc21

Boltz running on GPU 1
10.1
CC(c1c(F)cc2ncc(F)cc2c1F)n1nnc2ncc(-c3ccc(C(N)=O)c(F)c3)nc21

Boltz running on GPU 1
11.66
CCC1=Cc2c(F)cccc2N=Cc2ccc(N3CCN(C4CC4)CC3)cc2C=C(C)c2c(C)cc(F)cc2C=NC=N1

Boltz running on GPU 1
8.19
Cc1c(C2NC=CC=C2F)ccc2nc(-c3ccc(F)cc3)ccc12

Boltz running on GPU 1
7.09
Clc1cc(C[C@@H]2CN(c3ncc(C4=CCNCC4)cn3)CCO2)cc2cccnc12

Boltz running on GPU 1
9.38
140/1000 | avg_top1: 12.050 | avg_top10: 11.754 | avg_top100: 10.905 | avg_sa: 3.127 | div: 0.827
{'avg_top1': 12.05, 'avg_top10': 11.754, 'avg_top100': 10.905100000000003, 'auc_top1': 1.60395, 'auc_top10': 1.5552900000000005, 'auc_top100': 1.4448288095238098, 'avg_sa': 3.127294932198664, 'diversity_top100': 0.8267684371524205, 'n_oracle': 140}
Cc1ccc(Nc2nccc3cc(C)n(-c4ccc(F)cc4)c(=O)c23)cc1F

Boltz running on GPU 1
7.14
O=C1OCC2=NC(c3ccc(F)cc3F)C(Oc3ccnc4[nH]cc(-c5cccnc5)c34)=C12

Boltz running on GPU 1
11.44
CCOC(=O)c1ccc2cc3c(NC(=O)NC=CC=C(C)c4ccc5c(n4)CCO5)ncc-3ccc2c1

Boltz running on GPU 1
8.45
Cc1cc2ccnc(Nc3ccc(Oc4ccnc(N)c4I)c(F)c3)c2c(=O)n1-c1ccc(O)cc1

Boltz running on GPU 1
9.78
Nc1[nH]c2[nH]cc(-c3cc(F)c(NC(=O)c4cn(CC5CCOCC5)cc(-c5ccc(F)cc5)c4=O)cc3F)c2c1N

Boltz running on GPU 1
11.28
N#Cc1cnc2nnc(C(F)(F)c3ccc4ncccc4c3)n2n1

Boltz running on GPU 1
9.94
Cc1c(C(=O)n2cc(-c3cc(C#N)ccn3)cc(F)c2=O)c(=O)n(-c2ccccc2)n1C

Boltz running on GPU 1
7.85
CNC(=O)c1ccccc1-c1cccc(C(=CC(=O)NCCOCCOCCN2CN3C=CC2c2cc4ccccc4nc23)C(F)(F)F)c1

Boltz running on GPU 1
[Errno 2] No such file or directory: '/data/boltz/results/boltz_results_c-met_CNC(=O)c1ccccc1-c1cccc(C(=CC(=O)NCCOCCOCCN2CN3C=CC2c2cc4ccccc4nc23)C(F)(F)F)c1/predictions/c-met_CNC(=O)c1ccccc1-c1cccc(C(=CC(=O)NCCOCCOCCN2CN3C=CC2c2cc4ccccc4nc23)C(F)(F)F)c1/affinity_c-met_CNC(=O)c1ccccc1-c1cccc(C(=CC(=O)NCCOCCOCCN2CN3C=CC2c2cc4ccccc4nc23)C(F)(F)F)c1.json'
-0.0
CC(=O)Nc1ccccc1-c1cc2ccccc2n1CCCN1CCN(c2nc3ccccc3c3ccccc23)CC1

Boltz running on GPU 1
7.54
Cc1cc(F)ccc1C1=NN=NC2=CC=C(c3cccc4cccnc34)C21

Boltz running on GPU 1
7.81
150/1000 | avg_top1: 12.050 | avg_top10: 11.754 | avg_top100: 10.929 | avg_sa: 3.132 | div: 0.829
{'avg_top1': 12.05, 'avg_top10': 11.754, 'avg_top100': 10.928800000000003, 'auc_top1': 1.72445, 'auc_top10': 1.6728300000000005, 'auc_top100': 1.5539983095238097, 'avg_sa': 3.1322859743759834, 'diversity_top100': 0.8292034760060262, 'n_oracle': 150}
Already in buffer
[C-]#[N+]C1=C(c2ccc(F)cc2C)N=C2COC(=O)C2C1c1ccc2n[nH]c(C)c2c1

Boltz running on GPU 1
9.66
FC1=C2C=C(c3ccccc3F)C(C=C1)C=Cc1c2ccc2ccnc(Nc3ccccc3)c12

Boltz running on GPU 1
7.82
FC1=CCC(=CN(c2ccccc2-c2ccccc2)C2CC2)COc2cccc1c2

Boltz running on GPU 1
6.59
CC=C1C(Nc2nccc(-c3cccnc3)n2)=CC(NC=C2C=CC(C=Cc3ccc(C(=O)O)cc3)=C2)=C1F

Boltz running on GPU 1
10.08
C/C(=N\OCS(=O)(=O)NCc1ccccn1)c1ccc2ncc(Cc3c(F)cc4ncccc4c3F)n2n1

Boltz running on GPU 1
10.88
CN1CCN(C2CCN(c3ccc(Nc4ncc(Cl)c(Nc5ccccc5N(C)S(C)(=O)=O)n4)c(F)c3)CC2)CC1

Boltz running on GPU 1
9.8
CN(C)c1ccc2cc3c(nc2c1)-c1cc2ccc1c(c2C(=O)O)C=C3

Boltz running on GPU 1
[Errno 2] No such file or directory: '/data/boltz/results/boltz_results_c-met_CN(C)c1ccc2cc3c(nc2c1)-c1cc2ccc1c(c2C(=O)O)C=C3/predictions/c-met_CN(C)c1ccc2cc3c(nc2c1)-c1cc2ccc1c(c2C(=O)O)C=C3/affinity_c-met_CN(C)c1ccc2cc3c(nc2c1)-c1cc2ccc1c(c2C(=O)O)C=C3.json'
-0.0
Cn1cc(-c2ccc3ncc(S(=O)(=O)C#N)n3c2)cn1

Boltz running on GPU 1
7.75
CN1C(=O)COc2c1cnc1ccc(Sc3ccnc(N)c3Cl)cc21

Boltz running on GPU 1
9.62
O=C1OCC2C(SCc3nnc4ncc(-c5ccc(F)cc5)nn34)=N[SH]=C12

Boltz running on GPU 1
8.7
160/1000 | avg_top1: 12.050 | avg_top10: 11.754 | avg_top100: 10.936 | avg_sa: 3.140 | div: 0.829
{'avg_top1': 12.05, 'avg_top10': 11.754, 'avg_top100': 10.935800000000002, 'auc_top1': 1.84495, 'auc_top10': 1.7903700000000002, 'auc_top100': 1.6633213095238097, 'avg_sa': 3.139507078961983, 'diversity_top100': 0.8287776305007302, 'n_oracle': 160}
CO/N=C(\C)c1ccc2ncc(Cc3ccc4ncccc4c3F)n2n1

Boltz running on GPU 1
10.37
CCC(=CC=CC(=O)NC(C)=CC=CNc1cc(Nc2cccc(-c3ccccc3)c2)c(C)cc1F)c1ccc(F)c(F)c1F

Boltz running on GPU 1
7.75
CN1CCN(C2=C(Cl)C=CCC=CC3=NC(c4ccc(F)c(F)c4Cl)C=CN=C3N2)CC1

Boltz running on GPU 1
8.95
Cc1c(-c2cc3cnc(NC4CCOCC4)nc3nc2N)ccc(F)c1F.[H+]

Boltz running on GPU 1
[Errno 2] No such file or directory: '/data/boltz/results/boltz_results_c-met_Cc1c(-c2cc3cnc(NC4CCOCC4)nc3nc2N)ccc(F)c1F.[H+]/predictions/c-met_Cc1c(-c2cc3cnc(NC4CCOCC4)nc3nc2N)ccc(F)c1F.[H+]/affinity_c-met_Cc1c(-c2cc3cnc(NC4CCOCC4)nc3nc2N)ccc(F)c1F.[H+].json'
-0.0
NC(=O)c1ccc(-c2cnc3c(n2)CC=N3)cc1F

Boltz running on GPU 1
7.6
CC1=Nc2ncc(-c3ccc(C(N)=O)c(F)c3)nc2C1

Boltz running on GPU 1
7.66
Cc1c(C(=O)Nc2ccc(F)cc2)c(=O)n(-c2ccccc2)n1C

Boltz running on GPU 1
8.22
CC(=NF)c1ccc2nnc(Cc3c(F)cc4ncccc4c3F)n2n1

Boltz running on GPU 1
11.04
Cc1cc(C)c(Nc2ncnc3c2ccc2cccnc23)c(C)c1

Boltz running on GPU 1
7.46
C[C@@H](Oc1ccc(NC(=O)NN=Cc2ccc(F)cc2F)cc1F)c1c(Cl)ccc(F)c1Cl

Boltz running on GPU 1
8.2
170/1000 | avg_top1: 12.050 | avg_top10: 11.754 | avg_top100: 10.946 | avg_sa: 3.134 | div: 0.828
{'avg_top1': 12.05, 'avg_top10': 11.754, 'avg_top100': 10.9461, 'auc_top1': 1.9654500000000001, 'auc_top10': 1.9079100000000002, 'auc_top100': 1.7727308095238097, 'avg_sa': 3.1344229041539338, 'diversity_top100': 0.827804185058829, 'n_oracle': 170}
O=C(Nc1cc(Oc2ccc(NC3=CCC(F)C=C3)cc2)ccn1)C1CC1

Boltz running on GPU 1
10.08
NC(=O)C1CC=CC(F)=C1NC=Nc1cc(-c2ccccc2)ccc1C=CF

Boltz running on GPU 1
8.45
Cc1c(C(=O)Nc2ccc(O)cc2)c(=O)n(-c2ccccc2)n1C

Boltz running on GPU 1
7.5
CN(C)C/C=C/C(=O)NC1=CC2=C(F)C=C(C=Cc3ccccc3Cn3cnc4c(ncnc43)N2)C1

Boltz running on GPU 1
9.5
C[C@@H](Oc1cc(C2=NCC(F)=C2)cnc1N)c1c(Cl)ccc(F)c1Cl

Boltz running on GPU 1
9.36
Cc1ccc(Cl)c2c1NC(=O)C2=NNC(=O)[C@@H](F)c1ccc(O)cc1

Boltz running on GPU 1
9.46
Cc1ccc2ncc3c(c2c1)OCC(=O)N3C

Boltz running on GPU 1
8.12
CC12C=NC(C=CC=CC(C)(NC(=O)c3nc4ccccc4cc3F)C1)C=C(F)C2

Boltz running on GPU 1
8.29
CC(F)(F)C=C1C=CC(F)=CC=C(NC2=NC=NCN2)C=C1.Nc1nc(F)nc2nc[nH]c12

Boltz running on GPU 1
[Errno 2] No such file or directory: '/data/boltz/results/boltz_results_c-met_CC(F)(F)C=C1C=CC(F)=CC=C(NC2=NC=NCN2)C=C1.Nc1nc(F)nc2nc[nH]c12/predictions/c-met_CC(F)(F)C=C1C=CC(F)=CC=C(NC2=NC=NCN2)C=C1.Nc1nc(F)nc2nc[nH]c12/affinity_c-met_CC(F)(F)C=C1C=CC(F)=CC=C(NC2=NC=NCN2)C=C1.Nc1nc(F)nc2nc[nH]c12.json'
-0.0
CN1C(=O)COc2c1cnc1ccc(SNC(N)=O)cc21

Boltz running on GPU 1
8.81
180/1000 | avg_top1: 12.050 | avg_top10: 11.754 | avg_top100: 10.946 | avg_sa: 3.134 | div: 0.828
{'avg_top1': 12.05, 'avg_top10': 11.754, 'avg_top100': 10.9461, 'auc_top1': 2.08595, 'auc_top10': 2.02545, 'auc_top100': 1.8821918095238097, 'avg_sa': 3.1344229041539338, 'diversity_top100': 0.827804185058829, 'n_oracle': 180}
COC1=CC2(C=CC=COC1)c1cc(Cl)ccc1Nc1c(F)cccc12

Boltz running on GPU 1
7.82
CCN(CCCc1ccccc1)CCNC1=CC=Cc2c(F)cccc2N2CCN1C2

Boltz running on GPU 1
7.38
CC(c1c(F)cc2ncccc2c1F)N1C=NC2=NC=C(F)C21

Boltz running on GPU 1
10.12
C[C@@H](Oc1c[nH]c(=O)c(C(=O)NC2CCOCC2)c1)c1ccc(F)cc1

Boltz running on GPU 1
8.28
CC(C)(C)c1nc(Nc2ccc(N)cc2F)ncc1C=C1C=CN=CN=C(N)N=C1

Boltz running on GPU 1
9.76
Cn1cc(NC(=O)C2(C(=O)Nc3ccc(F)cc3)CC2)cn1

Boltz running on GPU 1
7.15
CCCSC=NC(NCc1ccc(-c2ccccc2)cc1)=C1N=CN(C(C)C)C1=N

Boltz running on GPU 1
6.36
Cc1ccc2ncccc2c1

Boltz running on GPU 1
5.22
O=C(CCn1cncn1)c1cccc(-c2ccccc2)[n+]1[O-]

Boltz running on GPU 1
7.07
[(12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc820>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b050b0>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c740>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ba0>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c890>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05200>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c190>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c350>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc660>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05660>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc190>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05510>), (11.04, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b3c0>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cd60>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b053c0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c510>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c5f0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc270>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12e40>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05580>), (10.93, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc7b0>), (10.92, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcba0>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05e40>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cba0>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc900>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc9e0>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c75f0>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9add0>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ac0>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c80>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05dd0>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17900>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc350>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc5f0>), (10.74, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05350>), (10.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa0b0>), (10.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf20>), (10.65, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc890>), (10.63, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cac0>), (10.63, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afceb0>), (10.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b052e0>), (10.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b059e0>), (10.6, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c900>), (10.58, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc200>), (10.56, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc740>), (10.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05a50>), (10.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c3c0>), (10.49, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (10.47, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c430>), (10.46, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcb30>), (10.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcdd0>), (10.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15c10>), (10.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12eb0>), (10.38, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c7b0>), (10.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa580>), (10.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b0b0>), (10.35, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c820>), (10.35, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cb30>), (10.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b055f0>), (10.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ca50>), (10.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc3c0>), (10.33, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cc10>), (10.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc970>), (10.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c4a0>), (10.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cc80>), (10.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05eb0>), (10.25, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05890>), (10.23, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc430>), (10.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15190>), (10.19, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c0b0>), (10.19, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afccf0>), (10.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9aba0>), (10.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc0b0>), (10.18, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7c10>), (10.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15660>), (10.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ba50>), (10.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc6d0>), (10.1, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa350>), (10.08, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ad60>), (10.08, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b510>), (10.04, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c2e0>), (10.03, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa190>), (9.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05270>), (9.94, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dc80>), (9.93, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c200>), (9.93, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15040>), (9.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05cf0>), (9.83, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c270>), (9.82, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc4a0>)]
[0.00930121263111497, 0.009154554506642175, 0.009108241414703398, 0.009100522566046933, 0.009046490625451695, 0.009038771776795232, 0.009038771776795232, 0.009007896382169379, 0.009000177533512918, 0.008930707895604751, 0.008915270198291825, 0.008892113652322436, 0.008876675955009511, 0.008830362863070733, 0.008814925165757808, 0.008814925165757808, 0.008814925165757808, 0.008799487468444882, 0.008791768619788419, 0.008791768619788419, 0.00876861207381903, 0.008737736679193179, 0.008730017830536715, 0.008722298981880254, 0.008706861284567326, 0.008706861284567326, 0.00866054819262855, 0.008652829343972088, 0.008645110495315623, 0.008645110495315623, 0.008645110495315623, 0.008629672798002698, 0.008629672798002698, 0.008621953949346235, 0.00858335970606392, 0.00858335970606392, 0.008567922008750995, 0.008560203160094532, 0.008560203160094532, 0.008560203160094532, 0.008544765462781606, 0.008544765462781606, 0.008529327765468681, 0.008521608916812216, 0.008483014673529903, 0.008452139278904052, 0.008452139278904052, 0.008452139278904052, 0.008452139278904052, 0.008444420430247589, 0.008444420430247589, 0.008436701581591126, 0.008428982732934662, 0.008413545035621738, 0.008413545035621738, 0.008413545035621738, 0.008405826186965275, 0.008398107338308812, 0.008398107338308812, 0.008336356549057108, 0.008336356549057108, 0.008336356549057108, 0.008336356549057108, 0.008305481154431256, 0.008305481154431256, 0.008290043457118331, 0.008290043457118331, 0.008266886911148944, 0.008220573819210165, 0.00820513612189724, 0.00820513612189724, 0.008189698424584313, 0.008189698424584313, 0.00818197957592785, 0.008166541878614925, 0.008151104181301999, 0.008120228786676146, 0.008104791089363222, 0.008097072240706759, 0.008081634543393834, 0.008073915694737371, 0.008043040300111519, 0.008035321451455055, 0.008027602602798592, 0.008012164905485668, 0.008004446056829203, 0.008004446056829203, 0.007989008359516278, 0.007989008359516278, 0.007981289510859815, 0.007981289510859815, 0.007981289510859815, 0.007973570662203352, 0.007958132964890428, 0.007950414116233965, 0.007950414116233965, 0.007934976418921038, 0.007911819872951649, 0.007896382175638724, 0.007880944478325798, 0.007865506781012872, 0.007865506781012872, 0.007865506781012872, 0.007857787932356409, 0.007857787932356409, 0.007850069083699946, 0.007811474840417631, 0.007796037143104706, 0.007796037143104706, 0.00778059944579178, 0.00778059944579178, 0.007749724051165928, 0.0077420052025094655, 0.007672535564601299, 0.007672535564601299, 0.007664816715944837, 0.007664816715944837, 0.007626222472662523, 0.007587628229380208, 0.007579909380723745]
[(11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c510>), (10.63, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cac0>), (10.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ca50>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c5f0>), (10.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12eb0>), (10.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc970>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (9.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05cf0>), (10.56, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc740>), (10.18, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7c10>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc5f0>), (10.35, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c820>), (10.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ca50>), (10.1, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa350>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc5f0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc270>), (10.08, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ad60>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (9.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05cf0>), (10.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc0b0>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc9e0>), (10.38, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c7b0>), (10.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b0b0>), (10.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc6d0>), (10.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c4a0>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c75f0>), (10.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15c10>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc900>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ba0>), (10.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9aba0>), (10.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf20>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc660>), (10.19, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c0b0>), (10.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c4a0>), (9.82, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc4a0>), (10.19, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c0b0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c5f0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (10.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15190>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc660>), (10.08, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ad60>), (9.94, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dc80>), (10.58, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc200>), (10.46, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcb30>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ac0>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc350>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c350>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05660>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12e40>), (10.65, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc890>), (10.38, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c7b0>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c190>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (10.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b0b0>), (10.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b059e0>), (10.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ca50>), (10.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ca50>), (10.19, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afccf0>), (10.38, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c7b0>), (9.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05cf0>), (10.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ba50>), (10.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf20>), (10.65, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc890>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (9.82, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc4a0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (10.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b0b0>), (10.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05eb0>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05510>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (10.35, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c820>), (10.93, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc7b0>), (10.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12eb0>), (10.1, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa350>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (10.08, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ad60>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c5f0>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c890>), (10.03, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa190>), (9.83, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c270>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (10.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05a50>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (10.56, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc740>), (10.25, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05890>), (10.47, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c430>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c5f0>), (11.04, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b3c0>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cd60>), (10.65, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc890>), (10.18, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7c10>), (10.08, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b510>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc820>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc660>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9add0>), (10.6, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c900>), (10.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa580>), (10.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15660>), (9.83, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c270>), (10.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c3c0>), (10.19, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c0b0>), (10.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc3c0>)]
Bin size: 100
===== for SMILES O=C1NCCCCn2cc(cn2)-c2cnc3ccc(cc3c2)CCn2nc(ccc2=O)-c2ccc1c(C(F)(F)F)c2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][N][=C][C][=C][C][=Branch1][Branch2][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][=C][Ring2][Ring2][C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][Ring2][Ring1][C][=C][Ring2][Ring1][=Branch1]
generated smiles O=C(O)C1=C2C=CC3=C1C=CC4=CC5=CC=C(N(C)C)C=C5N=C4C3=C2
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=C][N][=C][Branch1][#Branch2][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=N][=C][Ring1][P][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][F]
generated smiles C12C=CC(F)=C(C3=CC=C4C=CN=C(NC5=CC=CC=C5)C4=C3C=C1)C=C2C6=CC=CC=C6F
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=NN(CCC3=CC=C4N=CC(C5=CN(CCO)N=C5)=CC4=C3)C(=O)C=C2)C=C1C(F)(F)F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][#C][C][=N][N][Branch2][Ring1][S][C][C][C][=C][C][=C][N][=C][C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][=C][C][Ring1][=C][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][P][C][Branch1][C][F][Branch1][C][F][F]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][C][=C][Branch2][Ring1][P][N][C][=Branch1][C][=O][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2][C][=C][Ring1][S][Ring2][Ring1][#Branch1][=C][C][=C][Ring2][Ring1][=N][Ring2][Ring1][P]
generated smiles CC(C)(C)C1=CC=CC2(C=CC=CN=CC3=CNC(=O)NC=CC=C3C=CC=CC(C(F)(F)F)=C)C=C21
added!
adding editted molecule!!!
===== for SMILES CC(N=O)C1=NN2C(=NN=C2CC2=C(F)C=C3N=CC=CC3=C2F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch1][Ring1][N][=O][C][=N][N][C][=Branch2][Ring1][=Branch2][=N][N][=C][Ring1][Branch1][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch2][Ring2][C][C][=C][C][=C][C][Branch2][Ring1][=Branch1][N][C][=Branch1][C][=O][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][=C][Ring2][Ring1][Ring1][=C][C][=C][Ring2][Ring1][#Branch2][F]
generated smiles C1C(C)(C2)C=NC(C=CC=CC1(NC(=O)C3=NC4=CC=CC=C4C=C3F)C)C=C2F
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Ring2][S][=C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][N][=C][Ring1][O][C][=C][C][=C][Branch1][S][N][C][C][N][Branch1][=Branch1][C][C][C][Ring1][Ring1][C][C][Ring1][=Branch2][C][=C][Ring1][#C][C][=C][Ring2][Ring1][P][C][=C][Ring2][Ring2][=Branch1][C]
generated smiles CC1=CC(F)=CC(=C12)C=NC=NC(=CC3=C(F)C=CC=C3N=CC4=CC=C(N5CCN(C6CC6)CC5)C=C4C=C2C)CC
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=CN3C(SC4=CC=C5N=CC6=C(OCC(=O)N6C)C5=C4)=NN=C3C(F)=C2)S1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][P][C][=C][N][C][Branch2][Ring1][N][S][C][=C][C][=C][N][=C][C][=C][Branch1][O][O][C][C][=Branch1][C][=O][N][Ring1][#Branch1][C][C][Ring1][N][=C][Ring1][S][=N][N][=C][Ring2][Ring1][=Branch1][C][Branch1][C][F][=C][Ring2][Ring1][O][S][Ring2][Ring1][S]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][=Branch1][C][=O][N][C][=N][C][=C][C][=C][Branch1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][C][N][=N][NH1][C][Ring1][=Branch2][=O][C][=C][Ring1][P][Ring2][Ring1][Branch1].[N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][#Branch1][=Branch1][C][=C][C][=C][C][=Branch2][=Branch1][=Branch1][=C][N][=C][Branch2][Branch1][O][C][=C][C][=C][Branch2][Ring2][P][N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring1][#C][C][=C][N][=C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][=C][C][=C][C][=C][Ring1][P][Ring1][=Branch1][C][=C][Ring2][Ring1][#Branch1][C][=C][Ring2][Ring1][S][C][=C][Ring2][Ring2][=Branch1][C][=C][Ring2][Ring2][=N][=C][Ring2][Branch1][Ring1]
generated smiles CC(C)C(=O)N1C=NC=C2C=C(C3=CC4=CC=C3CN=N[NH1]C4)OC=C21.NC(=O)C=CC=C5CC=CC=C6C(=CN=C(C=CC=C(NC(=O)C=CC=CC(C7=CN=C(C8=CC=C(F)C=C8)C9=CC=CC=C79)C=C)C)C6C)C5=C
added!
adding editted molecule!!!
===== for SMILES O=C(NC1=CC=C(OC2=CC=NC(NC(=O)N3CCC3)=C2)C(F)=C1)C1=CN(CC2CC2)C(=O)N(C2=CC=C(F)C=C2)C1=O =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][Branch2][Ring2][#Branch1][N][C][=C][C][=C][Branch2][Ring1][#Branch1][O][C][=C][C][=N][C][Branch1][N][N][C][=Branch1][C][=O][N][C][C][C][Ring1][Ring2][=C][Ring1][=N][C][Branch1][C][F][=C][Ring2][Ring1][Branch1][C][=C][N][Branch1][#Branch1][C][C][C][C][Ring1][Ring1][C][=Branch1][C][=O][N][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][Ring2][Ring1][C][=O]<eom>
Output: 
output selfies [C][C][C][C][=N][C][Branch2][Ring2][=Branch1][C][=C][C][=C][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][Cl][C][=C][Ring2][Ring1][C][=C][C][=C][Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][C][C][N][C][C][C][C][C][Ring1][=Branch1]
generated smiles C1CC2C=NC3(C=CC=C(NC4=CC=C(C(F)(F)F)C=C4Cl)C3=CC=C2)C(=O)N1CCCN5CCCCC5
added!
adding editted molecule!!!
===== for SMILES CC(=NNC(N)=O)C1=CN=C2N=NN(CC3=CC4=CC=CN=C4C=C3F)C2=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Branch2][=N][N][C][Branch1][C][N][=O][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch1][=C][N][C][=C][C][=C][Branch1][C][N][C][=C][Ring1][#Branch1][F][=N][C][=C][Ring1][#C][C][=C][C][=C][N][=C][N][=C][Branch1][C][N][N][=C][Ring1][#Branch1][Ring1][#Branch2]
generated smiles CC(C)(C)C1=NC(NC2=CC=C(N)C=C2F)=NC=C1C=C3C=CN=CN=C(N)N=C3
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C2=CC(F)=CN=C2C=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][=Branch1][C][=C][Branch1][C][F][C][=C][C][Branch1][C][F][=C][N][=C][Ring1][#Branch1][C][=C][Ring1][N][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [N][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch2][Ring1][=Branch1][N][=C][C][=C][C][=C][Branch1][C][F][C][Branch1][=Branch1][C][=Branch1][C][=O][O][=C][Ring1][#Branch2][F][C][=C][Ring2][Ring1][Ring1][Ring2][Ring1][Branch2]
generated smiles NC1=NC(F)=CC2=CC=C(N=CC3=CC=C(F)C(C(=O)O)=C3F)C=C21
added!
adding editted molecule!!!
===== for SMILES O=c1ccc(-n2ccc3ccc(F)cc32)nn1CCOc1ccnc2cc(OCCCN3CCOCC3)ccc12 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][C][=C][C][Branch1][P][N][C][=C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][Ring1][#Branch2][=N][N][Ring1][S][C][C][O][C][=C][C][=N][C][=C][C][Branch1][=N][O][C][C][C][N][C][C][O][C][C][Ring1][=Branch1][=C][C][=C][Ring2][Ring1][Ring2][Ring1][S]<eom>
Output: 
output selfies [O][=C][Branch2][Ring1][N][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][Ring1][S][N][C][C][C][N][C][C][O]
generated smiles O=C(C1=CC=CC(F)=C1NC2=CC=C(F)C=C2)CCNCCO
added!
adding editted molecule!!!
===== for SMILES C/C(=N\OCCCO)C1=NN2C(=NN=C2CC2=C(F)C=C3N=CC=CC3=C2F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][/C][=Branch1][#Branch1][=N][\O][C][C][C][O][C][=N][N][C][=Branch2][Ring1][=Branch2][=N][N][=C][Ring1][Branch1][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][C][=C][Ring1][Branch2][C][=C][C][=C][N][=C][Branch1][#Branch2][N][C][C][C][O][C][C][Ring1][=Branch1][N][=C][Ring1][=N][N][=C][Ring1][P][N].[H+1]
generated smiles CC1=C(F)C(F)=CC=C1C2=CC3=CN=C(NC4CCOCC4)N=C3N=C2N.[H+1]
added!
adding editted molecule!!!
===== for SMILES COC1=CC=C2C(=C1)N=CC=C2OCC1=NN=C2C(F)=CC(C3=CC(C)=CS3)=CN12 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][N][=C][C][=C][Ring1][#Branch1][O][C][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][C][Branch1][C][C][=C][S][Ring1][=Branch1][=C][N][Ring1][S][Ring1][=N]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][Branch2][Ring1][=N][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1][Ring1][S][=C][C][Branch1][Ring1][O][C][=C][Ring2][Ring1][=Branch2][O][C]
generated smiles C1OC=CC=CC2(C3=CC=CC(F)=C3NC4=CC=C(Cl)C=C42)C=C1OC
added!
adding editted molecule!!!
===== for SMILES CC(=NNC(N)=O)C1=NN2C(C(O)C3=C(F)C=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Branch2][=N][N][C][Branch1][C][N][=O][C][=N][N][C][Branch2][Ring1][#Branch1][C][Branch1][C][O][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][=C][N][=C][Ring2][Ring1][Ring1][C][=C][Ring2][Ring1][#Branch1]<eom>
Output: 
output selfies [C][C][O][C][=N][C][Branch1][C][F][=C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][N][N][C][=N][C][=C][C][Branch1][P][C][=C][N][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][Ring1][=C][=C][Ring1][P][C][=Branch1][C][=O][NH1][Ring2][Ring1][#Branch2]
generated smiles CCOC=NC(F)=C1C=CC(F)=C(N2C=NC=CC(C3=CN=C4C=CC=CC4=C3)=C2)C(=O)[NH1]1
added!
adding editted molecule!!!
===== for SMILES O=C1OCC2=NC(c3ccc(F)cc3F)C(Oc3ccnc4[nH]cc(-c5cccnc5)c34)=C12 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][O][C][C][=N][C][Branch1][=N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][F][C][Branch2][Ring1][=Branch2][O][C][=C][C][=N][C][NH1][C][=C][Branch1][=Branch2][C][=C][C][=C][N][=C][Ring1][=Branch1][C][Ring1][#C][=Ring1][O][=C][Ring2][Ring1][S][Ring2][Ring1][=N]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][Branch2][Ring1][=N][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][Ring1][S][=C][Ring2][Ring1][#Branch1]
generated smiles O=C(O)C=CC=CC1C2=CC=CC(F)=C2NC3=CC=C(F)C=C31
added!
adding editted molecule!!!
===== for SMILES COC1=CN=C2C=CC([C@H](C)C3=NN=C4C(F)=CC(C5=CN(C)C=N5)=CN43)=CC2=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][N][=C][C][=C][C][Branch2][Ring1][P][C@H1][Branch1][C][C][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][N][Branch1][C][C][C][=N][Ring1][=Branch1][=C][N][Ring1][=N][Ring1][S][=C][C][Ring2][Ring1][Branch2][=C][Ring2][Ring1][N]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][=C][C][C][=Branch2][Ring1][#Branch2][=C][N][Branch1][=Branch1][C][C][C][Ring1][Ring1][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][P][C][Ring2][Ring1][Branch2]
generated smiles C1OC2=CC=CC(=C2)C(F)=CCC1=CN(C3CC3)C4=CC=CC=C4C5=CC=CC=C5
added!
adding editted molecule!!!
===== for SMILES CC(=NNC(N)=O)C1=NN2C(=NN=C2[C@@H](C)C2=CC=C3N=CC=CC3=C2)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Branch2][=N][N][C][Branch1][C][N][=O][C][=N][N][C][=Branch2][Ring1][Branch2][=N][N][=C][Ring1][Branch1][C@@H1][Branch1][C][C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][C][=C][C][=N][C][=N][C][Branch1][=N][N][C][=C][C][=C][Branch1][C][N][C][=C][Ring1][#Branch1][=C][Ring1][=C][C][=C][Ring2][Ring1][C][N][C][=N][C][Branch1][C][N][=C][C][=N][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][Ring1][=C]
generated smiles CCC1=CC2=NC=NC(NC3=CC=C(N)C=C3)=C2C4=C1NC=NC(N)=C5C=NC=CC5=C4
added!
adding editted molecule!!!
===== for SMILES NC1=NC=NC2=C1C(C1=CC(F)=C(NC(=O)C3=CN(CC4CCOCC4)C=C(C4=CC=C(F)C=C4)C3=O)C=C1F)=CN2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=N][C][=N][C][=C][Ring1][=Branch1][C][Branch2][Branch1][Branch2][C][=C][C][Branch1][C][F][=C][Branch2][Ring2][Branch2][N][C][=Branch1][C][=O][C][=C][N][Branch1][#Branch2][C][C][C][C][O][C][C][Ring1][=Branch1][C][=C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][Ring2][Ring1][Ring2][=O][C][=C][Ring2][Ring1][#C][F][=C][N][Ring2][Ring2][Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][=N][N][C][=N][C][=C][C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][=C][C][=C][Ring1][N][C][=C][Ring2][Ring1][C][F][C][=C][Ring2][Ring1][#Branch2][C][Branch1][C][N][=O]
generated smiles C1C=CC(F)=C(NC=NC2=CC(C3=CC=CC=C3)=CC=C2C=CF)C1C(N)=O
added!
adding editted molecule!!!
===== for SMILES COC1=CC2=NC=CC(OC3=CC=C(NC(=O)C4=C(I)C=CN(C5=CC=C(F)C=C5)C4=O)C=C3F)=C2C=C1OC =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=N][C][=C][C][Branch2][Ring2][=N][O][C][=C][C][=C][Branch2][Ring1][#C][N][C][=Branch1][C][=O][C][=C][Branch1][C][I][C][=C][N][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][Ring1][=C][=O][C][=C][Ring2][Ring1][Branch2][F][=C][Ring2][Ring1][S][C][=C][Ring2][Ring2][Ring2][O][C]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring2][N][N][C][=C][C][=C][Branch2][Ring1][S][N][C][=Branch1][C][=O][C][=C][C][=C][Branch1][P][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2][F][C][=C][Ring1][S][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][#C][N][C][=C][C][=C][C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][=C][Ring1][N]
generated smiles CC1=CC(F)=C(NC=CC=C(NC(=O)C=CC=C(C2=CC=C(F)C(F)=C2F)CC)C)C=C1NC3=CC=CC(C4=CC=CC=C4)=C3
added!
adding editted molecule!!!
===== for SMILES COCCOc1cnc2ccc([C@H](C)n3nnc4ccn(-c5cc(C)ns5)c(=O)c43)cc2c1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][C][O][C][=C][N][=C][C][=C][C][Branch2][Ring1][P][C@H1][Branch1][C][C][N][N][=N][C][C][=C][N][Branch1][O][C][=C][C][Branch1][C][C][=N][S][Ring1][=Branch1][C][=Branch1][C][=O][C][=Ring1][=N][Ring1][S][=C][C][Ring2][Ring1][Branch2][=C][Ring2][Ring1][N]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][Branch2][Ring1][#C][N][C][=Branch1][C][=O][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][=Branch1][Ring2][=N][Ring1][=Branch1][C][C][O][Ring1][=Branch1][C][=C][Ring1][S][C][Ring2][Ring1][#Branch1][=C][Ring2][Ring1][N][=C][Ring2][Ring1][S]
generated smiles CCOC(=O)C1=CC=C2C(C=CC3=CN=C(NC(=O)NC=CC=C(C4=CC=C5C(=N4)CCO5)C)C3=C2)=C1
added!
adding editted molecule!!!
===== for SMILES N=C(NNC(N)=O)C1=CN=C2N=NN(CC3=CC=C4N=CC=CC4=C3)C2=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][=C][Branch1][Branch2][N][N][C][Branch1][C][N][=O][C][=C][N][=C][N][=N][N][Branch1][S][C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][Ring1][S][=N][Ring2][Ring1][Ring2]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][=N][N][C][=N][C][=N][C][=C][Ring1][=Branch1][N][=C][N][Ring1][Branch1][C][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][N][N][C][=Branch1][C][=O][/C][=C][/C][N][Branch1][C][C][C]
generated smiles C1C2=CC(F)=C(NC3=NC=NC4=C3N=CN4CC5=CC=CC=C5C=C2)C=C1NC(=O)/C=C/CN(C)C
added!
adding editted molecule!!!
===== for SMILES COC1=CC2=C(OC3=CC=C(NC(=O)C4(C(=O)NC5=CCC(F)C=C5)CC4)C=C3F)C=CN=C2C=C1OCCCN1CCOCC1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=C][Branch2][Ring2][O][O][C][=C][C][=C][Branch2][Ring1][=N][N][C][=Branch1][C][=O][C][Branch1][P][C][=Branch1][C][=O][N][C][=C][C][C][Branch1][C][F][C][=C][Ring1][#Branch1][C][C][Ring1][=N][C][=C][Ring2][Ring1][=Branch1][F][C][=C][N][=C][Ring2][Ring1][=C][C][=C][Ring2][Ring2][C][O][C][C][C][N][C][C][O][C][C][Ring1][=Branch1]<eom>
Output: 
output selfies [N][C][=C][C][=C][Branch1][C][F][C][Branch2][Ring1][=N][C][=C][C][=C][N][=C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][=C][C][Ring1][=N][=C][Ring1][P][=C][Ring2][Ring1][=Branch2]
generated smiles N1C=CC=C(F)C1C2=CC=C3N=C(C4=CC=C(F)C=C4)C=CC3=C2C
added!
adding editted molecule!!!
===== for SMILES CC1=CN(C2=CC=C(F)C=C2)C(=O)C(C(=O)NC2=CC=C(OC3=C4C(=NC=C3)NN=C4N[C@H](C)CO)C(F)=C2)=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=C][N][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][=Branch1][C][=O][C][Branch2][Ring2][N][C][=Branch1][C][=O][N][C][=C][C][=C][Branch2][Ring1][Branch2][O][C][=C][C][=Branch1][=Branch1][=N][C][=C][Ring1][=Branch1][N][N][=C][Ring1][Branch2][N][C@H1][Branch1][C][C][C][O][C][Branch1][C][F][=C][Ring2][Ring1][=Branch1][=C][Ring2][Ring2][#Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][Ring2][N][C][=N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][C][=C][Ring2][Ring1][Ring1][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][N][Ring1][O][C][C][C][C][N][C][C][N]
generated smiles C1C=CC(F)=C1NC=NC=CC=C(C(F)(F)F)C=C
added!
adding editted molecule!!!
===== for SMILES CN1C=C(C2=NN3C(=NN=C3C(F)(F)C3=CC=C4N=CC=CC4=C3)N=C2)C=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=C][Branch2][Ring2][#Branch1][C][=N][N][C][=Branch2][Ring1][O][=N][N][=C][Ring1][Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][N][=C][Ring2][Ring1][=Branch1][C][=N][Ring2][Ring1][O]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch2][Ring2][C][N][C][=N][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][C][=C][Ring1][#Branch2][N][=C][Ring1][=C][C][=C][C][=C][C][=C][C][=C][C][Ring1][=Branch1][=N][Ring1][#Branch2][=C][C][=Branch1][#Branch2][=N][Ring2][Ring1][S][C][=Branch1][C][=O][O][C][Ring2][Ring2][C]
generated smiles CC(C)(C)C=NC(NC1=NC2=CC(C(F)(F)F)=CC=C2N=C1C3=CC=C4C=CC=C)C4=N3
added!
adding editted molecule!!!
===== for SMILES C[C@@H](c1ccc2ncccc2c1)n1nnc2ncc(-c3cnn(CCO)c3)nc21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C@@H1][Branch1][#C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][N][N][=N][C][=N][C][=C][Branch1][=N][C][C][=N][N][Branch1][Ring2][C][C][O][C][=Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][C][=N][N][=N][C][=C][C][=C][Branch1][S][C][=C][C][=C][C][=C][C][=C][N][=C][Ring1][#Branch2][Ring1][=Branch1][C][=C][Ring2][Ring1][Ring1][Ring1][#C]
generated smiles CC1=CC(F)=CC=C1C2=NN=NC3=CC=C(C4=CC=CC5=CC=CN=C45)C23
added!
adding editted molecule!!!
===== for SMILES CNC(=O)c1ccccc1Nc1nc(Nc2ccc3c(c2)C(C)CN(C(C)=O)CC3)ncc1Cl =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][C][=C][Ring1][=Branch1][N][C][=N][C][Branch2][Ring1][=N][N][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][C][C][N][Branch1][=Branch1][C][Branch1][C][C][=O][C][C][Ring1][N][=N][C][=C][Ring2][Ring1][=Branch1][Cl]<eom>
Output: 
output selfies [C][C][=Branch1][C][=O][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Ring1][=Branch1][N][Ring1][=Branch2][C][C][C][N][C][C][N][Branch2][Ring1][Ring2][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][Ring1][=C][Ring1][=Branch1][C][C][Ring2][Ring1][Ring2]
generated smiles CC(=O)NC1=CC=CC=C1C2=CC3=CC=CC=C3N2CCCN4CCN(C5=NC6=CC=CC=C6C7=CC=CC=C57)CC4
added!
adding editted molecule!!!
===== for SMILES NC1=C(N)C2=C(NC=C2C2=CC(F)=C(NC(=O)C3=CN(CC4CCOCC4)C=C(C4=CC=C(F)C=C4)C3=O)C=C2F)N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=C][Branch1][C][N][C][=C][Branch2][Branch1][=N][N][C][=C][Ring1][Branch1][C][=C][C][Branch1][C][F][=C][Branch2][Ring2][Branch2][N][C][=Branch1][C][=O][C][=C][N][Branch1][#Branch2][C][C][C][C][O][C][C][Ring1][=Branch1][C][=C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][Ring2][Ring1][Ring2][=O][C][=C][Ring2][Ring1][#C][F][N][Ring2][Ring2][=Branch2]<eom>
Output: 
output selfies [C][C][=C][Branch1][C][F][C][=C][C][Branch2][Ring2][Branch2][N][C][=Branch1][C][=O][C][=C][C][=C][Branch1][C][F][C][Branch2][Ring1][Ring2][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][=C][Ring2][Ring1][C][F][=C][Ring2][Ring1][N][F]
generated smiles CC=C(F)C=CC(NC(=O)C1=CC=C(F)C(NC2=CC=C(C(F)(F)F)C=C2)=C1)F
added!
adding editted molecule!!!
===== for SMILES CNC(=S)C1=CC=C(C2=NN3C(CC4=CC(Cl)=C5N=CC=CC5=C4)=CN=C3N=C2)C=C1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=S][C][=C][C][=C][Branch2][Ring2][Ring2][C][=N][N][C][Branch2][Ring1][Ring1][C][C][=C][C][Branch1][C][Cl][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][=C][N][=C][Ring1][P][N][=C][Ring2][Ring1][Branch1][C][=C][Ring2][Ring1][O][F]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][=C][C][=C][C][Branch1][C][F][=C][C][=N][C][Branch2][Ring2][S][N][C][=Branch1][C][=O][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][Branch1][C][Cl][C][=C][C][Ring1][#Branch1][=C][Branch1][C][Cl][C][=C][C][Ring1][N][=C][Ring2][Ring1][C][Ring1][P][=C][Ring2][Ring1][#Branch2][Ring2][Ring1][S]
generated smiles CC(C)C=CC=CC(F)=CC=NC(NC(=O)NC1=CC2=C3C=C1C=C4C=C(Cl)C=CC4=C(Cl)C=CC=C23)S
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=CN3C(=NN=C3COC3=CC=NC4=CC(OC)=CC=C43)C=C2)S1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][=Branch1][C][=C][N][C][=Branch2][Ring1][#Branch2][=N][N][=C][Ring1][Branch1][C][O][C][=C][C][=N][C][=C][C][Branch1][Ring1][O][C][=C][C][=C][Ring1][Branch2][Ring1][N][C][=C][Ring2][Ring1][#Branch1][S][Ring2][Ring1][N]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][N][=C][Branch2][Ring1][N][N][C][=C][C][=C][Branch1][=N][C][=C][C][=N][C][=C][C][=C][Ring1][=Branch1][Ring1][=Branch2][C][Branch1][C][Cl][=C][Ring1][S][C][Ring2][Ring1][#Branch1][=C][Ring2][Ring1][O][=C][Ring2][Ring1][S]
generated smiles C12OC=CC=CC2C=CC=CN=CN=C1N3C=CC=C(C=CC4=NC=CC=C4)C(Cl)=C3C
added!
adding editted molecule!!!
===== for SMILES CCN1CC2=C(C=CC(F)=C2C#N)O[C@@H](C)CNC(=O)C2=C3N=C1C=CN3N=C2N =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][N][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][#N][O][C@@H1][Branch1][C][C][C][N][C][=Branch1][C][=O][C][=C][N][=C][Ring2][Ring1][=Branch1][C][=C][N][Ring1][=Branch1][N][=C][Ring1][=Branch2][N]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][C][=C][Branch1][C][C][N][C][=C][C][=C][Branch2][Ring1][P][C][=Branch1][C][=O][N][C][C][C][C@@H1][C@H1][Branch1][Ring2][C][Ring1][=Branch1][C][C@@H1][C][=C][C][=C][C][NH1][C][=C][Branch1][=Branch1][C][Ring1][=Branch2][=Ring1][Branch1][C][C@H1][Ring1][N][Ring1][P][C][=C][Ring2][Ring1][#Branch2][N]
generated smiles CCOC(=O)C=C(C)NC=CC=C(C(=O)NC1CC2[C@@H1][C@H1](C1)C[C@@H1]3C4=CC=CC=5[NH1]C=CC4=5)C[C@H1]32
added!
adding editted molecule!!!
===== for SMILES CC(=NOC(N)=O)C1=NN2C(=NN=C2[C@H](C)C2=C(F)C=C3N=CC=CC3=C2F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Branch2][=N][O][C][Branch1][C][N][=O][C][=N][N][C][=Branch2][Ring1][N][=N][N][=C][Ring1][Branch1][C@H1][Branch1][C][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=C][Ring2][Ring1][#Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][=N][C][Branch1][=N][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][=C][S][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][P]
generated smiles CC(C)C=NC(NC1=CC=C(F)C=C1)=CSC2=CC=CC=C2
added!
adding editted molecule!!!
fp_scores_to_top [0.23448275862068965, 0.06976744186046512, 0.17682926829268292, 0.13664596273291926, 0.1678832116788321, 0.21518987341772153, 0.23121387283236994, 0.25, 0.045454545454545456, 0.08695652173913043, 0.23976608187134502, 0.11594202898550725, 0.16483516483516483, 0.19689119170984457, 0.275, 0.051470588235294115, 0.15591397849462366, 0.19135802469135801, 0.2727272727272727, 0.1417910447761194, 0.06293706293706294, 0.3375796178343949, 0.20320855614973263, 0.23376623376623376, 0.2568306010928962, 0.3522012578616352, 0.11971830985915492, 0.21052631578947367, 0.11724137931034483, 0.25882352941176473, 0.12751677852348994, 0.10843373493975904, 0.21818181818181817, 0.18518518518518517, 0.029197080291970802, 0.15723270440251572, 0.2, 0.26618705035971224, 0.23076923076923078, 0.2578616352201258, 0.13496932515337423, 0.21935483870967742, 0.1337579617834395, 0.2595419847328244, 0.045454545454545456, 0.04225352112676056, 0.2119205298013245, 0.23255813953488372, 0.08496732026143791, 0.16666666666666666, 0.08641975308641975, 0.1962025316455696, 0.0784313725490196, 0.19540229885057472, 0.18229166666666666, 0.16853932584269662, 0.17073170731707318, 0.14857142857142858, 0.2608695652173913, 0.17647058823529413, 0.09375, 0.23493975903614459, 0.2983425414364641, 0.1896551724137931, 0.19642857142857142, 0.2222222222222222, 0.18404907975460122, 0.13450292397660818, 0.2468354430379747, 0.23376623376623376, 0.19254658385093168, 0.1978021978021978, 0.1218274111675127, 0.16, 0.22959183673469388, 0.16382252559726962, 0.23369565217391305, 0.14772727272727273, 0.16875, 0.12962962962962962, 0.18072289156626506, 0.15568862275449102, 0.23837209302325582, 0.12962962962962962, 0.19767441860465115, 0.21264367816091953, 0.16470588235294117, 0.18357487922705315, 0.21621621621621623, 0.16230366492146597, 0.22580645161290322, 0.0759493670886076, 0.19653179190751446, 0.2085889570552147, 0.21, 0.16568047337278108, 0.1306532663316583, 0.12169312169312169, 0.11734693877551021, 0.11728395061728394]
top 70 [25 21 62 14 18 37 58 43 29 39 24  7 68 10 82 61  0 69 23 76 47  6 38 74
 90 65 41 32 88  5 85 46 27 94 93 22 36 71 84 13 92 64 51 53 70 17 63 33
 66 87 54 80  2 59 56 78 55  4 49 95 12 86 75 89 73 35 16 81 57 77]
len offspring_mol 70
190
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Cn1cc(-c2ccc3nnc(Sc4ccc5ncc(-c6ccc(F)cc6)cc5c4)n3c2)cn1

Boltz running on GPU 1
10.16
190/1000 | avg_top1: 12.050 | avg_top10: 11.754 | avg_top100: 10.946 | avg_sa: 3.134 | div: 0.828
{'avg_top1': 12.05, 'avg_top10': 11.754, 'avg_top100': 10.9461, 'auc_top1': 2.20645, 'auc_top10': 2.14299, 'auc_top100': 1.9916528095238097, 'avg_sa': 3.1344229041539338, 'diversity_top100': 0.827804185058829, 'n_oracle': 190}
Cn1cc(-c2cnc3ccc(Sc4nnc5ccc(-c6cn[nH]c6)cn45)cc3c2)cn1

Boltz running on GPU 1
11.19
N#Cc1cccc(-c2ccc(=O)n(Cc3cccc(-c4ncc5c(n4)NC(c4cnn(CCO)c4)CN5)c3)n2)c1

Boltz running on GPU 1
11.22
Fc1cc(F)cc(-c2cnc3nnc(C(F)(F)c4ccc5ncccc5c4)n3n2)c1

Boltz running on GPU 1
10.31
CC(c1c(F)cc2ncc(-c3cnn(C)c3)cc2c1F)n1nnc2ccc(-c3cnn(CCO)c3)nc21

Boltz running on GPU 1
11.73
CCc1ccc2ncc(-c3cnn(CCO)c3)cc2c1

Boltz running on GPU 1
9.58
CC1=C(COc2cnc(-c3cccc([C@@H](C)n4cc(-c5cc(C#N)ccn5)cc(F)c4=O)c3)nc2)CCN(C)N1

Boltz running on GPU 1
10.51
Cn1cc(-c2cnc3ccccc3c2)cn1

Boltz running on GPU 1
7.52
c1cc(Cc2ccc3ncccc3c2)cc(-c2ncc(OCCN3CCOCC3)cn2)c1

Boltz running on GPU 1
9.29
N#Cc1cc(-c2cnc3nnn(-c4ccc5ncccc5c4)c3n2)ccc1F

Boltz running on GPU 1
9.28
Already in buffer
N#Cc1ccc2nc3n(Cc4cccc(-c5ccc(F)cc5)c4)c(=O)ccn3c2c1

Boltz running on GPU 1
8.72
200/1000 | avg_top1: 12.050 | avg_top10: 11.770 | avg_top100: 10.983 | avg_sa: 3.178 | div: 0.827
{'avg_top1': 12.05, 'avg_top10': 11.77, 'avg_top100': 10.982999999999997, 'auc_top1': 2.3269499999999996, 'auc_top10': 2.2606100000000002, 'auc_top100': 2.1012983095238096, 'avg_sa': 3.178279023702909, 'diversity_top100': 0.8269839308736242, 'n_oracle': 200}
Already in buffer
C[C@@H](c1cc2ccccc2cc1C#N)n1cnc2ncc(-c3ccc(C(N)=O)c(F)c3)nc21

Boltz running on GPU 1
9.64
CCOC=NC(F)=C1C=CC(F)=C(N2C=NC=CC(c3cnc4ccccc4c3)=C2)C(=O)N1

Boltz running on GPU 1
9.77
N#Cc1cc(-c2cnc3nnn(Cc4ccc5ncccc5c4F)c3n2)ccc1F

Boltz running on GPU 1
10.24
OCCn1cc(-c2cnc(-c3ccc(F)cc3)nc2)cn1

Boltz running on GPU 1
7.9
Oc1ccc(Cc2nnc3ccc(-c4ccc(F)c(Cl)c4)nn23)cc1

Boltz running on GPU 1
9.11
Cc1[nH]nc2ccc(-c3c4c(nc5c3C(=O)OC5)C(=O)NCC4)cc12

Boltz running on GPU 1
9.18
Already in buffer
CCC(c1ccc2ncccc2c1F)n1cnc2ncc(-c3ccc(C(N)=O)c(N)c3)nc21

Boltz running on GPU 1
10.66
CNc1snc(SCc2nnc3ncc(-c4ccc5ncc(OC)cc5c4)nn23)c1C(N)=O

Boltz running on GPU 1
10.51
CC(c1c(F)cc2ncc(F)cc2c1F)n1nnc2ncc(-c3ccc(F)c(F)c3)nc21

Boltz running on GPU 1
11.09
Already in buffer
Already in buffer
CC(C)c1c(F)cc2ncc(-c3cnn(C)c3)cc2c1F

Boltz running on GPU 1
10.0
210/1000 | avg_top1: 12.050 | avg_top10: 11.770 | avg_top100: 10.996 | avg_sa: 3.194 | div: 0.826
{'avg_top1': 12.05, 'avg_top10': 11.77, 'avg_top100': 10.996399999999996, 'auc_top1': 2.44745, 'auc_top10': 2.37831, 'auc_top100': 2.2111953095238097, 'avg_sa': 3.193991114648245, 'diversity_top100': 0.8258977217612774, 'n_oracle': 210}
NC(=O)c1ccc(-c2cnc3ncn(-c4cnn(F)c4)c3n2)cc1F

Boltz running on GPU 1
7.8
Fc1ccc2c(OCc3nnc4ncc(-c5ccccc5)nn34)ccnc2c1

Boltz running on GPU 1
7.41
Already in buffer
COc1cnc2ccc([C@H](C)c3nnc4c(F)cc(C#N)cn34)cc2c1

Boltz running on GPU 1
9.9
CCc1cc2ncnc(Nc3ccc(N)cc3)c2c2cc3ccncc3c(N)nc[nH]c12

Boltz running on GPU 1
10.33
Cn1cc(-c2ccc3nnc(Sc4ccccc4)n3c2)cn1

Boltz running on GPU 1
7.05
Cn1cc(-c2cnc3nnc(C(F)(F)c4ccc[nH]4)n3n2)cn1

Boltz running on GPU 1
7.98
Already in buffer
Already in buffer
C/C(=N\OCS(=O)(=O)NCc1ccccn1)c1ccc2ncc(Cc3ccc4ncccc4c3F)n2n1

Boltz running on GPU 1
10.4
CNC(=O)c1ccc(C2=CC(C#N)C(=O)C=C2)cc1C(F)(F)F

Boltz running on GPU 1
6.98
Already in buffer
Already in buffer
CC=C1C(Nc2nccc(-c3cccnc3)n2)=CC(NC=C2C=CC(C=Cc3ccc(C(C)=O)cc3)=C2)=C1F

Boltz running on GPU 1
9.72
C=CC=Cc1ccc2nc1C(N=CC(C)(C)C)Nc1nc3cc(C(F)(F)F)ccc3nc1-2

Boltz running on GPU 1
[Errno 2] No such file or directory: '/data/boltz/results/boltz_results_c-met_C=CC=Cc1ccc2nc1C(N=CC(C)(C)C)Nc1nc3cc(C(F)(F)F)ccc3nc1-2/predictions/c-met_C=CC=Cc1ccc2nc1C(N=CC(C)(C)C)Nc1nc3cc(C(F)(F)F)ccc3nc1-2/affinity_c-met_C=CC=Cc1ccc2nc1C(N=CC(C)(C)C)Nc1nc3cc(C(F)(F)F)ccc3nc1-2.json'
-0.0
220/1000 | avg_top1: 12.050 | avg_top10: 11.770 | avg_top100: 10.997 | avg_sa: 3.199 | div: 0.825
{'avg_top1': 12.05, 'avg_top10': 11.77, 'avg_top100': 10.997099999999996, 'auc_top1': 2.5679499999999997, 'auc_top10': 2.4960099999999996, 'auc_top100': 2.3211628095238095, 'avg_sa': 3.1990421047601587, 'diversity_top100': 0.8254057269867132, 'n_oracle': 220}
COc1ccc(NC(=O)c2nc3ccccc3n(-c3ccc(F)cc3)c2=O)cc1

Boltz running on GPU 1
6.58
C[C@@H](c1cc2cccnc2cc1F)c1c(F)cc2ncccc2c1F

Boltz running on GPU 1
9.64
COc1ccc2c(OCc3nnc4ncc(-c5ccccc5)nn34)c(C(=O)O)[nH]c2c1

Boltz running on GPU 1
7.94
Already in buffer
C/C(=N\OF)c1ccc2ncc(Cc3ccc4ncccc4c3F)n2n1

Boltz running on GPU 1
11.41
COc1ccc2c(OCCCOCCCc3ccc4ncccc4c3)ccnc2c1

Boltz running on GPU 1
7.74
CC(=NF)c1ccc2ncc(Cc3c(F)cc4ncccc4c3F)n2n1

Boltz running on GPU 1
11.81
N#Cc1cc(-c2cnc3nnn(C[C@@H]4CN(F)CCO4)c3n2)ccc1F

Boltz running on GPU 1
8.49
Already in buffer
N#CC1=CC(c2cnc3nnn(C[C@@H]4CN(c5ncc(C6=CCNCC6)cn5)CCO4)c3n2)SC=C1F

Boltz running on GPU 1
10.59
Already in buffer
CO/N=C(\C)c1ccc2ncc(Cc3ccc4ncncc4c3F)n2n1

Boltz running on GPU 1
9.99
C/C(=N\OC(N)=O)c1ccc2ncc(Cc3c(F)cc4ncccc4c3F)n2n1

Boltz running on GPU 1
11.42
230/1000 | avg_top1: 12.050 | avg_top10: 11.785 | avg_top100: 11.036 | avg_sa: 3.222 | div: 0.824
{'avg_top1': 12.05, 'avg_top10': 11.785, 'avg_top100': 11.035699999999997, 'auc_top1': 2.68845, 'auc_top10': 2.613785, 'auc_top100': 2.431326809523809, 'avg_sa': 3.2221412480014395, 'diversity_top100': 0.8241924773930815, 'n_oracle': 230}
Already in buffer
Nc1nc(F)cc2ccc(N=Cc3ccc(F)c(C(=O)O)c3F)cc12

Boltz running on GPU 1
8.67
CC=C1C(Nc2nccc(-c3cccnc3)n2)=CC(NC=C2C=CC(C=CF)=C2)=C1F

Boltz running on GPU 1
8.81
COc1cnc2ccc([C@H](C)F)cc2c1

Boltz running on GPU 1
7.6
N#Cc1cc(-c2cnc3nnn(CNC(=O)C4CC4)c3n2)ccc1F

Boltz running on GPU 1
8.33
CC=C(F)C=CC(F)NC(=O)c1ccc(F)c(Nc2ccc(C(F)(F)F)cc2)c1

Boltz running on GPU 1
8.2
CC=C1C(Nc2ncc(F)[nH]2)=CC(NC=C2C=CC(C=Cc3ccc(C(=O)O)cc3)=C2)=C1F

Boltz running on GPU 1
9.32
Already in buffer
C=CC(C=CC=CC(=O)NC(C)=CC=CC1=NC=C2C(=C)C(=CC=CC(N)=O)CC=CC=C2C1C)c1cnc(-c2ccc(F)cc2)c2ccccc12.CC(C)C(=O)N1C=NC=C2C=C(c3cc4ccc3CN=NNC4)OC=C21

Boltz running on GPU 1
[Errno 2] No such file or directory: '/data/boltz/results/boltz_results_c-met_C=CC(C=CC=CC(=O)NC(C)=CC=CC1=NC=C2C(=C)C(=CC=CC(N)=O)CC=CC=C2C1C)c1cnc(-c2ccc(F)cc2)c2ccccc12.CC(C)C(=O)N1C=NC=C2C=C(c3cc4ccc3CN=NNC4)OC=C21/predictions/c-met_C=CC(C=CC=CC(=O)NC(C)=CC=CC1=NC=C2C(=C)C(=CC=CC(N)=O)CC=CC=C2C1C)c1cnc(-c2ccc(F)cc2)c2ccccc12.CC(C)C(=O)N1C=NC=C2C=C(c3cc4ccc3CN=NNC4)OC=C21/affinity_c-met_C=CC(C=CC=CC(=O)NC(C)=CC=CC1=NC=C2C(=C)C(=CC=CC(N)=O)CC=CC=C2C1C)c1cnc(-c2ccc(F)cc2)c2ccccc12.CC(C)C(=O)N1C=NC=C2C=C(c3cc4ccc3CN=NNC4)OC=C21.json'
-0.0
Already in buffer
Already in buffer
N#Cc1cnc2nnc(C(F)(F)C3=Cc4cccnc4C3)n2n1

Boltz running on GPU 1
9.02
Cc1[nH]nc2c1CC(C(=O)Nc1ccc(Oc3ccnc4[nH]nc(N[C@H](C)CO)c34)c(F)c1)=C2

Boltz running on GPU 1
10.54
Already in buffer
CC=C1C(Nc2nccc(-c3cccnc3)n2)=c2[nH]nc(N[C@H](C)CO)c2=C1F

Boltz running on GPU 1
8.39
240/1000 | avg_top1: 12.050 | avg_top10: 11.785 | avg_top100: 11.038 | avg_sa: 3.218 | div: 0.823
{'avg_top1': 12.05, 'avg_top10': 11.785, 'avg_top100': 11.0376, 'auc_top1': 2.80895, 'auc_top10': 2.731635, 'auc_top100': 2.5416933095238092, 'avg_sa': 3.218299975721615, 'diversity_top100': 0.8234916006166504, 'n_oracle': 240}
Already in buffer
[(12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17350>), (11.73, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa270>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc820>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b050b0>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa510>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa040>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c740>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ba0>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c890>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05200>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c190>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c350>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc660>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a6d0>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05660>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc190>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05510>), (11.04, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b3c0>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cd60>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b053c0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c510>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c5f0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc270>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12e40>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05580>), (10.93, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc7b0>), (10.92, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcba0>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05e40>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cba0>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc900>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc9e0>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c75f0>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9add0>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ac0>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c80>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05dd0>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17900>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc350>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc5f0>), (10.74, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05350>), (10.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa0b0>), (10.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf20>), (10.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a5f0>), (10.65, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc890>), (10.63, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cac0>), (10.63, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afceb0>), (10.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b052e0>), (10.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b059e0>), (10.6, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c900>), (10.59, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17a50>), (10.58, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc200>), (10.56, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc740>), (10.54, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c3c0>), (10.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05a50>), (10.51, <rdkit.Chem.rdchem.Mol object at 0x7f3d65eb44a0>), (10.51, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a660>), (10.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c3c0>), (10.49, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (10.47, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c430>), (10.46, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcb30>), (10.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcdd0>), (10.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15c10>), (10.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12eb0>), (10.4, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9aeb0>), (10.38, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c7b0>), (10.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa580>), (10.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b0b0>), (10.35, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c820>), (10.35, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cb30>), (10.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b055f0>), (10.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ca50>), (10.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc3c0>), (10.34, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a190>), (10.34, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a270>), (10.33, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cc10>), (10.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9aa50>), (10.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc970>), (10.31, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa200>), (10.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c4a0>), (10.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cc80>), (10.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05eb0>), (10.25, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05890>), (10.24, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a3c0>), (10.23, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc430>), (10.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15190>), (10.19, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c0b0>)]
[0.009189844649672235, 0.009044942534865328, 0.009006810399389826, 0.008999183972294727, 0.008991557545199624, 0.008991557545199624, 0.008945798982629023, 0.008938172555533922, 0.008930546128438823, 0.008930546128438823, 0.00890004042005842, 0.00889241399296332, 0.008823776149107416, 0.008808523294917216, 0.008785644013631914, 0.008770391159441714, 0.008724632596871111, 0.008709379742680911, 0.008709379742680911, 0.008709379742680911, 0.008709379742680911, 0.00870175331558581, 0.00869412688849071, 0.008686500461395609, 0.008686500461395609, 0.008663621180110308, 0.008633115471729907, 0.008625489044634806, 0.008617862617539706, 0.008602609763349504, 0.008602609763349504, 0.008556851200778903, 0.008556851200778903, 0.008549224773683804, 0.008541598346588701, 0.008541598346588701, 0.008541598346588701, 0.0085339719194936, 0.008526345492398502, 0.008526345492398502, 0.0085187190653034, 0.008480586929827899, 0.008480586929827899, 0.008465334075637697, 0.008457707648542598, 0.008457707648542598, 0.008457707648542598, 0.008457707648542598, 0.008442454794352397, 0.008442454794352397, 0.008427201940162197, 0.008419575513067094, 0.008381443377591594, 0.008350937669211191, 0.008350937669211191, 0.008350937669211191, 0.008350937669211191, 0.008343311242116092, 0.008343311242116092, 0.008335684815020991, 0.00832805838792589, 0.00831280553373569, 0.00831280553373569, 0.00831280553373569, 0.00830517910664059, 0.00829755267954549, 0.00829755267954549, 0.008236541262784686, 0.008236541262784686, 0.008236541262784686, 0.008236541262784686, 0.008206035554404285, 0.008206035554404285, 0.008190782700214084, 0.008190782700214084, 0.008167903418928783, 0.00812977128345328, 0.00812214485635818, 0.00810689200216798, 0.00810689200216798, 0.008091639147977779, 0.008091639147977779, 0.008084012720882678, 0.008076386293787577, 0.008068759866692478, 0.008053507012502277, 0.008038254158312075, 0.008023001304121875, 0.008015374877026775, 0.008015374877026775, 0.008007748449931674, 0.008000122022836575, 0.007984869168646373, 0.007977242741551274, 0.007946737033170871, 0.00793911060607577, 0.007931484178980671, 0.007931484178980671, 0.00791623132479047, 0.007908604897695369, 0.007908604897695369, 0.00789335204350517, 0.00789335204350517, 0.007885725616410069, 0.007885725616410069, 0.007885725616410069, 0.007885725616410069, 0.007885725616410069, 0.007878099189314968, 0.007878099189314968, 0.007862846335124768, 0.007862846335124768, 0.007855219908029667, 0.007855219908029667, 0.007839967053839466, 0.007817087772554165, 0.007809461345459064, 0.007801834918363964, 0.007786582064173764, 0.007771329209983562]
[(10.25, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05890>), (11.04, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b3c0>), (10.23, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc430>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c5f0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc660>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc190>), (10.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc3c0>), (10.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa0b0>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc190>), (10.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15190>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc350>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (10.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b059e0>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12e40>), (10.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ca50>), (10.34, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a190>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c75f0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (10.74, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05350>), (10.19, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c0b0>), (10.38, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c7b0>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c890>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (10.25, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05890>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c190>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc270>), (10.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05eb0>), (10.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15190>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ba0>), (10.93, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc7b0>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (10.31, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa200>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05660>), (10.54, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c3c0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (10.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b055f0>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c75f0>), (10.19, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c0b0>), (10.56, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc740>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c740>), (10.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c3c0>), (10.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05eb0>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (10.59, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17a50>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (10.34, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a190>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cba0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (10.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf20>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc9e0>), (10.58, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc200>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ba0>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc900>), (10.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12eb0>), (10.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15c10>), (10.59, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17a50>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cba0>), (10.63, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cac0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c510>), (10.35, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cb30>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17900>), (10.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c4a0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (10.74, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05350>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (10.47, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c430>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cba0>), (10.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12eb0>), (10.46, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcb30>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12e40>), (10.24, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a3c0>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12e40>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (10.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05a50>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05510>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05660>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (10.35, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cb30>), (10.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15c10>), (10.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05a50>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c510>), (10.33, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cc10>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c190>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa510>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9add0>), (10.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9aa50>), (10.54, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c3c0>), (10.35, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c820>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc900>), (10.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b059e0>), (10.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05eb0>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (10.93, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc7b0>)]
Bin size: 100
===== for SMILES O=C1NCCCCn2cc(cn2)-c2cnc3ccc(cc3c2)CCn2nc(ccc2=O)-c2ccc1c(C(F)(F)F)c2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][N][=C][C][=C][C][=Branch1][Branch2][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][=C][Ring2][Ring2][C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][Ring2][Ring1][C][=C][Ring2][Ring1][=Branch1]
generated smiles O=C(O)C1=C2C=CC3=C1C=CC4=CC5=CC=C(N(C)C)C=C5N=C4C3=C2
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=C][N][=C][Branch1][#Branch2][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=N][=C][Ring1][P][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][F]
generated smiles C12C=CC(F)=C(C3=CC=C4C=CN=C(NC5=CC=CC=C5)C4=C3C=C1)C=C2C6=CC=CC=C6F
added!
adding editted molecule!!!
===== for SMILES CC(=NF)C1=NN2C(CC3=C(F)C=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Ring1][=N][F][C][=N][N][C][Branch2][Ring1][Ring2][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][=C][N][=C][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch1][Ring1][C][#N][C][Ring1][Branch2][=N][Ring1][P]
generated smiles CC1=CC(F)=CC(=C1)C=NC(F)=C2C=CC=C(C#N)C2=N
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=NN(CCC3=CC=C4N=CC(C5=CN(CCO)N=C5)=CC4=C3)C(=O)C=C2)C=C1C(F)(F)F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][#C][C][=N][N][Branch2][Ring1][S][C][C][C][=C][C][=C][N][=C][C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][=C][C][Ring1][=C][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][P][C][Branch1][C][F][Branch1][C][F][F]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][C][=C][Branch2][Ring1][P][N][C][=Branch1][C][=O][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2][C][=C][Ring1][S][Ring2][Ring1][#Branch1][=C][C][=C][Ring2][Ring1][=N][Ring2][Ring1][P]
generated smiles CC(C)(C)C1=CC=CC2(C=CC=CN=CC3=CNC(=O)NC=CC=C3C=CC=CC(C(F)(F)F)=C)C=C21
added!
adding editted molecule!!!
===== for SMILES CC(N=O)c1ccc2nnc(Cc3c(F)cc4ncccc4c3F)n2n1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch1][Ring1][N][=O][C][C][=C][C][=N][N][=C][Branch2][Ring1][Ring2][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][N][Ring2][Ring1][C][N][=Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Ring1][=Branch1][=C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring2][Ring1][=Branch1][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring2][Ring1][=Branch2]
generated smiles C1C2=CC(F)=CC(=C2)C=NC=NC1=C(C3=CC=C(F)C=C3)C4=CC=CC=C4
added!
adding editted molecule!!!
===== for SMILES CC(N=O)C1=NN2C(=NN=C2CC2=C(F)C=C3N=CC=CC3=C2F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch1][Ring1][N][=O][C][=N][N][C][=Branch2][Ring1][=Branch2][=N][N][=C][Ring1][Branch1][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch2][Ring2][C][C][=C][C][=C][C][Branch2][Ring1][=Branch1][N][C][=Branch1][C][=O][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][=C][Ring2][Ring1][Ring1][=C][C][=C][Ring2][Ring1][#Branch2][F]
generated smiles C1C(C)(C2)C=NC(C=CC=CC1(NC(=O)C3=NC4=CC=CC=C4C=C3F)C)C=C2F
added!
adding editted molecule!!!
===== for SMILES CC(c1c(F)cc2ncc(-c3cnn(C)c3)cc2c1F)n1nnc2ccc(-c3cnn(CCO)c3)nc21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][C][=N][N][Branch1][C][C][C][=Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=C][C][=C][Branch1][=N][C][C][=N][N][Branch1][Ring2][C][C][O][C][=Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][Branch1][C][C][O][C][=C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][N][N][=N][C][=C][C][=C][Branch1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][C][N][=N][NH1][C][=Ring1][Branch1][C][=C][Ring1][P][C][Branch1][C][F][=C][Ring2][Ring1][#Branch2][Ring2][Ring1][=N]
generated smiles CC(C)OC1=CC=C2C(F)=C(N=NC3=CC=C(C4=CC=CC=C4C=5N=N[NH1]C=5)C=C3)C(F)=C21
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Ring2][S][=C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][N][=C][Ring1][O][C][=C][C][=C][Branch1][S][N][C][C][N][Branch1][=Branch1][C][C][C][Ring1][Ring1][C][C][Ring1][=Branch2][C][=C][Ring1][#C][C][=C][Ring2][Ring1][P][C][=C][Ring2][Ring2][=Branch1][C]
generated smiles CC1=CC(F)=CC(=C12)C=NC=NC(=CC3=C(F)C=CC=C3N=CC4=CC=C(N5CCN(C6CC6)CC5)C=C4C=C2C)CC
added!
adding editted molecule!!!
===== for SMILES O=C(NC1=CC=C(OC2=CC=NC(NC(=O)N3CCC3)=C2)C(F)=C1)C1=CN(CC2CC2)C(=O)N(C2=CC=C(F)C=C2)C1=O =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][Branch2][Ring2][#Branch1][N][C][=C][C][=C][Branch2][Ring1][#Branch1][O][C][=C][C][=N][C][Branch1][N][N][C][=Branch1][C][=O][N][C][C][C][Ring1][Ring2][=C][Ring1][=N][C][Branch1][C][F][=C][Ring2][Ring1][Branch1][C][=C][N][Branch1][#Branch1][C][C][C][C][Ring1][Ring1][C][=Branch1][C][=O][N][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][Ring2][Ring1][C][=O]<eom>
Output: 
output selfies [C][C][C][C][=N][C][Branch2][Ring2][=Branch1][C][=C][C][=C][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][Cl][C][=C][Ring2][Ring1][C][=C][C][=C][Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][C][C][N][C][C][C][C][C][Ring1][=Branch1]
generated smiles C1CC2C=NC3(C=CC=C(NC4=CC=C(C(F)(F)F)C=C4Cl)C3=CC=C2)C(=O)N1CCCN5CCCCC5
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=CN3C(SC4=CC=C5N=CC6=C(OCC(=O)N6C)C5=C4)=NN=C3C(F)=C2)S1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][P][C][=C][N][C][Branch2][Ring1][N][S][C][=C][C][=C][N][=C][C][=C][Branch1][O][O][C][C][=Branch1][C][=O][N][Ring1][#Branch1][C][C][Ring1][N][=C][Ring1][S][=N][N][=C][Ring2][Ring1][=Branch1][C][Branch1][C][F][=C][Ring2][Ring1][O][S][Ring2][Ring1][S]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][=Branch1][C][=O][N][C][=N][C][=C][C][=C][Branch1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][C][N][=N][NH1][C][Ring1][=Branch2][=O][C][=C][Ring1][P][Ring2][Ring1][Branch1].[N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][#Branch1][=Branch1][C][=C][C][=C][C][=Branch2][=Branch1][=Branch1][=C][N][=C][Branch2][Branch1][O][C][=C][C][=C][Branch2][Ring2][P][N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring1][#C][C][=C][N][=C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][=C][C][=C][C][=C][Ring1][P][Ring1][=Branch1][C][=C][Ring2][Ring1][#Branch1][C][=C][Ring2][Ring1][S][C][=C][Ring2][Ring2][=Branch1][C][=C][Ring2][Ring2][=N][=C][Ring2][Branch1][Ring1]
generated smiles CC(C)C(=O)N1C=NC=C2C=C(C3=CC4=CC=C3CN=N[NH1]C4)OC=C21.NC(=O)C=CC=C5CC=CC=C6C(=CN=C(C=CC=C(NC(=O)C=CC=CC(C7=CN=C(C8=CC=C(F)C=C8)C9=CC=CC=C79)C=C)C)C6C)C5=C
added!
adding editted molecule!!!
===== for SMILES CC(=NNC(N)=O)C1=CN=C2N=NN(CC3=CC4=CC=CN=C4C=C3F)C2=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Branch2][=N][N][C][Branch1][C][N][=O][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch1][=C][N][C][=C][C][=C][Branch1][C][N][C][=C][Ring1][#Branch1][F][=N][C][=C][Ring1][#C][C][=C][C][=C][N][=C][N][=C][Branch1][C][N][N][=C][Ring1][#Branch1][Ring1][#Branch2]
generated smiles CC(C)(C)C1=NC(NC2=CC=C(N)C=C2F)=NC=C1C=C3C=CN=CN=C(N)N=C3
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C2=CC(F)=CN=C2C=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][=Branch1][C][=C][Branch1][C][F][C][=C][C][Branch1][C][F][=C][N][=C][Ring1][#Branch1][C][=C][Ring1][N][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [N][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch2][Ring1][=Branch1][N][=C][C][=C][C][=C][Branch1][C][F][C][Branch1][=Branch1][C][=Branch1][C][=O][O][=C][Ring1][#Branch2][F][C][=C][Ring2][Ring1][Ring1][Ring2][Ring1][Branch2]
generated smiles NC1=NC(F)=CC2=CC=C(N=CC3=CC=C(F)C(C(=O)O)=C3F)C=C21
added!
adding editted molecule!!!
===== for SMILES O=c1ccc(-n2ccc3ccc(F)cc32)nn1CCOc1ccnc2cc(OCCCN3CCOCC3)ccc12 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][C][=C][C][Branch1][P][N][C][=C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][Ring1][#Branch2][=N][N][Ring1][S][C][C][O][C][=C][C][=N][C][=C][C][Branch1][=N][O][C][C][C][N][C][C][O][C][C][Ring1][=Branch1][=C][C][=C][Ring2][Ring1][Ring2][Ring1][S]<eom>
Output: 
output selfies [O][=C][Branch2][Ring1][N][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][Ring1][S][N][C][C][C][N][C][C][O]
generated smiles O=C(C1=CC=CC(F)=C1NC2=CC=C(F)C=C2)CCNCCO
added!
adding editted molecule!!!
===== for SMILES C/C(=N\OCCCO)C1=NN2C(=NN=C2CC2=C(F)C=C3N=CC=CC3=C2F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][/C][=Branch1][#Branch1][=N][\O][C][C][C][O][C][=N][N][C][=Branch2][Ring1][=Branch2][=N][N][=C][Ring1][Branch1][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][C][=C][Ring1][Branch2][C][=C][C][=C][N][=C][Branch1][#Branch2][N][C][C][C][O][C][C][Ring1][=Branch1][N][=C][Ring1][=N][N][=C][Ring1][P][N].[H+1]
generated smiles CC1=C(F)C(F)=CC=C1C2=CC3=CN=C(NC4CCOCC4)N=C3N=C2N.[H+1]
added!
adding editted molecule!!!
===== for SMILES COC1=CC=C2C(=C1)N=CC=C2OCC1=NN=C2C(F)=CC(C3=CC(C)=CS3)=CN12 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][N][=C][C][=C][Ring1][#Branch1][O][C][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][C][Branch1][C][C][=C][S][Ring1][=Branch1][=C][N][Ring1][S][Ring1][=N]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][Branch2][Ring1][=N][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1][Ring1][S][=C][C][Branch1][Ring1][O][C][=C][Ring2][Ring1][=Branch2][O][C]
generated smiles C1OC=CC=CC2(C3=CC=CC(F)=C3NC4=CC=C(Cl)C=C42)C=C1OC
added!
adding editted molecule!!!
===== for SMILES CC(=NNC(N)=O)C1=NN2C(C(O)C3=C(F)C=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Branch2][=N][N][C][Branch1][C][N][=O][C][=N][N][C][Branch2][Ring1][#Branch1][C][Branch1][C][O][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][=C][N][=C][Ring2][Ring1][Ring1][C][=C][Ring2][Ring1][#Branch1]<eom>
Output: 
output selfies [C][C][O][C][=N][C][Branch1][C][F][=C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][N][N][C][=N][C][=C][C][Branch1][P][C][=C][N][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][Ring1][=C][=C][Ring1][P][C][=Branch1][C][=O][NH1][Ring2][Ring1][#Branch2]
generated smiles CCOC=NC(F)=C1C=CC(F)=C(N2C=NC=CC(C3=CN=C4C=CC=CC4=C3)=C2)C(=O)[NH1]1
added!
adding editted molecule!!!
===== for SMILES O=C1OCC2=NC(c3ccc(F)cc3F)C(Oc3ccnc4[nH]cc(-c5cccnc5)c34)=C12 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][O][C][C][=N][C][Branch1][=N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][F][C][Branch2][Ring1][=Branch2][O][C][=C][C][=N][C][NH1][C][=C][Branch1][=Branch2][C][=C][C][=C][N][=C][Ring1][=Branch1][C][Ring1][#C][=Ring1][O][=C][Ring2][Ring1][S][Ring2][Ring1][=N]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][Branch2][Ring1][=N][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][Ring1][S][=C][Ring2][Ring1][#Branch1]
generated smiles O=C(O)C=CC=CC1C2=CC=CC(F)=C2NC3=CC=C(F)C=C31
added!
adding editted molecule!!!
===== for SMILES CC(=NNC(N)=O)C1=NN2C(=NN=C2[C@@H](C)C2=CC=C3N=CC=CC3=C2)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Branch2][=N][N][C][Branch1][C][N][=O][C][=N][N][C][=Branch2][Ring1][Branch2][=N][N][=C][Ring1][Branch1][C@@H1][Branch1][C][C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][C][=C][C][=N][C][=N][C][Branch1][=N][N][C][=C][C][=C][Branch1][C][N][C][=C][Ring1][#Branch1][=C][Ring1][=C][C][=C][Ring2][Ring1][C][N][C][=N][C][Branch1][C][N][=C][C][=N][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][Ring1][=C]
generated smiles CCC1=CC2=NC=NC(NC3=CC=C(N)C=C3)=C2C4=C1NC=NC(N)=C5C=NC=CC5=C4
added!
adding editted molecule!!!
===== for SMILES NC1=NC=NC2=C1C(C1=CC(F)=C(NC(=O)C3=CN(CC4CCOCC4)C=C(C4=CC=C(F)C=C4)C3=O)C=C1F)=CN2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=N][C][=N][C][=C][Ring1][=Branch1][C][Branch2][Branch1][Branch2][C][=C][C][Branch1][C][F][=C][Branch2][Ring2][Branch2][N][C][=Branch1][C][=O][C][=C][N][Branch1][#Branch2][C][C][C][C][O][C][C][Ring1][=Branch1][C][=C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][Ring2][Ring1][Ring2][=O][C][=C][Ring2][Ring1][#C][F][=C][N][Ring2][Ring2][Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][=N][N][C][=N][C][=C][C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][=C][C][=C][Ring1][N][C][=C][Ring2][Ring1][C][F][C][=C][Ring2][Ring1][#Branch2][C][Branch1][C][N][=O]
generated smiles C1C=CC(F)=C(NC=NC2=CC(C3=CC=CC=C3)=CC=C2C=CF)C1C(N)=O
added!
adding editted molecule!!!
===== for SMILES COC1=CN=C2C=CC([C@H](C)C3=NN=C4C(F)=CC(C5=CN(C)C=N5)=CN43)=CC2=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][N][=C][C][=C][C][Branch2][Ring1][P][C@H1][Branch1][C][C][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][N][Branch1][C][C][C][=N][Ring1][=Branch1][=C][N][Ring1][=N][Ring1][S][=C][C][Ring2][Ring1][Branch2][=C][Ring2][Ring1][N]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][=C][C][C][=Branch2][Ring1][#Branch2][=C][N][Branch1][=Branch1][C][C][C][Ring1][Ring1][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][P][C][Ring2][Ring1][Branch2]
generated smiles C1OC2=CC=CC(=C2)C(F)=CCC1=CN(C3CC3)C4=CC=CC=C4C5=CC=CC=C5
added!
adding editted molecule!!!
===== for SMILES C/C(=N\OC(N)=O)c1ccc2ncc(Cc3c(F)cc4ncccc4c3F)n2n1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][/C][=Branch1][Branch2][=N][\O][C][Branch1][C][N][=O][C][C][=C][C][=N][C][=C][Branch2][Ring1][Ring2][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][N][Ring2][Ring1][C][N][=Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][O][/N][=C][Branch2][Ring2][Branch2][\C][=Branch1][C][=O][N][C@@H1][C][=Branch1][C][=O][N][C][Branch1][=Branch1][C][=Branch1][C][=O][O][=C][Branch1][#Branch2][C][S][C][=C][N][=N][S][Ring1][Branch1][C][S][C@H1][Ring2][Ring1][Ring1][Ring1][S][C][=C][S][C][Branch1][C][N][=N][Ring1][=Branch1]
generated smiles CC(C)O/N=C(\C(=O)N[C@@H1]1C(=O)N2C(C(=O)O)=C(CSC3=CN=NS3)CS[C@H1]12)C4=CSC(N)=N4
added!
adding editted molecule!!!
===== for SMILES C/C(=N\OF)C1=NN2C(CC3=CC=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][/C][=Branch1][Ring2][=N][\O][F][C][=N][N][C][Branch1][P][C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][F][=C][N][=C][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch1][Ring1][C][#N][C][Ring1][Branch2][=N][Ring1][P].[C][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][C][=C][Ring1][S]
generated smiles CC1=CC(F)=CC(=C1)C=NC(F)=C2C=CC=C(C#N)C2=N.CC=C3C=C(C=CC4=CC=C(N(C)C)C=C4)C=C3
added!
adding editted molecule!!!
===== for SMILES COC1=CC2=NC=CC(OC3=CC=C(NC(=O)C4=C(I)C=CN(C5=CC=C(F)C=C5)C4=O)C=C3F)=C2C=C1OC =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=N][C][=C][C][Branch2][Ring2][=N][O][C][=C][C][=C][Branch2][Ring1][#C][N][C][=Branch1][C][=O][C][=C][Branch1][C][I][C][=C][N][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][Ring1][=C][=O][C][=C][Ring2][Ring1][Branch2][F][=C][Ring2][Ring1][S][C][=C][Ring2][Ring2][Ring2][O][C]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring2][N][N][C][=C][C][=C][Branch2][Ring1][S][N][C][=Branch1][C][=O][C][=C][C][=C][Branch1][P][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2][F][C][=C][Ring1][S][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][#C][N][C][=C][C][=C][C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][=C][Ring1][N]
generated smiles CC1=CC(F)=C(NC=CC=C(NC(=O)C=CC=C(C2=CC=C(F)C(F)=C2F)CC)C)C=C1NC3=CC=CC(C4=CC=CC=C4)=C3
added!
adding editted molecule!!!
===== for SMILES N=C(NNC(N)=O)C1=CN=C2N=NN(CC3=CC=C4N=CC=CC4=C3)C2=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][=C][Branch1][Branch2][N][N][C][Branch1][C][N][=O][C][=C][N][=C][N][=N][N][Branch1][S][C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][Ring1][S][=N][Ring2][Ring1][Ring2]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][=N][N][C][=N][C][=N][C][=C][Ring1][=Branch1][N][=C][N][Ring1][Branch1][C][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][N][N][C][=Branch1][C][=O][/C][=C][/C][N][Branch1][C][C][C]
generated smiles C1C2=CC(F)=C(NC3=NC=NC4=C3N=CN4CC5=CC=CC=C5C=C2)C=C1NC(=O)/C=C/CN(C)C
added!
adding editted molecule!!!
===== for SMILES COCCOc1cnc2ccc([C@H](C)n3nnc4ccn(-c5cc(C)ns5)c(=O)c43)cc2c1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][C][O][C][=C][N][=C][C][=C][C][Branch2][Ring1][P][C@H1][Branch1][C][C][N][N][=N][C][C][=C][N][Branch1][O][C][=C][C][Branch1][C][C][=N][S][Ring1][=Branch1][C][=Branch1][C][=O][C][=Ring1][=N][Ring1][S][=C][C][Ring2][Ring1][Branch2][=C][Ring2][Ring1][N]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][Branch2][Ring1][#C][N][C][=Branch1][C][=O][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][=Branch1][Ring2][=N][Ring1][=Branch1][C][C][O][Ring1][=Branch1][C][=C][Ring1][S][C][Ring2][Ring1][#Branch1][=C][Ring2][Ring1][N][=C][Ring2][Ring1][S]
generated smiles CCOC(=O)C1=CC=C2C(C=CC3=CN=C(NC(=O)NC=CC=C(C4=CC=C5C(=N4)CCO5)C)C3=C2)=C1
added!
adding editted molecule!!!
===== for SMILES COC1=CC2=C(OC3=CC=C(NC(=O)C4(C(=O)NC5=CCC(F)C=C5)CC4)C=C3F)C=CN=C2C=C1OCCCN1CCOCC1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=C][Branch2][Ring2][O][O][C][=C][C][=C][Branch2][Ring1][=N][N][C][=Branch1][C][=O][C][Branch1][P][C][=Branch1][C][=O][N][C][=C][C][C][Branch1][C][F][C][=C][Ring1][#Branch1][C][C][Ring1][=N][C][=C][Ring2][Ring1][=Branch1][F][C][=C][N][=C][Ring2][Ring1][=C][C][=C][Ring2][Ring2][C][O][C][C][C][N][C][C][O][C][C][Ring1][=Branch1]<eom>
Output: 
output selfies [N][C][=C][C][=C][Branch1][C][F][C][Branch2][Ring1][=N][C][=C][C][=C][N][=C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][=C][C][Ring1][=N][=C][Ring1][P][=C][Ring2][Ring1][=Branch2]
generated smiles N1C=CC=C(F)C1C2=CC=C3N=C(C4=CC=C(F)C=C4)C=CC3=C2C
added!
adding editted molecule!!!
===== for SMILES CC1=CN(C2=CC=C(F)C=C2)C(=O)C(C(=O)NC2=CC=C(OC3=C4C(=NC=C3)NN=C4N[C@H](C)CO)C(F)=C2)=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=C][N][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][=Branch1][C][=O][C][Branch2][Ring2][N][C][=Branch1][C][=O][N][C][=C][C][=C][Branch2][Ring1][Branch2][O][C][=C][C][=Branch1][=Branch1][=N][C][=C][Ring1][=Branch1][N][N][=C][Ring1][Branch2][N][C@H1][Branch1][C][C][C][O][C][Branch1][C][F][=C][Ring2][Ring1][=Branch1][=C][Ring2][Ring2][#Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][Ring2][N][C][=N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][C][=C][Ring2][Ring1][Ring1][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][N][Ring1][O][C][C][C][C][N][C][C][N]
generated smiles C1C=CC(F)=C1NC=NC=CC=C(C(F)(F)F)C=C
added!
adding editted molecule!!!
===== for SMILES CN1C=C(C2=NN3C(=NN=C3C(F)(F)C3=CC=C4N=CC=CC4=C3)N=C2)C=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=C][Branch2][Ring2][#Branch1][C][=N][N][C][=Branch2][Ring1][O][=N][N][=C][Ring1][Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][N][=C][Ring2][Ring1][=Branch1][C][=N][Ring2][Ring1][O]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch2][Ring2][C][N][C][=N][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][C][=C][Ring1][#Branch2][N][=C][Ring1][=C][C][=C][C][=C][C][=C][C][=C][C][Ring1][=Branch1][=N][Ring1][#Branch2][=C][C][=Branch1][#Branch2][=N][Ring2][Ring1][S][C][=Branch1][C][=O][O][C][Ring2][Ring2][C]
generated smiles CC(C)(C)C=NC(NC1=NC2=CC(C(F)(F)F)=CC=C2N=C1C3=CC=C4C=CC=C)C4=N3
added!
adding editted molecule!!!
===== for SMILES C[C@@H](c1ccc2ncccc2c1)n1nnc2ncc(-c3cnn(CCO)c3)nc21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C@@H1][Branch1][#C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][N][N][=N][C][=N][C][=C][Branch1][=N][C][C][=N][N][Branch1][Ring2][C][C][O][C][=Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][C][=N][N][=N][C][=C][C][=C][Branch1][S][C][=C][C][=C][C][=C][C][=C][N][=C][Ring1][#Branch2][Ring1][=Branch1][C][=C][Ring2][Ring1][Ring1][Ring1][#C]
generated smiles CC1=CC(F)=CC=C1C2=NN=NC3=CC=C(C4=CC=CC5=CC=CN=C45)C23
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=CC=C1NC1=NC(NC2=CC=C3CCN(C(C)=O)CC(C)C3=C2)=NC=C1Cl =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][C][=C][Ring1][=Branch1][N][C][=N][C][Branch2][Ring1][O][N][C][=C][C][=C][C][C][N][Branch1][=Branch1][C][Branch1][C][C][=O][C][C][Branch1][C][C][C][Ring1][O][=C][Ring1][#C][=N][C][=C][Ring2][Ring1][=Branch1][Cl]<eom>
Output: 
output selfies [C][C][=Branch1][C][=O][N][C][=C][C][=C][C][Branch1][S][N][=N][C][=C][C][=C][Branch1][C][N][C][=C][Ring1][#Branch1][Ring1][#Branch2][=C][Ring1][#C].[C][C][=C][C][=C][Branch2][Ring1][P][N][C][=N][C][=C][C][Branch1][S][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][N][Ring1][#Branch1][=C][N][=C][Ring1][P][C][=C][Ring2][Ring1][#Branch2]
generated smiles CC(=O)NC1=CC=CC(N=NC2=CC=C(N)C=C2)=C1.C3C=CC=CNC=NC=CC(NC4=CC5=CC=C4C(=O)N5)=CN=CC=C3
added!
adding editted molecule!!!
fp_scores_to_top [0.0547945205479452, 0.23270440251572327, 0.1527777777777778, 0.17721518987341772, 0.20348837209302326, 0.19480519480519481, 0.16091954022988506, 0.2094240837696335, 0.11333333333333333, 0.12080536912751678, 0.21084337349397592, 0.1676300578034682, 0.05228758169934641, 0.2222222222222222, 0.16025641025641027, 0.1276595744680851, 0.03676470588235294, 0.10596026490066225, 0.15753424657534246, 0.125, 0.12318840579710146, 0.16363636363636364, 0.27388535031847133, 0.1761006289308176, 0.23417721518987342, 0.2037037037037037, 0.1839080459770115, 0.24358974358974358, 0.22085889570552147, 0.07142857142857142, 0.24260355029585798, 0.19393939393939394, 0.2254335260115607, 0.14906832298136646, 0.1724137931034483, 0.14835164835164835, 0.19021739130434784, 0.1411764705882353, 0.2289156626506024, 0.16129032258064516, 0.0784313725490196, 0.16774193548387098, 0.11510791366906475, 0.1568627450980392, 0.18243243243243243, 0.09868421052631579, 0.1056338028169014, 0.17751479289940827, 0.2752808988764045, 0.18232044198895028, 0.09876543209876543, 0.17964071856287425, 0.16363636363636364, 0.20540540540540542, 0.16666666666666666, 0.05426356589147287, 0.14705882352941177, 0.08088235294117647, 0.21084337349397592, 0.24022346368715083, 0.21818181818181817, 0.11594202898550725, 0.1878453038674033, 0.25396825396825395, 0.1103448275862069, 0.17901234567901234, 0.2634730538922156, 0.1793478260869565, 0.2839506172839506, 0.1223021582733813, 0.19254658385093168, 0.1978021978021978, 0.1069182389937107, 0.1218274111675127, 0.2085889570552147, 0.16, 0.21022727272727273, 0.22959183673469388, 0.23369565217391305, 0.16382252559726962, 0.14772727272727273, 0.16875, 0.12962962962962962, 0.18072289156626506, 0.15568862275449102, 0.23837209302325582, 0.12962962962962962, 0.21264367816091953, 0.16470588235294117, 0.19767441860465115, 0.08673469387755102, 0.15816326530612246, 0.18357487922705315, 0.16230366492146597, 0.21621621621621623, 0.22580645161290322, 0.0759493670886076, 0.19653179190751446, 0.2085889570552147, 0.16901408450704225]
top 70 [68 48 22 66 63 27 30 59 85 24 78  1 77 38 95 32 13 28 60 94 87 58 10 76
  7 98 74 53 25  4 71 89 97  5 31 70 36 62 26 92 44 49 83 51 67 65 47  3
 23 34 99 81 41 11 54 88 79 52 21 93 39  6 14 75 91 18 43 84  2 33]
len offspring_mol 70
189
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
[C-]#[N+]Oc1cnc(-c2cccc(Cn3nc(-c4cccc(C#N)c4)ccc3=O)c2)nc1

Boltz running on GPU 1
9.66
Fc1cc(F)cc(-c2ccc3nnc(CNc4ccnc5cc(OCCN6CCCC6)cnc45)n3n2)c1

Boltz running on GPU 1
10.38
Already in buffer
Cn1cc(-c2ccc3ncc(S(=O)(=O)n4ncc5ncc(C6=CCN=C6)cc54)n3c2)cn1

Boltz running on GPU 1
10.82
Cn1cc(Cn2cc(C(=O)Nc3cc(F)c(-c4c[nH]c5ncnc(N)c45)cc3F)c(=O)c(-c3ccc(F)cc3)c2)cn1

Boltz running on GPU 1
11.9
FC(F)(C=CCc1ccc2ncccc2c1)c1ccc2ncccc2c1

Boltz running on GPU 1
10.14
O=c1[nH]ccc2c(Cc3nnc4ccc(C5=Cc6cccnc6CC5)nn34)cccc12

Boltz running on GPU 1
10.05
C[C@H](c1cccc(-c2ncc(OCC3CCN(C)CC3)cn2)c1)n1cc(C2=CC=CC2)cc(F)c1=O

Boltz running on GPU 1
10.76
Already in buffer
Already in buffer
Already in buffer
C1=CSC(c2ccc3nnc(Cc4ccc5ncccc5c4)n3n2)=CC1

Boltz running on GPU 1
10.79
Already in buffer
Already in buffer
Already in buffer
CCC(c1ccc2ncccc2c1F)n1cnc2cnc(-c3ccc(C(N)=O)c(F)c3)nc21

Boltz running on GPU 1
10.41
Cc1c(C(=O)Nc2nnc3ccc(-c4cnn(C)c4)nn23)c(=O)n(-c2ccccc2)n1C

Boltz running on GPU 1
9.13
250/1000 | avg_top1: 12.050 | avg_top10: 11.808 | avg_top100: 11.065 | avg_sa: 3.243 | div: 0.824
{'avg_top1': 12.05, 'avg_top10': 11.808000000000002, 'avg_top100': 11.065200000000004, 'auc_top1': 2.9294499999999997, 'auc_top10': 2.8495999999999997, 'auc_top100': 2.6522073095238095, 'avg_sa': 3.2434673306758133, 'diversity_top100': 0.823854951474068, 'n_oracle': 250}
C[C@@H](c1cc2cccnc2cc1F)n1cnc2ncc(-c3cnn(C)c3)nc21

Boltz running on GPU 1
10.86
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Cc1[nH]nc2c1CC(C(=O)Nc1nnc3ccc(-c4cc(F)cc(F)c4)nn13)=C2

Boltz running on GPU 1
8.64
CC(C)OC1=CC=C2C(F)=C(N=Nc3ccc(-c4ccccc4-c4c[nH]nn4)cc3)C(F)=C12

Boltz running on GPU 1
9.15
Cc1nc([C@H](C)NC(=O)c2ccc(C3=NN4C(=NC=NC4Cc4ccc5ncccc5c4)N=C3)cc2Cl)no1

Boltz running on GPU 1
10.18
Already in buffer
Fc1ccc(C(=C2Cc3cc(F)cc(c3)C=NC=N2)c2ccccc2)cc1

Boltz running on GPU 1
6.98
C/C(=N\OF)c1ccc2ncc(CC=CC(F)(F)c3nnc4ncc(-c5cc(F)cc(F)c5)nn34)n2n1

Boltz running on GPU 1
10.16
NC(=O)c1ccc(-c2cnc3ncn(CN4CCC(O)CC4)c3n2)cc1F

Boltz running on GPU 1
8.34
CN1CC=C(Oc2ccc(NC(=O)c3cccc(-c4ccccc4)[n+]3[O-])cc2F)CC1

Boltz running on GPU 1
8.6
Already in buffer
Already in buffer
Already in buffer
Fc1ccc2ncc(Cc3c(F)cc4ncccc4c3F)n2n1

Boltz running on GPU 1
8.85
CC(=O)N1CCc2ccc(Nc3c(F)cc4ncccc4c3F)cc2C(C)C1

Boltz running on GPU 1
7.82
260/1000 | avg_top1: 12.050 | avg_top10: 11.808 | avg_top100: 11.070 | avg_sa: 3.244 | div: 0.824
{'avg_top1': 12.05, 'avg_top10': 11.808000000000002, 'avg_top100': 11.069700000000003, 'auc_top1': 3.04995, 'auc_top10': 2.9676799999999997, 'auc_top100': 2.7628818095238095, 'avg_sa': 3.2436210023969556, 'diversity_top100': 0.8235285277930735, 'n_oracle': 260}
Already in buffer
CC(=NNC(N)=O)c1cnc2nnn(C(F)(F)c3nnc4ncc(-c5cc(F)cc(F)c5)nn34)c2n1

Boltz running on GPU 1
10.15
CCN1Cc2c(ccc(F)c2C#N)O[C@@H](c2cccs2)CNC(=O)c2c(N)nn3ccc1nc23

Boltz running on GPU 1
11.88
CC(=O)N1CCc2ccc(Nc3ncc(Cl)c(Nc4ccccc4C)n3)cc2C(C)C1

Boltz running on GPU 1
10.39
Already in buffer
CNCc1nnc2ccc(-c3cc(F)cc(F)c3)nn12

Boltz running on GPU 1
7.72
CC(=O)N1CCc2ccc(Nc3ncc(Cl)c(Nc4ccccc4C(=O)NN)n3)cc2C(C)C1

Boltz running on GPU 1
11.71
Already in buffer
Cc1nc([C@H](C)NC(=O)c2ccc(-c3cnc4ncc(F)n4n3)cc2Cl)no1

Boltz running on GPU 1
8.0
Nc1nccc(Oc2ccc(NC(=O)C3=C(F)c4ncc(CC5=CC=C(Cl)C5)n4C3)cc2F)c1Cl

Boltz running on GPU 1
10.03
Cc1ccc(-n2c(O)c([C@H](C)c3c(Cl)ccc(F)c3Cl)c(=O)[nH]c2=O)cc1

Boltz running on GPU 1
7.43
C[C@H]1CNC(=O)c2c(N)nn3ccc(nc23)N(F)Cc2c(ccc(F)c2C#N)O1

Boltz running on GPU 1
11.37
Cn1cc(OCc2nnc3ncc(-c4ccccc4)nn23)cn1

Boltz running on GPU 1
6.67
270/1000 | avg_top1: 12.050 | avg_top10: 11.825 | avg_top100: 11.106 | avg_sa: 3.287 | div: 0.827
{'avg_top1': 12.05, 'avg_top10': 11.825, 'avg_top100': 11.1064, 'auc_top1': 3.1704499999999998, 'auc_top10': 3.085845, 'auc_top100': 2.8737623095238094, 'avg_sa': 3.287214449752948, 'diversity_top100': 0.8266832435638253, 'n_oracle': 270}
COCCOc1cnc2ccc([C@H](C)N3C=NN(C)C=N3)cc2c1

Boltz running on GPU 1
8.78
Cc1[nH]nc2c1CC(C(=O)Nc1ccc(Oc3ccnc4[nH]nc(F)c34)c(F)c1)=C2

Boltz running on GPU 1
10.52
CC(=O)Nc1cccc(N=Nc2ccc(N)cc2)c1.O=c1[nH]c2ccc1c(NC1=CN=CC=CCC=CC=CNC=NC=C1)c2

Boltz running on GPU 1
[Errno 2] No such file or directory: '/data/boltz/results/boltz_results_c-met_CC(=O)Nc1cccc(N=Nc2ccc(N)cc2)c1.O=c1[nH]c2ccc1c(NC1=CN=CC=CCC=CC=CNC=NC=C1)c2/predictions/c-met_CC(=O)Nc1cccc(N=Nc2ccc(N)cc2)c1.O=c1[nH]c2ccc1c(NC1=CN=CC=CCC=CC=CNC=NC=C1)c2/affinity_c-met_CC(=O)Nc1cccc(N=Nc2ccc(N)cc2)c1.O=c1[nH]c2ccc1c(NC1=CN=CC=CCC=CC=CNC=NC=C1)c2.json'
-0.0
Already in buffer
CC(C)Oc1cc(-c2ccn(C3CCNCC3)n2)cnc1N

Boltz running on GPU 1
8.02
Already in buffer
Fc1cc2ncccc2c(F)c1Cc1nnc2cccnn12

Boltz running on GPU 1
8.91
Already in buffer
Already in buffer
Cc1[nH]nc2c1CC(C(=O)Nc1ccc(Oc3cnn(C)c3)c(F)c1)=C2

Boltz running on GPU 1
8.43
Cc1nc([C@H](C)NC(=O)c2nnc3ccc(-c4cnn(C)c4)nn23)no1

Boltz running on GPU 1
7.48
Already in buffer
CC(=NF)c1ccc2ncc(Cc3c(F)cccc3F)n2n1

Boltz running on GPU 1
10.31
CCN1Cc2c(ccc(O)c2C#N)O[C@@H](C)CNC(=O)c2c(N)nn3ccc1nc23

Boltz running on GPU 1
10.81
O=[N+]([O-])c1cccc(CNc2cc(Cl)c3ncccc3c2)c1

Boltz running on GPU 1
7.37
280/1000 | avg_top1: 12.050 | avg_top10: 11.825 | avg_top100: 11.110 | avg_sa: 3.316 | div: 0.828
{'avg_top1': 12.05, 'avg_top10': 11.825, 'avg_top100': 11.1101, 'auc_top1': 3.2909499999999996, 'auc_top10': 3.2040949999999997, 'auc_top100': 2.9848448095238096, 'avg_sa': 3.3160946669490956, 'diversity_top100': 0.8276877883807475, 'n_oracle': 280}
Already in buffer
CC=C1C=CC(C=Cc2ccc(N(C)C)cc2)=C1.Cc1cc(F)cc(C=NC(F)=C2C=CC=C(C#N)C2=N)c1

Boltz running on GPU 1
[Errno 2] No such file or directory: '/data/boltz/results/boltz_results_c-met_CC=C1C=CC(C=Cc2ccc(N(C)C)cc2)=C1.Cc1cc(F)cc(C=NC(F)=C2C=CC=C(C#N)C2=N)c1/predictions/c-met_CC=C1C=CC(C=Cc2ccc(N(C)C)cc2)=C1.Cc1cc(F)cc(C=NC(F)=C2C=CC=C(C#N)C2=N)c1/affinity_c-met_CC=C1C=CC(C=Cc2ccc(N(C)C)cc2)=C1.Cc1cc(F)cc(C=NC(F)=C2C=CC=C(C#N)C2=N)c1.json'
-0.0
COc1ccc2ncc3c(c2c1)OCC(=O)N3C

Boltz running on GPU 1
7.47
OC[C@@H]1CN(c2ncc(C3=CCNCC3)cn2)CCO1

Boltz running on GPU 1
6.99
Already in buffer
COc1cnc2ccc([C@H](C)C=CN)cc2c1

Boltz running on GPU 1
8.33
COc1ccc2c(OCc3nnc4n3CC(C)=C4)ccnc2c1

Boltz running on GPU 1
9.84
[(12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15350>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17350>), (11.73, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa270>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc820>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b050b0>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa510>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b270>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4deb0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa040>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c740>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ba0>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c890>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b580>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05200>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c190>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c350>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc660>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a6d0>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05660>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc190>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05510>), (11.04, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b3c0>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cd60>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b053c0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c510>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c5f0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc270>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b900>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12e40>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05580>), (10.93, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc7b0>), (10.92, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcba0>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05e40>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cba0>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc900>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc9e0>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c75f0>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9add0>), (10.86, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b740>), (10.82, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17580>), (10.81, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a350>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ac0>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c80>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05dd0>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17900>), (10.79, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b430>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc350>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc5f0>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b2e0>), (10.74, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05350>), (10.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa0b0>), (10.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf20>), (10.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a5f0>), (10.65, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc890>), (10.63, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cac0>), (10.63, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afceb0>), (10.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b052e0>), (10.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b059e0>), (10.6, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c900>), (10.59, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17a50>), (10.58, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc200>), (10.56, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc740>), (10.54, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c3c0>), (10.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05a50>), (10.52, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d9e0>), (10.51, <rdkit.Chem.rdchem.Mol object at 0x7f3d65eb44a0>), (10.51, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a660>), (10.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c3c0>), (10.49, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (10.47, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c430>), (10.46, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcb30>), (10.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcdd0>), (10.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15c10>), (10.41, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b660>), (10.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12eb0>), (10.4, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9aeb0>), (10.39, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7a50>), (10.38, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c7b0>), (10.38, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcf90>), (10.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa580>), (10.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b0b0>), (10.35, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c820>), (10.35, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cb30>)]
[0.009105885197828748, 0.008992533929806923, 0.008977420427404013, 0.008962306925001103, 0.00892452316899383, 0.008916966417792374, 0.008909409666590918, 0.008909409666590918, 0.00886406915938219, 0.008856512408180734, 0.00884895565697928, 0.00884895565697928, 0.00884895565697928, 0.00881872865217346, 0.008811171900972005, 0.008743161140158912, 0.008728047637756002, 0.008705377384151636, 0.008690263881748726, 0.008644923374539997, 0.008629809872137087, 0.008629809872137087, 0.008629809872137087, 0.008629809872137087, 0.008622253120935633, 0.008614696369734177, 0.008607139618532723, 0.008607139618532723, 0.008592026116129811, 0.008584469364928357, 0.008554242360122538, 0.008546685608921084, 0.008539128857719628, 0.008524015355316718, 0.008524015355316718, 0.008478674848107989, 0.008478674848107989, 0.008471118096906535, 0.008463561345705079, 0.008463561345705079, 0.008463561345705079, 0.008463561345705079, 0.008463561345705079, 0.008456004594503623, 0.008448447843302169, 0.008448447843302169, 0.008440891092100713, 0.00840310733609344, 0.00840310733609344, 0.00840310733609344, 0.00838799383369053, 0.008380437082489074, 0.008380437082489074, 0.008380437082489074, 0.008380437082489074, 0.008365323580086164, 0.008365323580086164, 0.008350210077683256, 0.008342653326481798, 0.008304869570474525, 0.008274642565668705, 0.008274642565668705, 0.008274642565668705, 0.008274642565668705, 0.008274642565668705, 0.008267085814467251, 0.008267085814467251, 0.008259529063265795, 0.008251972312064341, 0.008236858809661431, 0.008236858809661431, 0.008236858809661431, 0.008229302058459977, 0.008221745307258521, 0.008221745307258521, 0.008206631804855612, 0.008176404800049792, 0.008168848048848338, 0.008161291297646882, 0.008161291297646882, 0.008161291297646882, 0.008161291297646882, 0.008153734546445426, 0.008131064292841063, 0.008131064292841063, 0.008131064292841063, 0.008115950790438153, 0.008115950790438153, 0.008093280536833789, 0.008055496780826513, 0.008047940029625058, 0.00803282652722215, 0.00803282652722215, 0.008017713024819238, 0.008017713024819238, 0.008010156273617784, 0.008002599522416328, 0.007995042771214874, 0.007979929268811964, 0.007964815766409053, 0.007949702264006145, 0.007949702264006145, 0.007942145512804689, 0.007942145512804689, 0.007934588761603235, 0.007927032010401779, 0.007911918507998869, 0.007904361756797415, 0.007874134751991595, 0.00786657800079014, 0.00786657800079014, 0.007859021249588686, 0.007859021249588686, 0.00785146449838723, 0.007843907747185776, 0.007843907747185776, 0.00783635099598432, 0.00783635099598432, 0.00782123749358141, 0.00782123749358141]
[(10.52, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d9e0>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05660>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (10.6, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c900>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (10.35, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cb30>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05dd0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc270>), (10.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b059e0>), (10.35, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cb30>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (10.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b052e0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (10.74, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05350>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc350>), (10.35, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cb30>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (10.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf20>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05580>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17900>), (10.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf20>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05510>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (10.63, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cac0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa040>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc9e0>), (10.47, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c430>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (10.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b059e0>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05580>), (10.39, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7a50>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc270>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (10.65, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc890>), (10.81, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a350>), (10.58, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc200>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ac0>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c350>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b580>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (10.79, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b430>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (10.54, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c3c0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (10.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf20>), (10.41, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b660>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12e40>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c350>), (10.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b059e0>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc9e0>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05660>), (10.47, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c430>), (10.46, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcb30>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (10.51, <rdkit.Chem.rdchem.Mol object at 0x7f3d65eb44a0>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (10.38, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcf90>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c740>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17350>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a6d0>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12e40>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc9e0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (10.35, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c820>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (10.6, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c900>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (10.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b0b0>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05660>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05660>), (10.63, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afceb0>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (10.74, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05350>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15350>), (10.41, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b660>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05660>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4deb0>), (10.86, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b740>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c80>), (10.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05a50>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05e40>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b053c0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (10.38, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c7b0>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc190>), (10.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a5f0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc660>)]
Bin size: 100
===== for SMILES O=C1NCCCCN2C=C(C=N2)C2=CN=C3C=CC(=CC3=C2)CCN2N=C(C=CC2=O)C2=CC=C1C(C(F)(F)F)=C2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][N][=C][C][=C][C][=Branch1][Branch2][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][=C][Ring2][Ring2][C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][Ring2][Ring1][C][=C][Ring2][Ring1][=Branch1]
generated smiles O=C(O)C1=C2C=CC3=C1C=CC4=CC5=CC=C(N(C)C)C=C5N=C4C3=C2
added!
adding editted molecule!!!
===== for SMILES CN1C=C(CN2C=C(C(=O)NC3=C(F)C=C(C4=CNC5=NC=NC(N)=C45)C(F)=C3)C(=O)C(C3=CC=C(F)C=C3)=C2)C=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=C][Branch2][=Branch1][Ring2][C][N][C][=C][Branch2][Ring2][#Branch1][C][=Branch1][C][=O][N][C][=C][Branch1][C][F][C][=C][Branch1][P][C][=C][N][C][=N][C][=N][C][Branch1][C][N][=C][Ring1][#Branch2][Ring1][#Branch1][C][Branch1][C][F][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][=C][Ring2][Ring2][Ring1][C][=N][Ring2][Ring2][=Branch2]<eom>
Output: 
output selfies [N][C][=C][C][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][Ring1][=N][C][=C][Ring2][Ring1][=Branch1][F]
generated smiles NC1=CC=C(C2=CC=C3C(=C2)C(F)(F)C4=CC(F)=CC=C43)C=C1F
added!
adding editted molecule!!!
===== for SMILES CCN1CC2=C(C=CC(F)=C2C#N)O[C@@H](C2=CC=CS2)CNC(=O)C2=C3N=C1C=CN3N=C2N =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][N][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][#N][O][C@@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][C][N][C][=Branch1][C][=O][C][=C][N][=C][Ring2][Ring1][#Branch2][C][=C][N][Ring1][=Branch1][N][=C][Ring1][=Branch2][N]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring2][=Branch1][N][C][=Branch1][C][=O][N][C][C][C][C@@H1][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][C][C][Ring2][Ring1][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][S][C]
generated smiles C1COC(=O)C2=CC=CC(NC(=O)NCCC[C@@H1]1NC3=CC=C(C(F)(F)F)C=C3CC)=C2C=CC
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=C][N][=C][Branch1][#Branch2][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=N][=C][Ring1][P][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][F]
generated smiles C12C=CC(F)=C(C3=CC=C4C=CN=C(NC5=CC=CC=C5)C4=C3C=C1)C=C2C6=CC=CC=C6F
added!
adding editted molecule!!!
===== for SMILES CC(=NF)C1=NN2C(CC3=C(F)C=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Ring1][=N][F][C][=N][N][C][Branch2][Ring1][Ring2][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][=C][N][=C][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch1][Ring1][C][#N][C][Ring1][Branch2][=N][Ring1][P]
generated smiles CC1=CC(F)=CC(=C1)C=NC(F)=C2C=CC=C(C#N)C2=N
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=NN(CCC3=CC=C4N=CC(C5=CN(CCO)N=C5)=CC4=C3)C(=O)C=C2)C=C1C(F)(F)F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][#C][C][=N][N][Branch2][Ring1][S][C][C][C][=C][C][=C][N][=C][C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][=C][C][Ring1][=C][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][P][C][Branch1][C][F][Branch1][C][F][F]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][C][=C][Branch2][Ring1][P][N][C][=Branch1][C][=O][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2][C][=C][Ring1][S][Ring2][Ring1][#Branch1][=C][C][=C][Ring2][Ring1][=N][Ring2][Ring1][P]
generated smiles CC(C)(C)C1=CC=CC2(C=CC=CN=CC3=CNC(=O)NC=CC=C3C=CC=CC(C(F)(F)F)=C)C=C21
added!
adding editted molecule!!!
===== for SMILES CC(N=O)c1ccc2nnc(Cc3c(F)cc4ncccc4c3F)n2n1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch1][Ring1][N][=O][C][C][=C][C][=N][N][=C][Branch2][Ring1][Ring2][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][N][Ring2][Ring1][C][N][=Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Ring1][=Branch1][=C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring2][Ring1][=Branch1][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring2][Ring1][=Branch2]
generated smiles C1C2=CC(F)=CC(=C2)C=NC=NC1=C(C3=CC=C(F)C=C3)C4=CC=CC=C4
added!
adding editted molecule!!!
===== for SMILES CC(N=O)C1=NN2C(=NN=C2CC2=C(F)C=C3N=CC=CC3=C2F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch1][Ring1][N][=O][C][=N][N][C][=Branch2][Ring1][=Branch2][=N][N][=C][Ring1][Branch1][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch2][Ring2][C][C][=C][C][=C][C][Branch2][Ring1][=Branch1][N][C][=Branch1][C][=O][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][=C][Ring2][Ring1][Ring1][=C][C][=C][Ring2][Ring1][#Branch2][F]
generated smiles C1C(C)(C2)C=NC(C=CC=CC1(NC(=O)C3=NC4=CC=CC=C4C=C3F)C)C=C2F
added!
adding editted molecule!!!
===== for SMILES CC(c1c(F)cc2ncc(-c3cnn(C)c3)cc2c1F)n1nnc2ccc(-c3cnn(CCO)c3)nc21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][C][=N][N][Branch1][C][C][C][=Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=C][C][=C][Branch1][=N][C][C][=N][N][Branch1][Ring2][C][C][O][C][=Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][Branch1][C][C][O][C][=C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][N][N][=N][C][=C][C][=C][Branch1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][C][N][=N][NH1][C][=Ring1][Branch1][C][=C][Ring1][P][C][Branch1][C][F][=C][Ring2][Ring1][#Branch2][Ring2][Ring1][=N]
generated smiles CC(C)OC1=CC=C2C(F)=C(N=NC3=CC=C(C4=CC=CC=C4C=5N=N[NH1]C=5)C=C3)C(F)=C21
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Ring2][S][=C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][N][=C][Ring1][O][C][=C][C][=C][Branch1][S][N][C][C][N][Branch1][=Branch1][C][C][C][Ring1][Ring1][C][C][Ring1][=Branch2][C][=C][Ring1][#C][C][=C][Ring2][Ring1][P][C][=C][Ring2][Ring2][=Branch1][C]
generated smiles CC1=CC(F)=CC(=C12)C=NC=NC(=CC3=C(F)C=CC=C3N=CC4=CC=C(N5CCN(C6CC6)CC5)C=C4C=C2C)CC
added!
adding editted molecule!!!
===== for SMILES O=C(NC1=CC=C(OC2=CC=NC(NC(=O)N3CCC3)=C2)C(F)=C1)C1=CN(CC2CC2)C(=O)N(C2=CC=C(F)C=C2)C1=O =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][Branch2][Ring2][#Branch1][N][C][=C][C][=C][Branch2][Ring1][#Branch1][O][C][=C][C][=N][C][Branch1][N][N][C][=Branch1][C][=O][N][C][C][C][Ring1][Ring2][=C][Ring1][=N][C][Branch1][C][F][=C][Ring2][Ring1][Branch1][C][=C][N][Branch1][#Branch1][C][C][C][C][Ring1][Ring1][C][=Branch1][C][=O][N][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][Ring2][Ring1][C][=O]<eom>
Output: 
output selfies [C][C][C][C][=N][C][Branch2][Ring2][=Branch1][C][=C][C][=C][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][Cl][C][=C][Ring2][Ring1][C][=C][C][=C][Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][C][C][N][C][C][C][C][C][Ring1][=Branch1]
generated smiles C1CC2C=NC3(C=CC=C(NC4=CC=C(C(F)(F)F)C=C4Cl)C3=CC=C2)C(=O)N1CCCN5CCCCC5
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=CN3C(SC4=CC=C5N=CC6=C(OCC(=O)N6C)C5=C4)=NN=C3C(F)=C2)S1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][P][C][=C][N][C][Branch2][Ring1][N][S][C][=C][C][=C][N][=C][C][=C][Branch1][O][O][C][C][=Branch1][C][=O][N][Ring1][#Branch1][C][C][Ring1][N][=C][Ring1][S][=N][N][=C][Ring2][Ring1][=Branch1][C][Branch1][C][F][=C][Ring2][Ring1][O][S][Ring2][Ring1][S]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][=Branch1][C][=O][N][C][=N][C][=C][C][=C][Branch1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][C][N][=N][NH1][C][Ring1][=Branch2][=O][C][=C][Ring1][P][Ring2][Ring1][Branch1].[N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][#Branch1][=Branch1][C][=C][C][=C][C][=Branch2][=Branch1][=Branch1][=C][N][=C][Branch2][Branch1][O][C][=C][C][=C][Branch2][Ring2][P][N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring1][#C][C][=C][N][=C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][=C][C][=C][C][=C][Ring1][P][Ring1][=Branch1][C][=C][Ring2][Ring1][#Branch1][C][=C][Ring2][Ring1][S][C][=C][Ring2][Ring2][=Branch1][C][=C][Ring2][Ring2][=N][=C][Ring2][Branch1][Ring1]
generated smiles CC(C)C(=O)N1C=NC=C2C=C(C3=CC4=CC=C3CN=N[NH1]C4)OC=C21.NC(=O)C=CC=C5CC=CC=C6C(=CN=C(C=CC=C(NC(=O)C=CC=CC(C7=CN=C(C8=CC=C(F)C=C8)C9=CC=CC=C79)C=C)C)C6C)C5=C
added!
adding editted molecule!!!
===== for SMILES CC(=O)N1CCC2=CC=C(NC3=NC=C(Cl)C(NC4=CC=CC=C4C(=O)NN)=N3)C=C2C(C)C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][N][C][C][C][=C][C][=C][Branch2][Ring1][#C][N][C][=N][C][=C][Branch1][C][Cl][C][Branch1][S][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][N][N][=N][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch2][C][Branch1][C][C][C][Ring2][Ring1][#C]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][C][=C][Branch1][#C][N][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=Branch2][N][=C][N][Branch1][=N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1][Cl][C][=Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1]
generated smiles CC(C1)CC2=C(NC3=NC4=CC=CC=C4C3)N=CN(C5=CC=C(Cl)C=C5Cl)C2C(=O)N1C6=CC=C(Cl)C=C6
added!
adding editted molecule!!!
===== for SMILES CC(=NNC(N)=O)C1=CN=C2N=NN(CC3=CC4=CC=CN=C4C=C3F)C2=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Branch2][=N][N][C][Branch1][C][N][=O][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch1][=C][N][C][=C][C][=C][Branch1][C][N][C][=C][Ring1][#Branch1][F][=N][C][=C][Ring1][#C][C][=C][C][=C][N][=C][N][=C][Branch1][C][N][N][=C][Ring1][#Branch1][Ring1][#Branch2]
generated smiles CC(C)(C)C1=NC(NC2=CC=C(N)C=C2F)=NC=C1C=C3C=CN=CN=C(N)N=C3
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C2=CC(F)=CN=C2C=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][=Branch1][C][=C][Branch1][C][F][C][=C][C][Branch1][C][F][=C][N][=C][Ring1][#Branch1][C][=C][Ring1][N][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [N][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch2][Ring1][=Branch1][N][=C][C][=C][C][=C][Branch1][C][F][C][Branch1][=Branch1][C][=Branch1][C][=O][O][=C][Ring1][#Branch2][F][C][=C][Ring2][Ring1][Ring1][Ring2][Ring1][Branch2]
generated smiles NC1=NC(F)=CC2=CC=C(N=CC3=CC=C(F)C(C(=O)O)=C3F)C=C21
added!
adding editted molecule!!!
===== for SMILES O=c1ccc(-n2ccc3ccc(F)cc32)nn1CCOc1ccnc2cc(OCCCN3CCOCC3)ccc12 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][C][=C][C][Branch1][P][N][C][=C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][Ring1][#Branch2][=N][N][Ring1][S][C][C][O][C][=C][C][=N][C][=C][C][Branch1][=N][O][C][C][C][N][C][C][O][C][C][Ring1][=Branch1][=C][C][=C][Ring2][Ring1][Ring2][Ring1][S]<eom>
Output: 
output selfies [O][=C][Branch2][Ring1][N][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][Ring1][S][N][C][C][C][N][C][C][O]
generated smiles O=C(C1=CC=CC(F)=C1NC2=CC=C(F)C=C2)CCNCCO
added!
adding editted molecule!!!
===== for SMILES C/C(=N\OCCCO)C1=NN2C(=NN=C2CC2=C(F)C=C3N=CC=CC3=C2F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][/C][=Branch1][#Branch1][=N][\O][C][C][C][O][C][=N][N][C][=Branch2][Ring1][=Branch2][=N][N][=C][Ring1][Branch1][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][C][=C][Ring1][Branch2][C][=C][C][=C][N][=C][Branch1][#Branch2][N][C][C][C][O][C][C][Ring1][=Branch1][N][=C][Ring1][=N][N][=C][Ring1][P][N].[H+1]
generated smiles CC1=C(F)C(F)=CC=C1C2=CC3=CN=C(NC4CCOCC4)N=C3N=C2N.[H+1]
added!
adding editted molecule!!!
===== for SMILES COC1=CC=C2C(=C1)N=CC=C2OCC1=NN=C2C(F)=CC(C3=CC(C)=CS3)=CN12 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][N][=C][C][=C][Ring1][#Branch1][O][C][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][C][Branch1][C][C][=C][S][Ring1][=Branch1][=C][N][Ring1][S][Ring1][=N]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][Branch2][Ring1][=N][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1][Ring1][S][=C][C][Branch1][Ring1][O][C][=C][Ring2][Ring1][=Branch2][O][C]
generated smiles C1OC=CC=CC2(C3=CC=CC(F)=C3NC4=CC=C(Cl)C=C42)C=C1OC
added!
adding editted molecule!!!
===== for SMILES CC(=NNC(N)=O)C1=NN2C(C(O)C3=C(F)C=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Branch2][=N][N][C][Branch1][C][N][=O][C][=N][N][C][Branch2][Ring1][#Branch1][C][Branch1][C][O][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][=C][N][=C][Ring2][Ring1][Ring1][C][=C][Ring2][Ring1][#Branch1]<eom>
Output: 
output selfies [C][C][O][C][=N][C][Branch1][C][F][=C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][N][N][C][=N][C][=C][C][Branch1][P][C][=C][N][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][Ring1][=C][=C][Ring1][P][C][=Branch1][C][=O][NH1][Ring2][Ring1][#Branch2]
generated smiles CCOC=NC(F)=C1C=CC(F)=C(N2C=NC=CC(C3=CN=C4C=CC=CC4=C3)=C2)C(=O)[NH1]1
added!
adding editted molecule!!!
===== for SMILES O=C1OCC2=NC(C3=CC=C(F)C=C3F)C(OC3=CC=NC4=C3C(C3=CC=CN=C3)=CN4)=C12 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][O][C][C][=N][C][Branch1][=N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][F][C][Branch2][Ring1][=Branch2][O][C][=C][C][=N][C][=C][Ring1][=Branch1][C][Branch1][=Branch2][C][=C][C][=C][N][=C][Ring1][=Branch1][=C][N][Ring1][O][=C][Ring2][Ring1][S][Ring2][Ring1][=N]<eom>
Output: 
output selfies [C][O][C][=C][C][=N][C][=C][C][Branch2][Ring1][P][C][=C][C][=C][Branch2][Ring1][Ring2][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][C][=C][Ring1][P][=C][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][N][O][C]
generated smiles COC=C1C=NC=CC(C2=CC=C(NC3=CC=C(C(F)(F)F)C=C3)C=C2C1)C=COC
added!
adding editted molecule!!!
===== for SMILES C/C(=N\OC(N)=O)C1=NN2C(CC3=C(F)C=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][/C][=Branch1][Branch2][=N][\O][C][Branch1][C][N][=O][C][=N][N][C][Branch2][Ring1][Ring2][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][=C][N][=C][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][O][C][=Branch1][C][=O][/N][=C][Branch1][C][/N][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2].[C][C][=C][C][=C][Branch2][Ring1][#Branch1][N][C][=Branch1][C][=O][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2][C][=C][Ring1][=N][C][=C][Ring2][Ring1][Ring2]
generated smiles CC(C)OC(=O)/N=C(/N)C1=CC=C(F)C(F)=C1.C2C=CC=C(N3C(=O)C4=CC=C(F)C(F)=C4C=C3)C=C2
added!
adding editted molecule!!!
===== for SMILES CC(=NNC(N)=O)C1=NN2C(=NN=C2[C@@H](C)C2=CC=C3N=CC=CC3=C2)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Branch2][=N][N][C][Branch1][C][N][=O][C][=N][N][C][=Branch2][Ring1][Branch2][=N][N][=C][Ring1][Branch1][C@@H1][Branch1][C][C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][C][=C][C][=N][C][=N][C][Branch1][=N][N][C][=C][C][=C][Branch1][C][N][C][=C][Ring1][#Branch1][=C][Ring1][=C][C][=C][Ring2][Ring1][C][N][C][=N][C][Branch1][C][N][=C][C][=N][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][Ring1][=C]
generated smiles CCC1=CC2=NC=NC(NC3=CC=C(N)C=C3)=C2C4=C1NC=NC(N)=C5C=NC=CC5=C4
added!
adding editted molecule!!!
===== for SMILES COC1=CN=C2C=CC([C@H](C)C3=NN=C4C(F)=CC(C5=CN(C)C=N5)=CN43)=CC2=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][N][=C][C][=C][C][Branch2][Ring1][P][C@H1][Branch1][C][C][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][N][Branch1][C][C][C][=N][Ring1][=Branch1][=C][N][Ring1][=N][Ring1][S][=C][C][Ring2][Ring1][Branch2][=C][Ring2][Ring1][N]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][=C][C][C][=Branch2][Ring1][#Branch2][=C][N][Branch1][=Branch1][C][C][C][Ring1][Ring1][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][P][C][Ring2][Ring1][Branch2]
generated smiles C1OC2=CC=CC(=C2)C(F)=CCC1=CN(C3CC3)C4=CC=CC=C4C5=CC=CC=C5
added!
adding editted molecule!!!
===== for SMILES NC1=NC=NC2=C1C(C1=CC(F)=C(NC(=O)C3=CN(CC4CCOCC4)C=C(C4=CC=C(F)C=C4)C3=O)C=C1F)=CN2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=N][C][=N][C][=C][Ring1][=Branch1][C][Branch2][Branch1][Branch2][C][=C][C][Branch1][C][F][=C][Branch2][Ring2][Branch2][N][C][=Branch1][C][=O][C][=C][N][Branch1][#Branch2][C][C][C][C][O][C][C][Ring1][=Branch1][C][=C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][Ring2][Ring1][Ring2][=O][C][=C][Ring2][Ring1][#C][F][=C][N][Ring2][Ring2][Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][=N][N][C][=N][C][=C][C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][=C][C][=C][Ring1][N][C][=C][Ring2][Ring1][C][F][C][=C][Ring2][Ring1][#Branch2][C][Branch1][C][N][=O]
generated smiles C1C=CC(F)=C(NC=NC2=CC(C3=CC=CC=C3)=CC=C2C=CF)C1C(N)=O
added!
adding editted molecule!!!
===== for SMILES C/C(=N\OF)C1=NN2C(CC3=CC=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][/C][=Branch1][Ring2][=N][\O][F][C][=N][N][C][Branch1][P][C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][F][=C][N][=C][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch1][Ring1][C][#N][C][Ring1][Branch2][=N][Ring1][P].[C][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][C][=C][Ring1][S]
generated smiles CC1=CC(F)=CC(=C1)C=NC(F)=C2C=CC=C(C#N)C2=N.CC=C3C=C(C=CC4=CC=C(N(C)C)C=C4)C=C3
added!
adding editted molecule!!!
===== for SMILES COC1=CC2=NC=CC(OC3=CC=C(NC(=O)C4=C(I)C=CN(C5=CC=C(F)C=C5)C4=O)C=C3F)=C2C=C1OC =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=N][C][=C][C][Branch2][Ring2][=N][O][C][=C][C][=C][Branch2][Ring1][#C][N][C][=Branch1][C][=O][C][=C][Branch1][C][I][C][=C][N][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][Ring1][=C][=O][C][=C][Ring2][Ring1][Branch2][F][=C][Ring2][Ring1][S][C][=C][Ring2][Ring2][Ring2][O][C]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring2][N][N][C][=C][C][=C][Branch2][Ring1][S][N][C][=Branch1][C][=O][C][=C][C][=C][Branch1][P][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2][F][C][=C][Ring1][S][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][#C][N][C][=C][C][=C][C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][=C][Ring1][N]
generated smiles CC1=CC(F)=C(NC=CC=C(NC(=O)C=CC=C(C2=CC=C(F)C(F)=C2F)CC)C)C=C1NC3=CC=CC(C4=CC=CC=C4)=C3
added!
adding editted molecule!!!
===== for SMILES COCCOc1cnc2ccc([C@H](C)n3nnc4ccn(-c5cc(C)ns5)c(=O)c43)cc2c1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][C][O][C][=C][N][=C][C][=C][C][Branch2][Ring1][P][C@H1][Branch1][C][C][N][N][=N][C][C][=C][N][Branch1][O][C][=C][C][Branch1][C][C][=N][S][Ring1][=Branch1][C][=Branch1][C][=O][C][=Ring1][=N][Ring1][S][=C][C][Ring2][Ring1][Branch2][=C][Ring2][Ring1][N]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][Branch2][Ring1][#C][N][C][=Branch1][C][=O][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][=Branch1][Ring2][=N][Ring1][=Branch1][C][C][O][Ring1][=Branch1][C][=C][Ring1][S][C][Ring2][Ring1][#Branch1][=C][Ring2][Ring1][N][=C][Ring2][Ring1][S]
generated smiles CCOC(=O)C1=CC=C2C(C=CC3=CN=C(NC(=O)NC=CC=C(C4=CC=C5C(=N4)CCO5)C)C3=C2)=C1
added!
adding editted molecule!!!
===== for SMILES N=C(NNC(N)=O)C1=CN=C2N=NN(CC3=CC=C4N=CC=CC4=C3)C2=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][=C][Branch1][Branch2][N][N][C][Branch1][C][N][=O][C][=C][N][=C][N][=N][N][Branch1][S][C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][Ring1][S][=N][Ring2][Ring1][Ring2]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][=N][N][C][=N][C][=N][C][=C][Ring1][=Branch1][N][=C][N][Ring1][Branch1][C][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][N][N][C][=Branch1][C][=O][/C][=C][/C][N][Branch1][C][C][C]
generated smiles C1C2=CC(F)=C(NC3=NC=NC4=C3N=CN4CC5=CC=CC=C5C=C2)C=C1NC(=O)/C=C/CN(C)C
added!
adding editted molecule!!!
===== for SMILES C[C@H]1CNC(=O)C2=C3N=C(C=CN3N=C2N)N(F)CC2=C(C=CC(F)=C2C#N)O1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C@H1][C][N][C][=Branch1][C][=O][C][=C][N][=C][Branch1][O][C][=C][N][Ring1][=Branch1][N][=C][Ring1][=Branch2][N][N][Branch1][C][F][C][C][=C][Branch1][N][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][#N][O][Ring2][Ring1][N]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=Branch1][C][=O][C][=C][Branch2][Ring1][P][C][=C][N][=C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][N][=C][Ring1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][F][C][Ring2][Ring1][O][=O]
generated smiles CC1=CC(F)=CC(=C1)C(=O)C=CC2=CN=C(C3=CC=CC=C3)N=C2C4=CC=C(F)C=C4F
added!
adding editted molecule!!!
===== for SMILES COC1=CC2=C(OC3=CC=C(NC(=O)C4(C(=O)NC5=CCC(F)C=C5)CC4)C=C3F)C=CN=C2C=C1OCCCN1CCOCC1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=C][Branch2][Ring2][O][O][C][=C][C][=C][Branch2][Ring1][=N][N][C][=Branch1][C][=O][C][Branch1][P][C][=Branch1][C][=O][N][C][=C][C][C][Branch1][C][F][C][=C][Ring1][#Branch1][C][C][Ring1][=N][C][=C][Ring2][Ring1][=Branch1][F][C][=C][N][=C][Ring2][Ring1][=C][C][=C][Ring2][Ring2][C][O][C][C][C][N][C][C][O][C][C][Ring1][=Branch1]<eom>
Output: 
output selfies [N][C][=C][C][=C][Branch1][C][F][C][Branch2][Ring1][=N][C][=C][C][=C][N][=C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][=C][C][Ring1][=N][=C][Ring1][P][=C][Ring2][Ring1][=Branch2]
generated smiles N1C=CC=C(F)C1C2=CC=C3N=C(C4=CC=C(F)C=C4)C=CC3=C2C
added!
adding editted molecule!!!
fp_scores_to_top [0.267515923566879, 0.21341463414634146, 0.056451612903225805, 0.17647058823529413, 0.26881720430107525, 0.12142857142857143, 0.18125, 0.05343511450381679, 0.06870229007633588, 0.17791411042944785, 0.22613065326633167, 0.1111111111111111, 0.2804878048780488, 0.15568862275449102, 0.22666666666666666, 0.1301775147928994, 0.07894736842105263, 0.14685314685314685, 0.18072289156626506, 0.12179487179487179, 0.014705882352941176, 0.29605263157894735, 0.15757575757575756, 0.045454545454545456, 0.16129032258064516, 0.22580645161290322, 0.16666666666666666, 0.17261904761904762, 0.06060606060606061, 0.12751677852348994, 0.17751479289940827, 0.3170731707317073, 0.0546875, 0.15060240963855423, 0.27380952380952384, 0.136, 0.24324324324324326, 0.2154696132596685, 0.22424242424242424, 0.125, 0.08139534883720931, 0.04964539007092199, 0.21893491124260356, 0.11392405063291139, 0.8828125, 0.1875, 0.1297709923664122, 0.04580152671755725, 0.22839506172839505, 0.27906976744186046, 0.19135802469135801, 0.24479166666666666, 0.20945945945945946, 0.19727891156462585, 0.30319148936170215, 0.25806451612903225, 0.15037593984962405, 0.22395833333333334, 0.17105263157894737, 0.19863013698630136, 0.15060240963855423, 0.23369565217391305, 0.13636363636363635, 0.061224489795918366, 0.24691358024691357, 0.1935483870967742, 0.18518518518518517, 0.14285714285714285, 0.23837209302325582, 0.29411764705882354, 0.19254658385093168, 0.23333333333333334, 0.2413793103448276, 0.1978021978021978, 0.1069182389937107, 0.1218274111675127, 0.2085889570552147, 0.16, 0.21022727272727273, 0.22959183673469388, 0.23369565217391305, 0.16382252559726962, 0.2074468085106383, 0.14772727272727273, 0.16875, 0.12962962962962962, 0.18072289156626506, 0.15568862275449102, 0.23837209302325582, 0.1907514450867052, 0.1891891891891892, 0.21264367816091953, 0.19767441860465115, 0.16470588235294117, 0.15816326530612246, 0.18357487922705315, 0.21621621621621623, 0.16230366492146597, 0.23668639053254437, 0.22580645161290322]
top 70 [44 31 54 21 69 12 49 34  4  0 55 64 51 36 72 88 68 98 80 61 71 79 48 14
 10 99 25 38 57 42 96 37  1 91 78 52 76 82 59 73 92 53 65 70 50 89 90 45
 66 95  6 86 18  9 30  3 27 58 84 26 93 81 97 24 77 94 22 13 87 33]
len offspring_mol 70
189
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
CC(=O)C(F)(F)c1cc2ccc1C(=O)NCCCCn1cc(cn1)-c1cnc3ccc(cc3c1)CCn1nc-2ccc1=O

Boltz running on GPU 1
11.69
C[C@@H](c1ccc2ncc(-c3cnn(C)c3)cc2c1)c1nnc2c(F)cc(-c3cn(C)cn3)cn12

Boltz running on GPU 1
11.7
Cn1cc(-c2ccc3ncc(S(=O)(=O)n4ncc5ncc(-c6cnc7ccc8ccc(N)cc8c(=O)c7c6)cc54)n3c2)cn1

Boltz running on GPU 1
10.4
O=C1C=CCNN1CCc1ccc2ncc(-c3cnn(CCO)c3)cc2c1

Boltz running on GPU 1
9.66
Already in buffer
Cn1cc(Cn2cc(-c3ccc(F)cc3)c(=O)c(-c3cc4cccnc4cc3F)c2)cn1

Boltz running on GPU 1
9.23
290/1000 | avg_top1: 12.050 | avg_top10: 11.825 | avg_top100: 11.134 | avg_sa: 3.357 | div: 0.826
{'avg_top1': 12.05, 'avg_top10': 11.825, 'avg_top100': 11.133899999999999, 'auc_top1': 3.41145, 'auc_top10': 3.322345, 'auc_top100': 3.0960648095238095, 'avg_sa': 3.3570734462591862, 'diversity_top100': 0.8264696524728691, 'n_oracle': 290}
Cc1csc(-c2ccc3c(c2)oc(=O)n3CCOc2ccnc3cc(-c4cnn(C)c4)ccc23)c1

Boltz running on GPU 1
11.11
Fc1cc2ncccc2c(F)c1Cc1cnc2ccc(-c3cc(Cl)c4ncccc4c3)nn12

Boltz running on GPU 1
11.38
C/C(=N\OC(N)=O)c1cc(-c2cnn(C)c2)cn2c(Sc3ccc4ncc(NC5CCN(C)CC5)cc4c3)nnc12

Boltz running on GPU 1
9.43
[C-]#[N+]C1=CN=C2N=NN(C(C)c3ccc4ncc(-c5cnn(C)c5)cc4c3)C12

Boltz running on GPU 1
10.84
Cn1cc(-c2ccc3ncc(S(=O)(=O)n4ncc5ncc(-c6cnn(NC7=CCC(F)C=C7)c6)cc54)n3c2)cn1

Boltz running on GPU 1
10.18
COc1cnc2ccc([C@H](C)c3nnc4c(F)cc(-c5c[nH]cn5)cn34)cc2c1

Boltz running on GPU 1
11.05
COc1cnc2ccc([C@H](C)c3nnc4c(Cc5c(F)cc6ncccc6c5F)cc(-c5cn(C)cn5)cn34)cc2c1

Boltz running on GPU 1
9.76
Cc1cccc(Cn2nc(-c3cccc(C#N)c3)ccc2=O)c1

Boltz running on GPU 1
7.29
CC=Cc1c2cccc1C(=O)OCC[C@@H](Nc1ccc(C(F)(F)F)cc1CC)CCCNC(=O)N2

Boltz running on GPU 1
9.21
Already in buffer
CN1C(=O)COc2c1cnc1ccc(Sc3nnc4c(F)cc(C5=CC=C(F)C5)cn34)cc21

Boltz running on GPU 1
10.13
300/1000 | avg_top1: 12.050 | avg_top10: 11.825 | avg_top100: 11.157 | avg_sa: 3.350 | div: 0.825
{'avg_top1': 12.05, 'avg_top10': 11.825, 'avg_top100': 11.156799999999997, 'auc_top1': 3.5319499999999997, 'auc_top10': 3.4405949999999996, 'auc_top100': 3.2075183095238096, 'avg_sa': 3.349898933132059, 'diversity_top100': 0.8249974119727264, 'n_oracle': 300}
Cc1cc(F)cc(C(=O)C=Cc2cnc(-c3ccccc3)nc2-c2ccc(F)cc2F)c1

Boltz running on GPU 1
7.73
Already in buffer
Already in buffer
Nc1ccc(-c2ccc3c(c2)C(F)(F)c2cc(F)ccc2-3)cc1F

Boltz running on GPU 1
7.65
Already in buffer
Cn1cc(-c2cnc3ncn([C@@H](F)c4cc5cccnc5cc4F)c3n2)cn1

Boltz running on GPU 1
10.79
Fc1cnn2c(C(F)(F)c3ccc4ncccc4c3)nnc2n1

Boltz running on GPU 1
9.71
O=C1OCC2=NC(c3ccc(F)cc3F)C(Oc3ccnc4[nH]cc(-c5nnc6ccc(OC7CCCCC7)nn56)c34)=C12

Boltz running on GPU 1
8.08
Already in buffer
COc1cnc2ccc([C@H](C)N=C(C)c3cnc4nnn(Cc5cc6cccnc6cc5F)c4n3)cc2c1

Boltz running on GPU 1
11.74
CO/N=C(\C)c1ccc2ncc(Cc3c(C(F)(F)F)cc4ncccc4c3F)n2n1

Boltz running on GPU 1
10.67
C/C(=N\OC(=O)[C@@H](C)c1cc2cccnc2cc1F)c1ccc2ncc(Cc3c(F)cc4ncccc4c3F)n2n1

Boltz running on GPU 1
10.73
CO/N=C(\C)c1csc(-c2ccc3nnc(Cc4ccc5ncccc5c4)n3n2)c1

Boltz running on GPU 1
11.2
Already in buffer
Cn1cc(-c2ccc3ncc(S(=O)(=O)N4N=NC=C(Cl)C4Nc4ccccc4C(=O)NN)n3c2)cn1

Boltz running on GPU 1
10.07
310/1000 | avg_top1: 12.050 | avg_top10: 11.828 | avg_top100: 11.179 | avg_sa: 3.353 | div: 0.819
{'avg_top1': 12.05, 'avg_top10': 11.828000000000001, 'avg_top100': 11.178700000000001, 'auc_top1': 3.65245, 'auc_top10': 3.5588599999999997, 'auc_top100': 3.319195809523809, 'avg_sa': 3.353411981696372, 'diversity_top100': 0.8187422953806256, 'n_oracle': 310}
O=C(Nc1ccc(F)cc1)C1(Sc2nnc3ccc(-c4cn[nH]c4)cn23)CC1

Boltz running on GPU 1
8.17
Already in buffer
Already in buffer
Cc1[nH]nc2ccc(C3=CC(c4cnn(C)c4)=CC3)cc12

Boltz running on GPU 1
8.89
Already in buffer
CC1CC2=C(NC3=Nc4ccccc4C3)N=CN(c3ccc(Cl)cc3Cl)C2C(=O)N(c2ccc(Cl)cc2)C1

Boltz running on GPU 1
8.77
CN1CC(C(F)(F)c2ccc3ncccc3c2)=NN=N1

Boltz running on GPU 1
8.82
Already in buffer
Already in buffer
CN1CCC(Nc2cnc3ccc(SN)cc3c2)CC1

Boltz running on GPU 1
7.71
CCN1Cc2c(ccc(C3=C(C)NN(C)CC3)c2C#N)O[C@@H](C)CNC(=O)c2c(N)nn3ccc1nc23

Boltz running on GPU 1
9.6
Already in buffer
Already in buffer
COC=CC1C=CN=CC(=COC)Cc2cc(Nc3ccc(C(F)(F)F)cc3)ccc21

Boltz running on GPU 1
7.53
CC(C)OC(=O)/N=C(/N)c1ccc(F)c(F)c1.O=c1c2ccc(F)c(F)c2ccn1C1=CC=CCC=C1

Boltz running on GPU 1
[Errno 2] No such file or directory: '/data/boltz/results/boltz_results_c-met_CC(C)OC(=O)_N=C(_N)c1ccc(F)c(F)c1.O=c1c2ccc(F)c(F)c2ccn1C1=CC=CCC=C1/predictions/c-met_CC(C)OC(=O)_N=C(_N)c1ccc(F)c(F)c1.O=c1c2ccc(F)c(F)c2ccn1C1=CC=CCC=C1/affinity_c-met_CC(C)OC(=O)_N=C(_N)c1ccc(F)c(F)c1.O=c1c2ccc(F)c(F)c2ccn1C1=CC=CCC=C1.json'
-0.0
CCC(c1nc1=O)n1cnc2ncc(-c3ccc(C(N)=O)c(F)c3)nc21

Boltz running on GPU 1
8.83
c1cnc2ccc3c(c2c1)NCCC3

Boltz running on GPU 1
6.24
320/1000 | avg_top1: 12.050 | avg_top10: 11.828 | avg_top100: 11.179 | avg_sa: 3.353 | div: 0.819
{'avg_top1': 12.05, 'avg_top10': 11.828000000000001, 'avg_top100': 11.178700000000001, 'auc_top1': 3.77295, 'auc_top10': 3.67714, 'auc_top100': 3.430982809523809, 'avg_sa': 3.353411981696372, 'diversity_top100': 0.8187422953806256, 'n_oracle': 320}
Already in buffer
Fc1cc2ncccc2c(F)c1Cc1c(F)cc2ncccc2c1F

Boltz running on GPU 1
10.0
Already in buffer
C[C@H]1CNC(=O)c2c(N)nn3ccc(nc23)N(F)Cc2c(ccc(F)c2O)O1

Boltz running on GPU 1
11.07
O=NC(F)c1ccc2nnc(Cc3c(F)cc4ncccc4c3F)n2n1

Boltz running on GPU 1
10.72
C1=Nc2ccc(Sc3nnc4ccc(OC5CCCCC5)nn34)cc2SC1

Boltz running on GPU 1
9.54
Oc1cnc2nnn(Cc3ccc4ncccc4c3)c2n1

Boltz running on GPU 1
8.82
Cc1csc(C2=CN3C(=NN=C4C=CC(c5ccccc5)=NN43)C(F)=C2)c1

Boltz running on GPU 1
8.5
C1=CN=C2N=NN(Cc3ccc4ncccc4c3)C2C1

Boltz running on GPU 1
8.67
Already in buffer
CC(=O)NN=C(C)c1cnc2nnn(Cc3ccc4ncccc4c3)c2n1

Boltz running on GPU 1
10.53
Already in buffer
Already in buffer
Already in buffer
O=C(NC1=CCC(F)C=C1)C1(C(=O)Nc2ccnc3cc(OCCn4cncn4)cnc23)CC1

Boltz running on GPU 1
9.89
Already in buffer
Already in buffer
Cc1ccccc1Nc1nc(NC2=c3cccnc3=CC2)ncc1Cl

Boltz running on GPU 1
9.02
330/1000 | avg_top1: 12.050 | avg_top10: 11.828 | avg_top100: 11.184 | avg_sa: 3.385 | div: 0.819
{'avg_top1': 12.05, 'avg_top10': 11.828000000000001, 'avg_top100': 11.184200000000002, 'auc_top1': 3.8934499999999996, 'auc_top10': 3.79542, 'auc_top100': 3.542797309523809, 'avg_sa': 3.3848881790925964, 'diversity_top100': 0.8192933286840081, 'n_oracle': 330}
COC1=CC2=NC=NN(Cc3cc4cccnc4cc3F)C2C=C1OC

Boltz running on GPU 1
10.05
Already in buffer
COc1cc2c(OCCN)ccnc2cc1OCCCN1CCCC1

Boltz running on GPU 1
8.01
[(12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15350>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17350>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b350>), (11.73, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa270>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c0b0>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc820>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b159e0>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b050b0>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa510>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b270>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b153c0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa040>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c740>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ba0>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c890>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b580>), (11.11, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c2e0>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05200>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c190>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c350>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc660>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a6d0>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c200>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05660>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc190>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15eb0>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05510>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c2e0>), (11.04, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b3c0>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cd60>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b053c0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c510>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c5f0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc270>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b900>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12e40>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05580>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dba0>), (10.93, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc7b0>), (10.92, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcba0>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05e40>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cba0>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc900>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc9e0>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c75f0>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9add0>), (10.86, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b740>), (10.84, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ceb0>), (10.82, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17580>), (10.81, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a350>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ac0>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c80>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05dd0>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17900>), (10.79, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b430>), (10.79, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b120>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc350>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc5f0>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b2e0>), (10.74, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05350>), (10.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa0b0>), (10.73, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15cf0>), (10.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15510>), (10.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf20>), (10.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b890>), (10.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a5f0>), (10.65, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc890>), (10.63, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cac0>), (10.63, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afceb0>), (10.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b052e0>), (10.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b059e0>), (10.6, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c900>), (10.59, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17a50>), (10.58, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc200>), (10.56, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc740>), (10.54, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c3c0>), (10.53, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a430>), (10.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05a50>), (10.52, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d9e0>), (10.51, <rdkit.Chem.rdchem.Mol object at 0x7f3d65eb44a0>), (10.51, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a660>)]
[0.009031426365762745, 0.00891900197116912, 0.00890401205188997, 0.00888902213261082, 0.008851547334412947, 0.008844052374773372, 0.008836557415133795, 0.008836557415133795, 0.00879908261693592, 0.008791587657296346, 0.008784092697656771, 0.008776597738017197, 0.008776597738017197, 0.008776597738017197, 0.00876910277837762, 0.008761607818738045, 0.008746617899458896, 0.008739122939819322, 0.008671668303063148, 0.008656678383783999, 0.008634193504865273, 0.008619203585586122, 0.008574233827748672, 0.008559243908469523, 0.008559243908469523, 0.008559243908469523, 0.008559243908469523, 0.008551748948829948, 0.008551748948829948, 0.008544253989190374, 0.008536759029550799, 0.008536759029550799, 0.008529264069911224, 0.008521769110271648, 0.008514274150632073, 0.008484294312073775, 0.0084767993524342, 0.008469304392794625, 0.008454314473515474, 0.008454314473515474, 0.008409344715678025, 0.008409344715678025, 0.00840184975603845, 0.008394354796398874, 0.008394354796398874, 0.008394354796398874, 0.008394354796398874, 0.008394354796398874, 0.008386859836759299, 0.008379364877119724, 0.008379364877119724, 0.00837186991748015, 0.008334395119282275, 0.008334395119282275, 0.008334395119282275, 0.0083269001596427, 0.008319405200003125, 0.00831191024036355, 0.00831191024036355, 0.00831191024036355, 0.00831191024036355, 0.00831191024036355, 0.008296920321084401, 0.008296920321084401, 0.008296920321084401, 0.00828193040180525, 0.00828193040180525, 0.008274435442165676, 0.0082369606439678, 0.0082069808054095, 0.0082069808054095, 0.0082069808054095, 0.0082069808054095, 0.0082069808054095, 0.008199485845769926, 0.008199485845769926, 0.008199485845769926, 0.008191990886130351, 0.008184495926490776, 0.008169506007211627, 0.008169506007211627, 0.008169506007211627, 0.008162011047572052, 0.008154516087932478, 0.008154516087932478, 0.008139526168653327, 0.008124536249374177, 0.008109546330095028, 0.008102051370455454, 0.008094556410815877, 0.008094556410815877, 0.008094556410815877, 0.008094556410815877, 0.008087061451176302, 0.008087061451176302, 0.008064576572257577, 0.008064576572257577, 0.008064576572257577, 0.008049586652978427, 0.008049586652978427, 0.008042091693338853, 0.008034596733699278, 0.008027101774059704, 0.007997121935501403, 0.007989626975861829, 0.007982132016222254, 0.007967142096943105, 0.007967142096943105, 0.007952152177663954, 0.007952152177663954, 0.007944657218024379, 0.007937162258384804, 0.00792966729874523, 0.007914677379466079, 0.00789968746018693, 0.007892192500547353, 0.007884697540907778, 0.007884697540907778, 0.007877202581268204, 0.007877202581268204]
[(10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc900>), (10.84, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ceb0>), (10.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a5f0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (10.79, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b430>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (11.04, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b3c0>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05660>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c740>), (10.73, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15cf0>), (10.84, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ceb0>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ba0>), (10.53, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a430>), (10.79, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b430>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (10.81, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a350>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9add0>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (10.6, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c900>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b580>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c890>), (10.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa0b0>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b159e0>), (10.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b059e0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17350>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c510>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc660>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05e40>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc9e0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b2e0>), (10.79, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b120>), (10.81, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a350>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b900>), (10.54, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c3c0>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15350>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (10.52, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d9e0>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15350>), (10.59, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17a50>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (10.65, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc890>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (10.59, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17a50>), (10.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b890>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (10.6, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c900>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc820>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9add0>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c890>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b270>), (10.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b052e0>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c75f0>), (10.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b052e0>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05200>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b153c0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b053c0>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc190>), (10.63, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cac0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b053c0>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (10.56, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc740>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (11.11, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c2e0>), (10.65, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc890>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c75f0>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05660>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc900>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b900>), (10.82, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17580>), (10.58, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc200>), (10.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa0b0>), (10.53, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a430>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (10.51, <rdkit.Chem.rdchem.Mol object at 0x7f3d65eb44a0>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (11.73, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa270>), (10.93, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc7b0>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05e40>), (10.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05a50>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05dd0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c510>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c5f0>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c80>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cd60>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cba0>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b350>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc5f0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17350>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (10.6, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c900>)]
Bin size: 100
===== for SMILES O=C1NCCCCN2C=C(C=N2)C2=CN=C3C=CC(=CC3=C2)CCN2N=C(C=CC2=O)C2=CC=C1C(C(F)(F)F)=C2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][N][=C][C][=C][C][=Branch1][Branch2][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][=C][Ring2][Ring2][C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][Ring2][Ring1][C][=C][Ring2][Ring1][=Branch1]
generated smiles O=C(O)C1=C2C=CC3=C1C=CC4=CC5=CC=C(N(C)C)C=C5N=C4C3=C2
added!
adding editted molecule!!!
===== for SMILES CN1C=C(CN2C=C(C(=O)NC3=C(F)C=C(C4=CNC5=NC=NC(N)=C45)C(F)=C3)C(=O)C(C3=CC=C(F)C=C3)=C2)C=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=C][Branch2][=Branch1][Ring2][C][N][C][=C][Branch2][Ring2][#Branch1][C][=Branch1][C][=O][N][C][=C][Branch1][C][F][C][=C][Branch1][P][C][=C][N][C][=N][C][=N][C][Branch1][C][N][=C][Ring1][#Branch2][Ring1][#Branch1][C][Branch1][C][F][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][=C][Ring2][Ring2][Ring1][C][=N][Ring2][Ring2][=Branch2]<eom>
Output: 
output selfies [N][C][=C][C][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][Ring1][=N][C][=C][Ring2][Ring1][=Branch1][F]
generated smiles NC1=CC=C(C2=CC=C3C(=C2)C(F)(F)C4=CC(F)=CC=C43)C=C1F
added!
adding editted molecule!!!
===== for SMILES CCN1CC2=C(C=CC(F)=C2C#N)O[C@@H](C2=CC=CS2)CNC(=O)C2=C3N=C1C=CN3N=C2N =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][N][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][#N][O][C@@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][C][N][C][=Branch1][C][=O][C][=C][N][=C][Ring2][Ring1][#Branch2][C][=C][N][Ring1][=Branch1][N][=C][Ring1][=Branch2][N]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring2][=Branch1][N][C][=Branch1][C][=O][N][C][C][C][C@@H1][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][C][C][Ring2][Ring1][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][S][C]
generated smiles C1COC(=O)C2=CC=CC(NC(=O)NCCC[C@@H1]1NC3=CC=C(C(F)(F)F)C=C3CC)=C2C=CC
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=C][N][=C][Branch1][#Branch2][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=N][=C][Ring1][P][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][F]
generated smiles C12C=CC(F)=C(C3=CC=C4C=CN=C(NC5=CC=CC=C5)C4=C3C=C1)C=C2C6=CC=CC=C6F
added!
adding editted molecule!!!
===== for SMILES CC(=NF)C1=NN2C(CC3=C(F)C=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Ring1][=N][F][C][=N][N][C][Branch2][Ring1][Ring2][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][=C][N][=C][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch1][Ring1][C][#N][C][Ring1][Branch2][=N][Ring1][P]
generated smiles CC1=CC(F)=CC(=C1)C=NC(F)=C2C=CC=C(C#N)C2=N
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=NN(CCC3=CC=C4N=CC(C5=CN(CCO)N=C5)=CC4=C3)C(=O)C=C2)C=C1C(F)(F)F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][#C][C][=N][N][Branch2][Ring1][S][C][C][C][=C][C][=C][N][=C][C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][=C][C][Ring1][=C][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][P][C][Branch1][C][F][Branch1][C][F][F]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][C][=C][Branch2][Ring1][P][N][C][=Branch1][C][=O][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2][C][=C][Ring1][S][Ring2][Ring1][#Branch1][=C][C][=C][Ring2][Ring1][=N][Ring2][Ring1][P]
generated smiles CC(C)(C)C1=CC=CC2(C=CC=CN=CC3=CNC(=O)NC=CC=C3C=CC=CC(C(F)(F)F)=C)C=C21
added!
adding editted molecule!!!
===== for SMILES CC(N=O)C1=NN2C(=NN=C2CC2=C(F)C=C3N=CC=CC3=C2F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch1][Ring1][N][=O][C][=N][N][C][=Branch2][Ring1][=Branch2][=N][N][=C][Ring1][Branch1][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch2][Ring2][C][C][=C][C][=C][C][Branch2][Ring1][=Branch1][N][C][=Branch1][C][=O][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][=C][Ring2][Ring1][Ring1][=C][C][=C][Ring2][Ring1][#Branch2][F]
generated smiles C1C(C)(C2)C=NC(C=CC=CC1(NC(=O)C3=NC4=CC=CC=C4C=C3F)C)C=C2F
added!
adding editted molecule!!!
===== for SMILES CC(N=O)C1=NN2C(=NN=C2CC2=C(F)C=C3N=CC=CC3=C2F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch1][Ring1][N][=O][C][=N][N][C][=Branch2][Ring1][=Branch2][=N][N][=C][Ring1][Branch1][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch2][Ring2][C][C][=C][C][=C][C][Branch2][Ring1][=Branch1][N][C][=Branch1][C][=O][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][=C][Ring2][Ring1][Ring1][=C][C][=C][Ring2][Ring1][#Branch2][F]
generated smiles C1C(C)(C2)C=NC(C=CC=CC1(NC(=O)C3=NC4=CC=CC=C4C=C3F)C)C=C2F
added!
adding editted molecule!!!
===== for SMILES COC1=CC2=CC([C@H](C)N=C(C)C3=CN=C4N=NN(CC5=CC6=CC=CN=C6C=C5F)C4=N3)=CC=C2N=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=C][C][Branch2][Ring2][#Branch2][C@H1][Branch1][C][C][N][=C][Branch1][C][C][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1][=C][C][=C][Ring2][Ring1][S][N][=C][Ring2][Ring2][Ring2]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][N][=C][Branch2][Ring1][N][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][=C][Ring1][S][C][Ring2][Ring1][#Branch1][=C][Ring2][Ring1][O][=C][Ring2][Ring1][S]
generated smiles C1OC=CC=CC1C=CC2=CN=C3N=C(NC=CC4=C(C=CC5=CC=C6N=CC=CC6=C5)C=C4)C3=C2C
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=CC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=C][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Branch1][=Branch1][=C][C][=C][C][=C][Branch2][Ring2][=Branch1][N][C][=C][C][=C][Branch2][Ring1][Branch2][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][N][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][#C][C][=C][Ring2][Ring1][Branch1][C][=C][Ring2][Ring1][=N][C][=C][Ring2][Ring2][C][C][N][Ring2][Ring2][=Branch1]
generated smiles CC1=CC(F)=CC(=C1)C=NC=NC(=CC=CC=C2NC=CC=C(C3=CC=CC(F)=C3NC4=CC=CC=C4)C2C=C)CN
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Ring2][S][=C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][N][=C][Ring1][O][C][=C][C][=C][Branch1][S][N][C][C][N][Branch1][=Branch1][C][C][C][Ring1][Ring1][C][C][Ring1][=Branch2][C][=C][Ring1][#C][C][=C][Ring2][Ring1][P][C][=C][Ring2][Ring2][=Branch1][C]
generated smiles CC1=CC(F)=CC(=C12)C=NC=NC(=CC3=C(F)C=CC=C3N=CC4=CC=C(N5CCN(C6CC6)CC5)C=C4C=C2C)CC
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=CN3C(SC4=CC=C5N=CC6=C(OCC(=O)N6C)C5=C4)=NN=C3C(F)=C2)S1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][P][C][=C][N][C][Branch2][Ring1][N][S][C][=C][C][=C][N][=C][C][=C][Branch1][O][O][C][C][=Branch1][C][=O][N][Ring1][#Branch1][C][C][Ring1][N][=C][Ring1][S][=N][N][=C][Ring2][Ring1][=Branch1][C][Branch1][C][F][=C][Ring2][Ring1][O][S][Ring2][Ring1][S]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][=Branch1][C][=O][N][C][=N][C][=C][C][=C][Branch1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][C][N][=N][NH1][C][Ring1][=Branch2][=O][C][=C][Ring1][P][Ring2][Ring1][Branch1].[N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][#Branch1][=Branch1][C][=C][C][=C][C][=Branch2][=Branch1][=Branch1][=C][N][=C][Branch2][Branch1][O][C][=C][C][=C][Branch2][Ring2][P][N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring1][#C][C][=C][N][=C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][=C][C][=C][C][=C][Ring1][P][Ring1][=Branch1][C][=C][Ring2][Ring1][#Branch1][C][=C][Ring2][Ring1][S][C][=C][Ring2][Ring2][=Branch1][C][=C][Ring2][Ring2][=N][=C][Ring2][Branch1][Ring1]
generated smiles CC(C)C(=O)N1C=NC=C2C=C(C3=CC4=CC=C3CN=N[NH1]C4)OC=C21.NC(=O)C=CC=C5CC=CC=C6C(=CN=C(C=CC=C(NC(=O)C=CC=CC(C7=CN=C(C8=CC=C(F)C=C8)C9=CC=CC=C79)C=C)C)C6C)C5=C
added!
adding editted molecule!!!
===== for SMILES CC(=O)N1CCC2=CC=C(NC3=NC=C(Cl)C(NC4=CC=CC=C4C(=O)NN)=N3)C=C2C(C)C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][N][C][C][C][=C][C][=C][Branch2][Ring1][#C][N][C][=N][C][=C][Branch1][C][Cl][C][Branch1][S][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][N][N][=N][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch2][C][Branch1][C][C][C][Ring2][Ring1][#C]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][C][=C][Branch1][#C][N][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=Branch2][N][=C][N][Branch1][=N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1][Cl][C][=Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1]
generated smiles CC(C1)CC2=C(NC3=NC4=CC=CC=C4C3)N=CN(C5=CC=C(Cl)C=C5Cl)C2C(=O)N1C6=CC=C(Cl)C=C6
added!
adding editted molecule!!!
===== for SMILES O=C(NC1=CC=C(OC2=CC=NC(NC(=O)N3CCC3)=C2)C(F)=C1)C1=CN(CC2CC2)C(=O)N(C2=CC=C(F)C=C2)C1=O =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][Branch2][Ring2][#Branch1][N][C][=C][C][=C][Branch2][Ring1][#Branch1][O][C][=C][C][=N][C][Branch1][N][N][C][=Branch1][C][=O][N][C][C][C][Ring1][Ring2][=C][Ring1][=N][C][Branch1][C][F][=C][Ring2][Ring1][Branch1][C][=C][N][Branch1][#Branch1][C][C][C][C][Ring1][Ring1][C][=Branch1][C][=O][N][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][Ring2][Ring1][C][=O]<eom>
Output: 
output selfies [C][C][C][C][=N][C][Branch2][Ring2][=Branch1][C][=C][C][=C][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][Cl][C][=C][Ring2][Ring1][C][=C][C][=C][Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][C][C][N][C][C][C][C][C][Ring1][=Branch1]
generated smiles C1CC2C=NC3(C=CC=C(NC4=CC=C(C(F)(F)F)C=C4Cl)C3=CC=C2)C(=O)N1CCCN5CCCCC5
added!
adding editted molecule!!!
===== for SMILES C[C@@H](c1ccc2ncc(-c3cnn(C)c3)cc2c1)c1nnc2c(F)cc(-c3cn(C)cn3)cn12 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C@@H1][Branch2][Ring1][O][C][=C][C][=C][N][=C][C][Branch1][O][C][C][=N][N][Branch1][C][C][C][=Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][S][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][N][Branch1][C][C][C][=N][Ring1][=Branch1][=C][N][Ring1][S][Ring1][=N]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch2][Ring2][C][C][=C][C][=C][C][Branch2][Ring1][Branch1][N][C][=N][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][Cl][=C][Ring2][Ring1][C][=C][C][=C][C][=C][C][=Ring2][Ring1][#Branch2][Ring1][=Branch1]
generated smiles CC(C)(C)C=NC(C1=CC=CC(NC2=NC=C(C(F)(F)F)C=C2Cl)=C1C3)C=CC=CC3
added!
adding editted molecule!!!
===== for SMILES CC(=O)C(F)(F)c1cc2ccc1C(=O)NCCCCn1cc(cn1)-c1cnc3ccc(cc3c1)CCn1nc-2ccc1=O =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][C][Branch1][C][F][Branch1][C][F][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][N][=C][C][=C][C][=Branch1][Branch2][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][C][N][N][=C][Ring2][Ring1][#C][C][=C][C][Ring1][=Branch1][=O]<eom>
Output: 
output selfies [C][C][=Branch1][C][=O][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][=C][Ring1][P][N].[O][=C][Branch1][C][O][C][Branch1][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2]
generated smiles CC(=O)C1=CC2=CC3=CC=C(N(C)C)C=C3N=C2C=C1N.O=C(O)C(O)C(=O)C4=CC=C5C=CC=CC5=C4
added!
adding editted molecule!!!
===== for SMILES CC(=NNC(N)=O)C1=CN=C2N=NN(CC3=CC4=CC=CN=C4C=C3F)C2=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Branch2][=N][N][C][Branch1][C][N][=O][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch1][=C][N][C][=C][C][=C][Branch1][C][N][C][=C][Ring1][#Branch1][F][=N][C][=C][Ring1][#C][C][=C][C][=C][N][=C][N][=C][Branch1][C][N][N][=C][Ring1][#Branch1][Ring1][#Branch2]
generated smiles CC(C)(C)C1=NC(NC2=CC=C(N)C=C2F)=NC=C1C=C3C=CN=CN=C(N)N=C3
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C2=CC(F)=CN=C2C=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][=Branch1][C][=C][Branch1][C][F][C][=C][C][Branch1][C][F][=C][N][=C][Ring1][#Branch1][C][=C][Ring1][N][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [N][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch2][Ring1][=Branch1][N][=C][C][=C][C][=C][Branch1][C][F][C][Branch1][=Branch1][C][=Branch1][C][=O][O][=C][Ring1][#Branch2][F][C][=C][Ring2][Ring1][Ring1][Ring2][Ring1][Branch2]
generated smiles NC1=NC(F)=CC2=CC=C(N=CC3=CC=C(F)C(C(=O)O)=C3F)C=C21
added!
adding editted molecule!!!
===== for SMILES O=C1C=CC(N2C=CC3=CC=C(F)C=C32)=NN1CCOC1=CC=NC2=CC(OCCCN3CCOCC3)=CC=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][C][=C][C][Branch1][P][N][C][=C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][Ring1][#Branch2][=N][N][Ring1][S][C][C][O][C][=C][C][=N][C][=C][C][Branch1][=N][O][C][C][C][N][C][C][O][C][C][Ring1][=Branch1][=C][C][=C][Ring1][S][Ring2][Ring1][Ring2]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][Branch2][Ring2][N][N][C][=C][C][=C][Branch2][Ring1][S][N][C][=Branch1][C][=O][C][=C][C][=C][Branch1][P][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2][F][C][=C][Ring1][S][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][#C][N][C][C][C][N][C][C][O][C][C][Ring1][=Branch1]
generated smiles COC=CC=C(NC=CC=C(NC(=O)C=CC=C(C1=CC=C(F)C(F)=C1F)CC)C)C=CNCCCN2CCOCC2
added!
adding editted molecule!!!
===== for SMILES C/C(=N\OCCCO)C1=NN2C(=NN=C2CC2=C(F)C=C3N=CC=CC3=C2F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][/C][=Branch1][#Branch1][=N][\O][C][C][C][O][C][=N][N][C][=Branch2][Ring1][=Branch2][=N][N][=C][Ring1][Branch1][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][C][=C][Ring1][Branch2][C][=C][C][=C][N][=C][Branch1][#Branch2][N][C][C][C][O][C][C][Ring1][=Branch1][N][=C][Ring1][=N][N][=C][Ring1][P][N].[H+1]
generated smiles CC1=C(F)C(F)=CC=C1C2=CC3=CN=C(NC4CCOCC4)N=C3N=C2N.[H+1]
added!
adding editted molecule!!!
===== for SMILES COC1=CC=C2C(=C1)N=CC=C2OCC1=NN=C2C(F)=CC(C3=CC(C)=CS3)=CN12 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][N][=C][C][=C][Ring1][#Branch1][O][C][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][C][Branch1][C][C][=C][S][Ring1][=Branch1][=C][N][Ring1][S][Ring1][=N]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][Branch2][Ring1][=N][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1][Ring1][S][=C][C][Branch1][Ring1][O][C][=C][Ring2][Ring1][=Branch2][O][C]
generated smiles C1OC=CC=CC2(C3=CC=CC(F)=C3NC4=CC=C(Cl)C=C42)C=C1OC
added!
adding editted molecule!!!
===== for SMILES CC(=NNC(N)=O)C1=NN2C(C(O)C3=C(F)C=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Branch2][=N][N][C][Branch1][C][N][=O][C][=N][N][C][Branch2][Ring1][#Branch1][C][Branch1][C][O][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][=C][N][=C][Ring2][Ring1][Ring1][C][=C][Ring2][Ring1][#Branch1]<eom>
Output: 
output selfies [C][C][O][C][=N][C][Branch1][C][F][=C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][N][N][C][=N][C][=C][C][Branch1][P][C][=C][N][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][Ring1][=C][=C][Ring1][P][C][=Branch1][C][=O][NH1][Ring2][Ring1][#Branch2]
generated smiles CCOC=NC(F)=C1C=CC(F)=C(N2C=NC=CC(C3=CN=C4C=CC=CC4=C3)=C2)C(=O)[NH1]1
added!
adding editted molecule!!!
===== for SMILES O=C1OCC2=NC(C3=CC=C(F)C=C3F)C(OC3=CC=NC4=C3C(C3=CC=CN=C3)=CN4)=C12 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][O][C][C][=N][C][Branch1][=N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][F][C][Branch2][Ring1][=Branch2][O][C][=C][C][=N][C][=C][Ring1][=Branch1][C][Branch1][=Branch2][C][=C][C][=C][N][=C][Ring1][=Branch1][=C][N][Ring1][O][=C][Ring2][Ring1][S][Ring2][Ring1][=N]<eom>
Output: 
output selfies [C][O][C][=C][C][=N][C][=C][C][Branch2][Ring1][P][C][=C][C][=C][Branch2][Ring1][Ring2][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][C][=C][Ring1][P][=C][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][N][O][C]
generated smiles COC=C1C=NC=CC(C2=CC=C(NC3=CC=C(C(F)(F)F)C=C3)C=C2C1)C=COC
added!
adding editted molecule!!!
===== for SMILES CC(=NNC(N)=O)C1=NN2C(=NN=C2[C@@H](C)C2=CC=C3N=CC=CC3=C2)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Branch2][=N][N][C][Branch1][C][N][=O][C][=N][N][C][=Branch2][Ring1][Branch2][=N][N][=C][Ring1][Branch1][C@@H1][Branch1][C][C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][C][=C][C][=N][C][=N][C][Branch1][=N][N][C][=C][C][=C][Branch1][C][N][C][=C][Ring1][#Branch1][=C][Ring1][=C][C][=C][Ring2][Ring1][C][N][C][=N][C][Branch1][C][N][=C][C][=N][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][Ring1][=C]
generated smiles CCC1=CC2=NC=NC(NC3=CC=C(N)C=C3)=C2C4=C1NC=NC(N)=C5C=NC=CC5=C4
added!
adding editted molecule!!!
===== for SMILES NC1=NC=NC2=C1C(C1=CC(F)=C(NC(=O)C3=CN(CC4CCOCC4)C=C(C4=CC=C(F)C=C4)C3=O)C=C1F)=CN2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=N][C][=N][C][=C][Ring1][=Branch1][C][Branch2][Branch1][Branch2][C][=C][C][Branch1][C][F][=C][Branch2][Ring2][Branch2][N][C][=Branch1][C][=O][C][=C][N][Branch1][#Branch2][C][C][C][C][O][C][C][Ring1][=Branch1][C][=C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][Ring2][Ring1][Ring2][=O][C][=C][Ring2][Ring1][#C][F][=C][N][Ring2][Ring2][Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][=N][N][C][=N][C][=C][C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][=C][C][=C][Ring1][N][C][=C][Ring2][Ring1][C][F][C][=C][Ring2][Ring1][#Branch2][C][Branch1][C][N][=O]
generated smiles C1C=CC(F)=C(NC=NC2=CC(C3=CC=CC=C3)=CC=C2C=CF)C1C(N)=O
added!
adding editted molecule!!!
===== for SMILES COC1=CN=C2C=CC([C@H](C)C3=NN=C4C(F)=CC(C5=CN(C)C=N5)=CN43)=CC2=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][N][=C][C][=C][C][Branch2][Ring1][P][C@H1][Branch1][C][C][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][N][Branch1][C][C][C][=N][Ring1][=Branch1][=C][N][Ring1][=N][Ring1][S][=C][C][Ring2][Ring1][Branch2][=C][Ring2][Ring1][N]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][=C][C][C][=Branch2][Ring1][#Branch2][=C][N][Branch1][=Branch1][C][C][C][Ring1][Ring1][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][P][C][Ring2][Ring1][Branch2]
generated smiles C1OC2=CC=CC(=C2)C(F)=CCC1=CN(C3CC3)C4=CC=CC=C4C5=CC=CC=C5
added!
adding editted molecule!!!
===== for SMILES C/C(=N\OC(N)=O)C1=NN2C(CC3=C(F)C=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][/C][=Branch1][Branch2][=N][\O][C][Branch1][C][N][=O][C][=N][N][C][Branch2][Ring1][Ring2][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][=C][N][=C][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][O][C][=Branch1][C][=O][/N][=C][Branch1][C][/N][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2].[C][C][=C][C][=C][Branch2][Ring1][#Branch1][N][C][=Branch1][C][=O][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2][C][=C][Ring1][=N][C][=C][Ring2][Ring1][Ring2]
generated smiles CC(C)OC(=O)/N=C(/N)C1=CC=C(F)C(F)=C1.C2C=CC=C(N3C(=O)C4=CC=C(F)C(F)=C4C=C3)C=C2
added!
adding editted molecule!!!
===== for SMILES C/C(=N\OF)C1=NN2C(CC3=CC=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][/C][=Branch1][Ring2][=N][\O][F][C][=N][N][C][Branch1][P][C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][F][=C][N][=C][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch1][Ring1][C][#N][C][Ring1][Branch2][=N][Ring1][P].[C][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][C][=C][Ring1][S]
generated smiles CC1=CC(F)=CC(=C1)C=NC(F)=C2C=CC=C(C#N)C2=N.CC=C3C=C(C=CC4=CC=C(N(C)C)C=C4)C=C3
added!
adding editted molecule!!!
===== for SMILES C/C(=N\OF)c1ccc2ncc(Cc3ccc4ncccc4c3F)n2n1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][/C][=Branch1][Ring2][=N][\O][F][C][C][=C][C][=N][C][=C][Branch1][P][C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][F][N][Ring1][P][N][=Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][=C][Branch1][=Branch1][C][=Branch1][C][=O][O][N][=C][N][Ring1][Branch2][C][=C][C][=C][Branch1][S][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][N][=N][NH1][N][=Ring1][Branch1][C][=C][Ring1][P].[H+1]
generated smiles CC1=C(C(=O)O)N=CN1C=C2C=C(NC3=CC=CC=C3C=4N=N[NH1]N=4)C=C2.[H+1]
added!
adding editted molecule!!!
===== for SMILES COC1=CC2=NC=CC(OC3=CC=C(NC(=O)C4=C(I)C=CN(C5=CC=C(F)C=C5)C4=O)C=C3F)=C2C=C1OC =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=N][C][=C][C][Branch2][Ring2][=N][O][C][=C][C][=C][Branch2][Ring1][#C][N][C][=Branch1][C][=O][C][=C][Branch1][C][I][C][=C][N][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][Ring1][=C][=O][C][=C][Ring2][Ring1][Branch2][F][=C][Ring2][Ring1][S][C][=C][Ring2][Ring2][Ring2][O][C]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring2][N][N][C][=C][C][=C][Branch2][Ring1][S][N][C][=Branch1][C][=O][C][=C][C][=C][Branch1][P][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2][F][C][=C][Ring1][S][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][#C][N][C][=C][C][=C][C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][=C][Ring1][N]
generated smiles CC1=CC(F)=C(NC=CC=C(NC(=O)C=CC=C(C2=CC=C(F)C(F)=C2F)CC)C)C=C1NC3=CC=CC(C4=CC=CC=C4)=C3
added!
adding editted molecule!!!
fp_scores_to_top [0.19135802469135801, 0.16477272727272727, 0.18181818181818182, 0.13013698630136986, 0.15, 0.19753086419753085, 0.11046511627906977, 0.2391304347826087, 0.05343511450381679, 0.05925925925925926, 0.21710526315789475, 0.23668639053254437, 0.20359281437125748, 0.038461538461538464, 0.2185430463576159, 0.0072992700729927005, 0.1568627450980392, 0.11188811188811189, 0.2111801242236025, 0.03759398496240601, 0.3619631901840491, 0.13793103448275862, 0.2153846153846154, 0.06201550387596899, 0.24615384615384617, 0.15568862275449102, 0.2393617021276596, 0.2866666666666667, 0.24203821656050956, 0.1878453038674033, 0.14102564102564102, 0.11643835616438356, 0.15625, 0.1746987951807229, 0.1513157894736842, 0.25903614457831325, 0.16091954022988506, 0.06153846153846154, 0.2012987012987013, 0.25874125874125875, 0.2625, 0.16901408450704225, 0.23529411764705882, 0.28104575163398693, 0.043795620437956206, 0.04225352112676056, 0.23270440251572327, 0.10909090909090909, 0.21081081081081082, 0.11594202898550725, 0.16666666666666666, 0.1787709497206704, 0.08974358974358974, 0.1610738255033557, 0.16071428571428573, 0.20245398773006135, 0.2222222222222222, 0.20118343195266272, 0.21893491124260356, 0.24528301886792453, 0.20987654320987653, 0.11764705882352941, 0.15151515151515152, 0.14093959731543623, 0.1728395061728395, 0.18232044198895028, 0.1724137931034483, 0.21212121212121213, 0.1375, 0.19078947368421054, 0.19254658385093168, 0.23333333333333334, 0.2413793103448276, 0.1978021978021978, 0.1069182389937107, 0.1218274111675127, 0.16, 0.16, 0.1875, 0.15458937198067632, 0.22959183673469388, 0.16382252559726962, 0.2074468085106383, 0.23369565217391305, 0.18604651162790697, 0.1989247311827957, 0.14772727272727273, 0.16875, 0.0871559633027523, 0.18072289156626506, 0.15568862275449102, 0.23837209302325582, 0.1907514450867052, 0.21264367816091953, 0.16470588235294117, 0.19767441860465115, 0.1891891891891892, 0.15816326530612246, 0.14534883720930233, 0.18357487922705315]
top 70 [20 27 43 40 35 39 24 59 28 72 26  7 91 11 42 83 71 46 80 56 58 14 10 22
 93 67 18 48 60 82 12 55 38 57 85 73 95  5 70  0 69 92 96 29 78 84 99 65
  2 89 51 33 64 66 41 87 50  1 94 81 53 36 54 77 76 97 16 32 90 25]
len offspring_mol 70
187
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
CC(c1ccc2ncc(-c3cnn(C(F)(F)F)c3)cc2c1)n1nnc2ncc(-c3ccncc3)nc21

Boltz running on GPU 1
10.37
COCCn1cc(-c2cnc3ccc4ccc(N)cc4c(=O)c3c2)cn1

Boltz running on GPU 1
10.67
CC(c1ccc2ncc(-c3cnn(C)c3)cc2c1)N1N=NC2=NC=C(F)C21

Boltz running on GPU 1
10.47
[C-]#[N+]C1=CN=C2N=NN(C(C)c3ccc4ncc(-c5cnn(NC)c5)cc4c3)C12

Boltz running on GPU 1
10.92
FC(F)(c1ccc2ncccc2c1)c1nnc2ncc(C3=c4cccnc4=CC3)nn12

Boltz running on GPU 1
10.53
CC(c1ccc2ncc(-c3cnn(C)c3)cc2c1)[C@H](C)CO

Boltz running on GPU 1
9.81
CC(c1ccc2ncc(-n3nnc4ncc(-c5ccncc5)nc43)cc2c1)n1nnc2ncc(-c3ccncc3)nc21

Boltz running on GPU 1
10.89
O=c1cc(-c2ccc3nnc(Cc4ccc5ncccc5c4)n3n2)scn1

Boltz running on GPU 1
10.26
340/1000 | avg_top1: 12.050 | avg_top10: 11.828 | avg_top100: 11.190 | avg_sa: 3.395 | div: 0.819
{'avg_top1': 12.05, 'avg_top10': 11.828000000000001, 'avg_top100': 11.189600000000002, 'auc_top1': 4.0139499999999995, 'auc_top10': 3.9137000000000004, 'auc_top100': 3.654666309523809, 'avg_sa': 3.3952455997372577, 'diversity_top100': 0.819272163820145, 'n_oracle': 340}
Fc1csc(-c2ccc3nnc(Cc4ccc5ncccc5c4)n3n2)c1

Boltz running on GPU 1
10.04
Already in buffer
CC(=NF)c1ccc2ncc(CC3=CC=C(c4cnc5ncc(Cc6ccc7ncccc7c6)n5n4)C3)n2n1

Boltz running on GPU 1
10.67
Cc1cc(-c2cc(F)c3nnc(C(=O)C4=C(F)c5ncc(Cc6ccc7ncccc7c6)n5C4)n3c2)on1

Boltz running on GPU 1
10.11
Already in buffer
CN1C(=O)COc2c1cnc1ccc(-n3nnc4ncc(-c5ccncc5)nc43)cc21

Boltz running on GPU 1
10.19
CNC(=S)c1ccc(-c2cnc3cnc(Cc4cc(Cl)c5ncccc5c4)n3n2)cc1F

Boltz running on GPU 1
10.79
Already in buffer
Already in buffer
C1=CSC(c2ccc3nnc(Cc4ccc5ncccc5c4)n3n2)=CN1

Boltz running on GPU 1
11.01
Already in buffer
Cc1cnc(-c2cccc([C@@H](C)n3cc(C4=CC=CC4)cc(F)c3=O)c2)nc1

Boltz running on GPU 1
9.5
Already in buffer
Cc1cnc2nnc(C(F)(F)c3ccc4ncccc4c3)n2n1

Boltz running on GPU 2
9.99
Fc1cc2ncccc2c(F)c1Cc1ccc2ncccc2c1

Boltz running on GPU 2
8.81
Cc1csc(-c2ccc3c(c2)oc(=O)n3CCOc2ccc(NC(=O)C3(C(=O)Nc4ccc(F)cc4)CC3)cc2F)c1

Boltz running on GPU 1
9.81
350/1000 | avg_top1: 12.050 | avg_top10: 11.828 | avg_top100: 11.194 | avg_sa: 3.401 | div: 0.820
{'avg_top1': 12.05, 'avg_top10': 11.828000000000001, 'avg_top100': 11.1942, 'auc_top1': 4.13445, 'auc_top10': 4.031980000000001, 'auc_top100': 3.766585309523809, 'avg_sa': 3.4005930268863915, 'diversity_top100': 0.8198586755157967, 'n_oracle': 350}
Already in buffer
CC(N=O)c1ccc2nnc(Cc3c(-n4cnc5ncc(-c6cnn(CCO)c6)nc54)cc4ncccc4c3F)n2n1

Boltz running on GPU 1
10.8
Fc1cc2cc(Cc3nnc4ccc(C5=CCC=CS5)nn34)ccc2[nH]1

Boltz running on GPU 2
10.23
FN=C(c1ccc2ncc(Cc3c(F)cc4ncccc4c3F)n2n1)c1c(F)cc2ncccc2c1F

Boltz running on GPU 1
10.33
Cn1cc(-c2ccc3ncc(S(=O)(=O)N4N=CC5=NC=CCC54)n3c2)cn1

Boltz running on GPU 1
9.24
Already in buffer
C[C@H](CO)Nc1n[nH]c2nccc(Oc3ccc(-c4ccc(F)cc4)cc3F)c12

Boltz running on GPU 1
9.22
Fc1cc2ncccc2c(F)c1Cc1cnc2cc3c(nn12)CCC(F)C3

Boltz running on GPU 2
9.67
Cn1cc(-c2cnc(Cc3cc(Cl)c4ncccc4c3)[nH]2)cn1

Boltz running on GPU 2
9.17
Cn1cc(C2C=[SH]N=C2SCc2nnc3ncc(-c4ccc(F)cc4)nn23)cn1

Boltz running on GPU 2
9.25
CC(=O)c1cc2cc3ccc(N(C)C)cc3nc2cc1N.O=C(O)C(O)C(=O)c1ccc2ccccc2c1

Boltz running on GPU 1
[Errno 2] No such file or directory: '/data/boltz/results/boltz_results_c-met_CC(=O)c1cc2cc3ccc(N(C)C)cc3nc2cc1N.O=C(O)C(O)C(=O)c1ccc2ccccc2c1/predictions/c-met_CC(=O)c1cc2cc3ccc(N(C)C)cc3nc2cc1N.O=C(O)C(O)C(=O)c1ccc2ccccc2c1/affinity_c-met_CC(=O)c1cc2cc3ccc(N(C)C)cc3nc2cc1N.O=C(O)C(O)C(=O)c1ccc2ccccc2c1.json'
-0.0
Already in buffer
Already in buffer
C[C@H](C(=O)c1c(F)cc2ncccc2c1F)c1cc2cccnc2cc1F

Boltz running on GPU 1
9.82
360/1000 | avg_top1: 12.050 | avg_top10: 11.828 | avg_top100: 11.195 | avg_sa: 3.408 | div: 0.820
{'avg_top1': 12.05, 'avg_top10': 11.828000000000001, 'avg_top100': 11.1951, 'auc_top1': 4.25495, 'auc_top10': 4.15026, 'auc_top100': 3.878531809523809, 'avg_sa': 3.4080926644458716, 'diversity_top100': 0.8198069626792361, 'n_oracle': 360}
Already in buffer
Cn1cc(-c2nnc3c(F)cc(-c4cnn(F)c4)cn23)cn1

Boltz running on GPU 1
7.19
Already in buffer
Already in buffer
Already in buffer
Cc1c(C=CC2C=CC=COC2)cnc2c1C(NC=CC1=C(C=Cc3ccc4ncccc4c3)C=C1)=N2

Boltz running on GPU 2
8.7
CC(C)(C)C=NC1C=CC=CCCc2c(Nc3ncc(C(F)(F)F)cc3Cl)cccc21

Boltz running on GPU 1
7.33
Already in buffer
Already in buffer
N#Cc1c(F)ccc2c1CN(CCCO)c1ccn3nc(N)c(c3n1)C(=O)NC[C@H](c1cccs1)O2

Boltz running on GPU 1
11.79
Already in buffer
C/C(=N\OCS(=O)(=O)NCF)c1ccc2ncc(Cc3c(F)cc4ncccc4c3F)n2n1

Boltz running on GPU 2
10.42
C/C(=N\OCl)c1ccc2ncc(Cc3c(F)cc4ncccc4c3F)n2n1

Boltz running on GPU 2
11.29
Nc1ncnc2[nH]cc(-c3cc(F)c(CN4CCOCC4)cc3F)c12

Boltz running on GPU 2
8.4
CC(=O)N1Cc2c(ccc(F)c2C#N)O[C@@H](C)CNC(=O)c2c(N)nn3ccc1nc23

Boltz running on GPU 2
11.19
c1nc2cnncc2cc1N1CCOCC1

Boltz running on GPU 2
6.42
Already in buffer
Fc1cnc2nnn(Cc3cc4cccnc4cc3F)c2n1

Boltz running on GPU 2
9.75
370/1000 | avg_top1: 12.050 | avg_top10: 11.835 | avg_top100: 11.216 | avg_sa: 3.434 | div: 0.822
{'avg_top1': 12.05, 'avg_top10': 11.834999999999999, 'avg_top100': 11.2159, 'auc_top1': 4.37545, 'auc_top10': 4.268575, 'auc_top100': 3.990586809523809, 'avg_sa': 3.4341475654105102, 'diversity_top100': 0.8217262374415496, 'n_oracle': 370}
[C-]#[N+]Cc1cnc2n1CC(C(=O)Nc1ccc(Oc3ccnc(N)c3Cl)c(F)c1)=C2F

Boltz running on GPU 1
10.27
Already in buffer
Already in buffer
CN1C(=O)COc2c1cnc1ccc(S(C)(=O)=O)cc21

Boltz running on GPU 2
6.09
CCN1Cc2c(ccc(O)c2C#N)O[C@@H](C)CNC(=O)c2c(C)nn3ccc1nc23

Boltz running on GPU 2
11.03
CC(=NF)c1ccc2nnc(Cc3c(F)cc4ncccc4c3CO)n2n1

Boltz running on GPU 1
10.67
Already in buffer
Already in buffer
COc1ccc2c(OCC3=CCNCC3)ccnc2c1

Boltz running on GPU 2
7.64
CN1CCC(COc2cnc(-c3cnn(CCO)c3)nc2)CC1

Boltz running on GPU 1
6.95
Already in buffer
[C-]#[N+]C1=C2COCCN2C2=C(C(=O)OC2)C1c1ccc2[nH]nc(F)c2c1

Boltz running on GPU 2
10.44
[(12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15350>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17120>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b350>), (11.73, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa270>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17510>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c0b0>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc820>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b159e0>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b050b0>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b4a0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa510>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b270>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b153c0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15900>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa040>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bcf0>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c740>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ba0>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c890>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b580>), (11.11, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c2e0>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05200>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c190>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c350>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc660>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a6d0>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c200>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05660>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc190>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15eb0>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05510>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c2e0>), (11.04, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b3c0>), (11.03, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b040>), (11.01, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15430>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cd60>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b053c0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c510>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c5f0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc270>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b900>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12e40>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05580>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dba0>), (10.93, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc7b0>), (10.92, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcba0>), (10.92, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b055f0>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05e40>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cba0>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc900>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc9e0>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c270>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c75f0>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9add0>), (10.86, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b740>), (10.84, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ceb0>), (10.82, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17580>), (10.81, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a350>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ac0>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c80>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05dd0>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17900>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15890>), (10.79, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b430>), (10.79, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b120>), (10.79, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dc80>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc350>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc5f0>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b2e0>), (10.74, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05350>), (10.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa0b0>), (10.73, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15cf0>), (10.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15510>), (10.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf20>), (10.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b890>), (10.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05270>), (10.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dc10>), (10.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b6d0>), (10.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a5f0>), (10.65, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc890>)]
[0.008985764461109297, 0.008873908471967786, 0.00885899434008225, 0.00885899434008225, 0.008844080208196716, 0.00880679487848288, 0.008799337812540112, 0.008791880746597343, 0.008791880746597343, 0.008754595416883507, 0.00874713835094074, 0.008739681284997972, 0.008732224219055207, 0.008732224219055207, 0.008732224219055207, 0.008732224219055207, 0.008724767153112437, 0.00871731008716967, 0.008702395955284135, 0.008694938889341369, 0.008627825295856461, 0.008612911163970926, 0.008590539966142624, 0.008575625834257089, 0.008530883438600485, 0.00851596930671495, 0.00851596930671495, 0.00851596930671495, 0.00851596930671495, 0.008508512240772183, 0.008508512240772183, 0.008501055174829415, 0.008493598108886648, 0.008493598108886648, 0.008486141042943882, 0.008478683977001113, 0.008471226911058345, 0.008441398647287277, 0.00843394158134451, 0.008426484515401742, 0.008419027449458973, 0.008411570383516207, 0.008411570383516207, 0.008366827987859602, 0.008366827987859602, 0.008359370921916836, 0.008351913855974067, 0.008351913855974067, 0.008351913855974067, 0.008351913855974067, 0.008351913855974067, 0.008351913855974067, 0.0083444567900313, 0.0083444567900313, 0.008336999724088532, 0.008336999724088532, 0.008329542658145764, 0.008292257328431927, 0.008292257328431927, 0.008292257328431927, 0.00828480026248916, 0.008277343196546393, 0.008269886130603626, 0.008269886130603626, 0.008269886130603626, 0.008269886130603626, 0.008269886130603626, 0.00825497199871809, 0.00825497199871809, 0.00825497199871809, 0.008240057866832557, 0.008240057866832557, 0.008232600800889788, 0.00822514373494702, 0.008210229603061486, 0.008195315471175952, 0.008165487207404882, 0.008165487207404882, 0.008165487207404882, 0.008165487207404882, 0.008165487207404882, 0.008158030141462115, 0.008158030141462115, 0.008158030141462115, 0.008150573075519347, 0.00814311600957658, 0.00814311600957658, 0.008128201877691045, 0.008128201877691045, 0.008128201877691045, 0.008120744811748277, 0.008120744811748277, 0.008113287745805511, 0.008113287745805511, 0.008098373613919975, 0.00808345948203444, 0.008068545350148906, 0.008061088284206139, 0.008053631218263371, 0.008053631218263371, 0.008053631218263371, 0.008053631218263371, 0.008053631218263371, 0.008046174152320602, 0.008046174152320602, 0.008046174152320602, 0.008023802954492301, 0.008023802954492301, 0.008023802954492301, 0.008008888822606766, 0.008008888822606766, 0.008001431756663999, 0.007993974690721233, 0.007986517624778465, 0.007956689361007395, 0.007956689361007395, 0.007956689361007395, 0.007956689361007395, 0.007949232295064628, 0.00794177522912186]
[(10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12e40>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12e40>), (10.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa0b0>), (10.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15510>), (10.84, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ceb0>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c350>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c80>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bcf0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dba0>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc820>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17900>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c5f0>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15350>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c350>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b580>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c270>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05510>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc660>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05660>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc350>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05e40>), (10.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b6d0>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (10.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b890>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15900>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c2e0>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c200>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17510>), (10.92, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b055f0>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c350>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc660>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc820>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cba0>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc350>), (10.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b6d0>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17120>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (10.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa0b0>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c190>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05e40>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15900>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc5f0>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c270>), (10.93, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc7b0>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05660>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b153c0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa510>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (10.79, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dc80>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc820>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (10.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa0b0>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05660>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a6d0>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cd60>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05dd0>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b580>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c2e0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17900>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17120>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05dd0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ba0>), (10.92, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b055f0>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9add0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17120>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b159e0>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (10.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15510>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b270>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cd60>), (10.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa0b0>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05660>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9add0>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c270>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c350>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b270>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc9e0>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cba0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b053c0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bcf0>)]
Bin size: 100
===== for SMILES O=C1NCCCCN2C=C(C=N2)C2=CN=C3C=CC(=CC3=C2)CCN2N=C(C=CC2=O)C2=CC=C1C(C(F)(F)F)=C2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][N][=C][C][=C][C][=Branch1][Branch2][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][=C][Ring2][Ring2][C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][Ring2][Ring1][C][=C][Ring2][Ring1][=Branch1]
generated smiles O=C(O)C1=C2C=CC3=C1C=CC4=CC5=CC=C(N(C)C)C=C5N=C4C3=C2
added!
adding editted molecule!!!
===== for SMILES CN1C=C(CN2C=C(C(=O)NC3=C(F)C=C(C4=CNC5=NC=NC(N)=C45)C(F)=C3)C(=O)C(C3=CC=C(F)C=C3)=C2)C=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=C][Branch2][=Branch1][Ring2][C][N][C][=C][Branch2][Ring2][#Branch1][C][=Branch1][C][=O][N][C][=C][Branch1][C][F][C][=C][Branch1][P][C][=C][N][C][=N][C][=N][C][Branch1][C][N][=C][Ring1][#Branch2][Ring1][#Branch1][C][Branch1][C][F][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][=C][Ring2][Ring2][Ring1][C][=N][Ring2][Ring2][=Branch2]<eom>
Output: 
output selfies [N][C][=C][C][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][Ring1][=N][C][=C][Ring2][Ring1][=Branch1][F]
generated smiles NC1=CC=C(C2=CC=C3C(=C2)C(F)(F)C4=CC(F)=CC=C43)C=C1F
added!
adding editted molecule!!!
===== for SMILES CCN1CC2=C(C=CC(F)=C2C#N)O[C@@H](C2=CC=CS2)CNC(=O)C2=C3N=C1C=CN3N=C2N =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][N][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][#N][O][C@@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][C][N][C][=Branch1][C][=O][C][=C][N][=C][Ring2][Ring1][#Branch2][C][=C][N][Ring1][=Branch1][N][=C][Ring1][=Branch2][N]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring2][=Branch1][N][C][=Branch1][C][=O][N][C][C][C][C@@H1][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][C][C][Ring2][Ring1][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][S][C]
generated smiles C1COC(=O)C2=CC=CC(NC(=O)NCCC[C@@H1]1NC3=CC=C(C(F)(F)F)C=C3CC)=C2C=CC
added!
adding editted molecule!!!
===== for SMILES CCN1CC2=C(C=CC(F)=C2C#N)O[C@@H](C2=CC=CS2)CNC(=O)C2=C3N=C1C=CN3N=C2N =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][N][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][#N][O][C@@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][C][N][C][=Branch1][C][=O][C][=C][N][=C][Ring2][Ring1][#Branch2][C][=C][N][Ring1][=Branch1][N][=C][Ring1][=Branch2][N]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring2][=Branch1][N][C][=Branch1][C][=O][N][C][C][C][C@@H1][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][C][C][Ring2][Ring1][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][S][C]
generated smiles C1COC(=O)C2=CC=CC(NC(=O)NCCC[C@@H1]1NC3=CC=C(C(F)(F)F)C=C3CC)=C2C=CC
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=C][N][=C][Branch1][#Branch2][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=N][=C][Ring1][P][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][F]
generated smiles C12C=CC(F)=C(C3=CC=C4C=CN=C(NC5=CC=CC=C5)C4=C3C=C1)C=C2C6=CC=CC=C6F
added!
adding editted molecule!!!
===== for SMILES CC(=NF)C1=NN2C(CC3=C(F)C=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Ring1][=N][F][C][=N][N][C][Branch2][Ring1][Ring2][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][=C][N][=C][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch1][Ring1][C][#N][C][Ring1][Branch2][=N][Ring1][P]
generated smiles CC1=CC(F)=CC(=C1)C=NC(F)=C2C=CC=C(C#N)C2=N
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=NN(CCC3=CC=C4N=CC(C5=CN(CCO)N=C5)=CC4=C3)C(=O)C=C2)C=C1C(F)(F)F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][#C][C][=N][N][Branch2][Ring1][S][C][C][C][=C][C][=C][N][=C][C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][=C][C][Ring1][=C][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][P][C][Branch1][C][F][Branch1][C][F][F]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][C][=C][Branch2][Ring1][P][N][C][=Branch1][C][=O][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2][C][=C][Ring1][S][Ring2][Ring1][#Branch1][=C][C][=C][Ring2][Ring1][=N][Ring2][Ring1][P]
generated smiles CC(C)(C)C1=CC=CC2(C=CC=CN=CC3=CNC(=O)NC=CC=C3C=CC=CC(C(F)(F)F)=C)C=C21
added!
adding editted molecule!!!
===== for SMILES CC(N=O)C1=NN2C(=NN=C2CC2=C(F)C=C3N=CC=CC3=C2F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch1][Ring1][N][=O][C][=N][N][C][=Branch2][Ring1][=Branch2][=N][N][=C][Ring1][Branch1][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch2][Ring2][C][C][=C][C][=C][C][Branch2][Ring1][=Branch1][N][C][=Branch1][C][=O][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][=C][Ring2][Ring1][Ring1][=C][C][=C][Ring2][Ring1][#Branch2][F]
generated smiles C1C(C)(C2)C=NC(C=CC=CC1(NC(=O)C3=NC4=CC=CC=C4C=C3F)C)C=C2F
added!
adding editted molecule!!!
===== for SMILES N#CC1=C(F)C=CC2=C1CN(CCCO)C1=NC3=C(C(=O)NC[C@H](C4=CC=CS4)O2)C(N)=NN3C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][#C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][C][N][Branch1][Branch1][C][C][C][O][C][=N][C][=C][Branch2][Ring1][Branch1][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][Ring2][Ring1][#Branch1][C][Branch1][C][N][=N][N][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][N][C][=N][C][=C][C][Branch2][Ring1][#Branch2][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2][Cl][=C][C][=C][Ring2][Ring1][#Branch1][N][Ring2][Ring1][#Branch2][C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1]
generated smiles CCOC(=O)NC1=NC=CC(OC2=CC=CC=C2C3=CC=C(F)C(F)=C3Cl)C=C1NCC4=CC=C(F)C=C4
added!
adding editted molecule!!!
===== for SMILES COC1=CC2=CC([C@H](C)N=C(C)C3=CN=C4N=NN(CC5=CC6=CC=CN=C6C=C5F)C4=N3)=CC=C2N=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=C][C][Branch2][Ring2][#Branch2][C@H1][Branch1][C][C][N][=C][Branch1][C][C][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1][=C][C][=C][Ring2][Ring1][S][N][=C][Ring2][Ring2][Ring2]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][N][=C][Branch2][Ring1][N][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][=C][Ring1][S][C][Ring2][Ring1][#Branch1][=C][Ring2][Ring1][O][=C][Ring2][Ring1][S]
generated smiles C1OC=CC=CC1C=CC2=CN=C3N=C(NC=CC4=C(C=CC5=CC=C6N=CC=CC6=C5)C=C4)C3=C2C
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=CC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=C][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Branch1][=Branch1][=C][C][=C][C][=C][Branch2][Ring2][=Branch1][N][C][=C][C][=C][Branch2][Ring1][Branch2][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][N][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][#C][C][=C][Ring2][Ring1][Branch1][C][=C][Ring2][Ring1][=N][C][=C][Ring2][Ring2][C][C][N][Ring2][Ring2][=Branch1]
generated smiles CC1=CC(F)=CC(=C1)C=NC=NC(=CC=CC=C2NC=CC=C(C3=CC=CC(F)=C3NC4=CC=CC=C4)C2C=C)CN
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Ring2][S][=C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][N][=C][Ring1][O][C][=C][C][=C][Branch1][S][N][C][C][N][Branch1][=Branch1][C][C][C][Ring1][Ring1][C][C][Ring1][=Branch2][C][=C][Ring1][#C][C][=C][Ring2][Ring1][P][C][=C][Ring2][Ring2][=Branch1][C]
generated smiles CC1=CC(F)=CC(=C12)C=NC=NC(=CC3=C(F)C=CC=C3N=CC4=CC=C(N5CCN(C6CC6)CC5)C=C4C=C2C)CC
added!
adding editted molecule!!!
===== for SMILES CC(=O)N1CCC2=CC=C(NC3=NC=C(Cl)C(NC4=CC=CC=C4C(=O)NN)=N3)C=C2C(C)C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][N][C][C][C][=C][C][=C][Branch2][Ring1][#C][N][C][=N][C][=C][Branch1][C][Cl][C][Branch1][S][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][N][N][=N][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch2][C][Branch1][C][C][C][Ring2][Ring1][#C]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][C][=C][Branch1][#C][N][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=Branch2][N][=C][N][Branch1][=N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1][Cl][C][=Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1]
generated smiles CC(C1)CC2=C(NC3=NC4=CC=CC=C4C3)N=CN(C5=CC=C(Cl)C=C5Cl)C2C(=O)N1C6=CC=C(Cl)C=C6
added!
adding editted molecule!!!
===== for SMILES O=C(NC1=CC=C(OC2=CC=NC(NC(=O)N3CCC3)=C2)C(F)=C1)C1=CN(CC2CC2)C(=O)N(C2=CC=C(F)C=C2)C1=O =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][Branch2][Ring2][#Branch1][N][C][=C][C][=C][Branch2][Ring1][#Branch1][O][C][=C][C][=N][C][Branch1][N][N][C][=Branch1][C][=O][N][C][C][C][Ring1][Ring2][=C][Ring1][=N][C][Branch1][C][F][=C][Ring2][Ring1][Branch1][C][=C][N][Branch1][#Branch1][C][C][C][C][Ring1][Ring1][C][=Branch1][C][=O][N][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][Ring2][Ring1][C][=O]<eom>
Output: 
output selfies [C][C][C][C][=N][C][Branch2][Ring2][=Branch1][C][=C][C][=C][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][Cl][C][=C][Ring2][Ring1][C][=C][C][=C][Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][C][C][N][C][C][C][C][C][Ring1][=Branch1]
generated smiles C1CC2C=NC3(C=CC=C(NC4=CC=C(C(F)(F)F)C=C4Cl)C3=CC=C2)C(=O)N1CCCN5CCCCC5
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=CN3C(SC4=CC=C5N=CC6=C(OCC(=O)N6C)C5=C4)=NN=C3C(F)=C2)S1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][P][C][=C][N][C][Branch2][Ring1][N][S][C][=C][C][=C][N][=C][C][=C][Branch1][O][O][C][C][=Branch1][C][=O][N][Ring1][#Branch1][C][C][Ring1][N][=C][Ring1][S][=N][N][=C][Ring2][Ring1][=Branch1][C][Branch1][C][F][=C][Ring2][Ring1][O][S][Ring2][Ring1][S]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][=Branch1][C][=O][N][C][=N][C][=C][C][=C][Branch1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][C][N][=N][NH1][C][Ring1][=Branch2][=O][C][=C][Ring1][P][Ring2][Ring1][Branch1].[N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][#Branch1][=Branch1][C][=C][C][=C][C][=Branch2][=Branch1][=Branch1][=C][N][=C][Branch2][Branch1][O][C][=C][C][=C][Branch2][Ring2][P][N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring1][#C][C][=C][N][=C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][=C][C][=C][C][=C][Ring1][P][Ring1][=Branch1][C][=C][Ring2][Ring1][#Branch1][C][=C][Ring2][Ring1][S][C][=C][Ring2][Ring2][=Branch1][C][=C][Ring2][Ring2][=N][=C][Ring2][Branch1][Ring1]
generated smiles CC(C)C(=O)N1C=NC=C2C=C(C3=CC4=CC=C3CN=N[NH1]C4)OC=C21.NC(=O)C=CC=C5CC=CC=C6C(=CN=C(C=CC=C(NC(=O)C=CC=CC(C7=CN=C(C8=CC=C(F)C=C8)C9=CC=CC=C79)C=C)C)C6C)C5=C
added!
adding editted molecule!!!
===== for SMILES CC(=O)N1CCC2=CC=C(NC3=NC=C(Cl)C(NC4=CC=CC=C4C(=O)NN)=N3)C=C2C(C)C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][N][C][C][C][=C][C][=C][Branch2][Ring1][#C][N][C][=N][C][=C][Branch1][C][Cl][C][Branch1][S][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][N][N][=N][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch2][C][Branch1][C][C][C][Ring2][Ring1][#C]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][C][=C][Branch1][#C][N][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=Branch2][N][=C][N][Branch1][=N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1][Cl][C][=Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1]
generated smiles CC(C1)CC2=C(NC3=NC4=CC=CC=C4C3)N=CN(C5=CC=C(Cl)C=C5Cl)C2C(=O)N1C6=CC=C(Cl)C=C6
added!
adding editted molecule!!!
===== for SMILES C[C@@H](c1ccc2ncc(-c3cnn(C)c3)cc2c1)c1nnc2c(F)cc(-c3cn(C)cn3)cn12 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C@@H1][Branch2][Ring1][O][C][=C][C][=C][N][=C][C][Branch1][O][C][C][=N][N][Branch1][C][C][C][=Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][S][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][N][Branch1][C][C][C][=N][Ring1][=Branch1][=C][N][Ring1][S][Ring1][=N]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch2][Ring2][C][C][=C][C][=C][C][Branch2][Ring1][Branch1][N][C][=N][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][Cl][=C][Ring2][Ring1][C][=C][C][=C][C][=C][C][=Ring2][Ring1][#Branch2][Ring1][=Branch1]
generated smiles CC(C)(C)C=NC(C1=CC=CC(NC2=NC=C(C(F)(F)F)C=C2Cl)=C1C3)C=CC=CC3
added!
adding editted molecule!!!
===== for SMILES CC(=O)C(F)(F)C1=CC2=CC=C1C(=O)NCCCCN1C=C(C=N1)C1=CN=C3C=CC(=CC3=C1)CCN1N=C2C=CC1=O =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][C][Branch1][C][F][Branch1][C][F][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][N][=C][C][=C][C][=Branch1][Branch2][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][C][N][N][=C][Ring2][Ring1][#C][C][=C][C][Ring1][=Branch1][=O]<eom>
Output: 
output selfies [C][C][=Branch1][C][=O][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][=C][Ring1][P][N].[O][=C][Branch1][C][O][C][Branch1][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2]
generated smiles CC(=O)C1=CC2=CC3=CC=C(N(C)C)C=C3N=C2C=C1N.O=C(O)C(O)C(=O)C4=CC=C5C=CC=CC5=C4
added!
adding editted molecule!!!
===== for SMILES CC(=NNC(N)=O)C1=CN=C2N=NN(CC3=CC4=CC=CN=C4C=C3F)C2=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Branch2][=N][N][C][Branch1][C][N][=O][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch1][=C][N][C][=C][C][=C][Branch1][C][N][C][=C][Ring1][#Branch1][F][=N][C][=C][Ring1][#C][C][=C][C][=C][N][=C][N][=C][Branch1][C][N][N][=C][Ring1][#Branch1][Ring1][#Branch2]
generated smiles CC(C)(C)C1=NC(NC2=CC=C(N)C=C2F)=NC=C1C=C3C=CN=CN=C(N)N=C3
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C2=CC(F)=CN=C2C=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][=Branch1][C][=C][Branch1][C][F][C][=C][C][Branch1][C][F][=C][N][=C][Ring1][#Branch1][C][=C][Ring1][N][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [N][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch2][Ring1][=Branch1][N][=C][C][=C][C][=C][Branch1][C][F][C][Branch1][=Branch1][C][=Branch1][C][=O][O][=C][Ring1][#Branch2][F][C][=C][Ring2][Ring1][Ring1][Ring2][Ring1][Branch2]
generated smiles NC1=NC(F)=CC2=CC=C(N=CC3=CC=C(F)C(C(=O)O)=C3F)C=C21
added!
adding editted molecule!!!
===== for SMILES O=C1C=CC(N2C=CC3=CC=C(F)C=C32)=NN1CCOC1=CC=NC2=CC(OCCCN3CCOCC3)=CC=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][C][=C][C][Branch1][P][N][C][=C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][Ring1][#Branch2][=N][N][Ring1][S][C][C][O][C][=C][C][=N][C][=C][C][Branch1][=N][O][C][C][C][N][C][C][O][C][C][Ring1][=Branch1][=C][C][=C][Ring1][S][Ring2][Ring1][Ring2]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][Branch2][Ring2][N][N][C][=C][C][=C][Branch2][Ring1][S][N][C][=Branch1][C][=O][C][=C][C][=C][Branch1][P][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2][F][C][=C][Ring1][S][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][#C][N][C][C][C][N][C][C][O][C][C][Ring1][=Branch1]
generated smiles COC=CC=C(NC=CC=C(NC(=O)C=CC=C(C1=CC=C(F)C(F)=C1F)CC)C)C=CNCCCN2CCOCC2
added!
adding editted molecule!!!
===== for SMILES C/C(=N\OCCCO)C1=NN2C(=NN=C2CC2=C(F)C=C3N=CC=CC3=C2F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][/C][=Branch1][#Branch1][=N][\O][C][C][C][O][C][=N][N][C][=Branch2][Ring1][=Branch2][=N][N][=C][Ring1][Branch1][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][C][=C][Ring1][Branch2][C][=C][C][=C][N][=C][Branch1][#Branch2][N][C][C][C][O][C][C][Ring1][=Branch1][N][=C][Ring1][=N][N][=C][Ring1][P][N].[H+1]
generated smiles CC1=C(F)C(F)=CC=C1C2=CC3=CN=C(NC4CCOCC4)N=C3N=C2N.[H+1]
added!
adding editted molecule!!!
===== for SMILES COC1=CC=C2C(=C1)N=CC=C2OCC1=NN=C2C(F)=CC(C3=CC(C)=CS3)=CN12 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][N][=C][C][=C][Ring1][#Branch1][O][C][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][C][Branch1][C][C][=C][S][Ring1][=Branch1][=C][N][Ring1][S][Ring1][=N]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][Branch2][Ring1][=N][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1][Ring1][S][=C][C][Branch1][Ring1][O][C][=C][Ring2][Ring1][=Branch2][O][C]
generated smiles C1OC=CC=CC2(C3=CC=CC(F)=C3NC4=CC=C(Cl)C=C42)C=C1OC
added!
adding editted molecule!!!
===== for SMILES CC(=NNC(N)=O)C1=NN2C(C(O)C3=C(F)C=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Branch2][=N][N][C][Branch1][C][N][=O][C][=N][N][C][Branch2][Ring1][#Branch1][C][Branch1][C][O][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][=C][N][=C][Ring2][Ring1][Ring1][C][=C][Ring2][Ring1][#Branch1]<eom>
Output: 
output selfies [C][C][O][C][=N][C][Branch1][C][F][=C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][N][N][C][=N][C][=C][C][Branch1][P][C][=C][N][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][Ring1][=C][=C][Ring1][P][C][=Branch1][C][=O][NH1][Ring2][Ring1][#Branch2]
generated smiles CCOC=NC(F)=C1C=CC(F)=C(N2C=NC=CC(C3=CN=C4C=CC=CC4=C3)=C2)C(=O)[NH1]1
added!
adding editted molecule!!!
===== for SMILES O=C1OCC2=NC(C3=CC=C(F)C=C3F)C(OC3=CC=NC4=C3C(C3=CC=CN=C3)=CN4)=C12 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][O][C][C][=N][C][Branch1][=N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][F][C][Branch2][Ring1][=Branch2][O][C][=C][C][=N][C][=C][Ring1][=Branch1][C][Branch1][=Branch2][C][=C][C][=C][N][=C][Ring1][=Branch1][=C][N][Ring1][O][=C][Ring2][Ring1][S][Ring2][Ring1][=N]<eom>
Output: 
output selfies [C][O][C][=C][C][=N][C][=C][C][Branch2][Ring1][P][C][=C][C][=C][Branch2][Ring1][Ring2][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][C][=C][Ring1][P][=C][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][N][O][C]
generated smiles COC=C1C=NC=CC(C2=CC=C(NC3=CC=C(C(F)(F)F)C=C3)C=C2C1)C=COC
added!
adding editted molecule!!!
===== for SMILES C/C(=N\OC(N)=O)C1=NN2C(CC3=C(F)C=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][/C][=Branch1][Branch2][=N][\O][C][Branch1][C][N][=O][C][=N][N][C][Branch2][Ring1][Ring2][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][=C][N][=C][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][O][C][=Branch1][C][=O][/N][=C][Branch1][C][/N][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2].[C][C][=C][C][=C][Branch2][Ring1][#Branch1][N][C][=Branch1][C][=O][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2][C][=C][Ring1][=N][C][=C][Ring2][Ring1][Ring2]
generated smiles CC(C)OC(=O)/N=C(/N)C1=CC=C(F)C(F)=C1.C2C=CC=C(N3C(=O)C4=CC=C(F)C(F)=C4C=C3)C=C2
added!
adding editted molecule!!!
===== for SMILES COC1=CN=C2C=CC([C@H](C)C3=NN=C4C(F)=CC(C5=CN(C)C=N5)=CN43)=CC2=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][N][=C][C][=C][C][Branch2][Ring1][P][C@H1][Branch1][C][C][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][N][Branch1][C][C][C][=N][Ring1][=Branch1][=C][N][Ring1][=N][Ring1][S][=C][C][Ring2][Ring1][Branch2][=C][Ring2][Ring1][N]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][=C][C][C][=Branch2][Ring1][#Branch2][=C][N][Branch1][=Branch1][C][C][C][Ring1][Ring1][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][P][C][Ring2][Ring1][Branch2]
generated smiles C1OC2=CC=CC(=C2)C(F)=CCC1=CN(C3CC3)C4=CC=CC=C4C5=CC=CC=C5
added!
adding editted molecule!!!
===== for SMILES NC1=NC=NC2=C1C(C1=CC(F)=C(NC(=O)C3=CN(CC4CCOCC4)C=C(C4=CC=C(F)C=C4)C3=O)C=C1F)=CN2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=N][C][=N][C][=C][Ring1][=Branch1][C][Branch2][Branch1][Branch2][C][=C][C][Branch1][C][F][=C][Branch2][Ring2][Branch2][N][C][=Branch1][C][=O][C][=C][N][Branch1][#Branch2][C][C][C][C][O][C][C][Ring1][=Branch1][C][=C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][Ring2][Ring1][Ring2][=O][C][=C][Ring2][Ring1][#C][F][=C][N][Ring2][Ring2][Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][=N][N][C][=N][C][=C][C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][=C][C][=C][Ring1][N][C][=C][Ring2][Ring1][C][F][C][=C][Ring2][Ring1][#Branch2][C][Branch1][C][N][=O]
generated smiles C1C=CC(F)=C(NC=NC2=CC(C3=CC=CC=C3)=CC=C2C=CF)C1C(N)=O
added!
adding editted molecule!!!
===== for SMILES CC(=NNC(N)=O)C1=NN2C(=NN=C2[C@@H](C)C2=CC=C3N=CC=CC3=C2)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Branch2][=N][N][C][Branch1][C][N][=O][C][=N][N][C][=Branch2][Ring1][Branch2][=N][N][=C][Ring1][Branch1][C@@H1][Branch1][C][C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][C][=C][C][=N][C][=N][C][Branch1][=N][N][C][=C][C][=C][Branch1][C][N][C][=C][Ring1][#Branch1][=C][Ring1][=C][C][=C][Ring2][Ring1][C][N][C][=N][C][Branch1][C][N][=C][C][=N][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][Ring1][=C]
generated smiles CCC1=CC2=NC=NC(NC3=CC=C(N)C=C3)=C2C4=C1NC=NC(N)=C5C=NC=CC5=C4
added!
adding editted molecule!!!
===== for SMILES C/C(=N\OF)C1=NN2C(CC3=CC=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][/C][=Branch1][Ring2][=N][\O][F][C][=N][N][C][Branch1][P][C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][F][=C][N][=C][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch1][Ring1][C][#N][C][Ring1][Branch2][=N][Ring1][P].[C][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][C][=C][Ring1][S]
generated smiles CC1=CC(F)=CC(=C1)C=NC(F)=C2C=CC=C(C#N)C2=N.CC=C3C=C(C=CC4=CC=C(N(C)C)C=C4)C=C3
added!
adding editted molecule!!!
fp_scores_to_top [0.10738255033557047, 0.19333333333333333, 0.15853658536585366, 0.21666666666666667, 0.16666666666666666, 0.25268817204301075, 0.046511627906976744, 0.08783783783783784, 0.10135135135135136, 0.04477611940298507, 0.08843537414965986, 0.1962025316455696, 0.17424242424242425, 0.18947368421052632, 0.16939890710382513, 0.1696969696969697, 0.1794871794871795, 0.2388888888888889, 0.11920529801324503, 0.1048951048951049, 0.24390243902439024, 0.23728813559322035, 0.18235294117647058, 0.23121387283236994, 0.18493150684931506, 0.0979020979020979, 0.13286713286713286, 0.1568627450980392, 0.12582781456953643, 0.1853932584269663, 0.17791411042944785, 0.05970149253731343, 0.06153846153846154, 0.18452380952380953, 0.18404907975460122, 0.08974358974358974, 0.1590909090909091, 0.16129032258064516, 0.13291139240506328, 0.15568862275449102, 0.14838709677419354, 0.18497109826589594, 0.20958083832335328, 0.29518072289156627, 0.06164383561643835, 0.19333333333333333, 0.10897435897435898, 0.1452513966480447, 0.1297709923664122, 0.24404761904761904, 0.13609467455621302, 0.15151515151515152, 0.12121212121212122, 0.24848484848484848, 0.030534351145038167, 0.25595238095238093, 0.00684931506849315, 0.14193548387096774, 0.26785714285714285, 0.2289156626506024, 0.2781954887218045, 0.15384615384615385, 0.1534090909090909, 0.2835820895522388, 0.15492957746478872, 0.22289156626506024, 0.18617021276595744, 0.2781954887218045, 0.1870967741935484, 0.06338028169014084, 0.19254658385093168, 0.23333333333333334, 0.2413793103448276, 0.2413793103448276, 0.1978021978021978, 0.1069182389937107, 0.1218274111675127, 0.16, 0.18324607329842932, 0.1875, 0.15458937198067632, 0.22959183673469388, 0.2074468085106383, 0.23369565217391305, 0.16382252559726962, 0.2074468085106383, 0.18604651162790697, 0.1989247311827957, 0.14772727272727273, 0.16875, 0.0871559633027523, 0.18072289156626506, 0.15568862275449102, 0.23837209302325582, 0.1907514450867052, 0.1891891891891892, 0.19767441860465115, 0.16470588235294117, 0.21264367816091953, 0.15816326530612246]
top 70 [43 63 67 60 58 55  5 53 49 20 72 73 17 93 21 83 71 23 81 59 65  3 98 42
 82 85 87 74 96 11  1 45 70 94 13 95 79 68 66 86 29 41 24 33 34 78 22 91
 16 30 12 15 14 89  4 97 84 37 77 36  2 99 27 92 39 64 80 61 62 51]
len offspring_mol 70
183
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Cn1cc(-c2cc(F)c3nnc(Sc4ccc5ncc(NC6=COCC6)cc5c4)n3c2)cn1

Boltz running on GPU 2
11.04
CC(F)c1ccc2ncc(-c3cnn(C)c3)cc2c1

Boltz running on GPU 2
9.9
CNn1cc(-c2cnc3ccc(C)cc3c2)cn1

Boltz running on GPU 2
9.13
380/1000 | avg_top1: 12.050 | avg_top10: 11.835 | avg_top100: 11.222 | avg_sa: 3.455 | div: 0.822
{'avg_top1': 12.05, 'avg_top10': 11.834999999999999, 'avg_top100': 11.221599999999999, 'auc_top1': 4.49595, 'auc_top10': 4.386925, 'auc_top100': 4.102774309523809, 'avg_sa': 3.454630397423548, 'diversity_top100': 0.822476372035294, 'n_oracle': 380}
Already in buffer
CC(=NNC(N)=O)c1cnc2ccc(Sc3nnc4ccc(-c5cn[nH]c5)cn34)cc2c1

Boltz running on GPU 2
10.47
CC1C=CCN(c2cnc3ccc(Sc4nnc5ccc([C@@H](C)c6ccc7ncccc7c6)cn45)cc3c2)C1

Boltz running on GPU 1
10.61
CN1CCC(Nc2cnc3ccc(Sc4cc(Cl)c5ncccc5c4)cc3c2)CC1

Boltz running on GPU 1
8.36
Already in buffer
Already in buffer
Already in buffer
Cc1csc(-c2cnc3cc(F)c(C(C)n4nnc5ncc(-c6ccc(F)c(F)c6)nc54)c(F)c3c2)c1

Boltz running on GPU 2
10.63
Already in buffer
CN1CCC(Nc2cnc3ccc(Sc4nnc5c(F)cc(C=NNC(N)=O)cn45)cc3c2)CC1

Boltz running on GPU 1
10.99
Already in buffer
Already in buffer
NC(=O)c1ccc(-c2cnc3nnn(C(F)c4c(F)cc5ncc(F)cc5c4F)c3n2)cc1F

Boltz running on GPU 1
11.74
Already in buffer
Cc1cc(-c2cc(F)c3nnc([C@@H](C)c4ccc5ncc(ON)cc5c4)n3c2)on1

Boltz running on GPU 1
11.16
Fc1cc(F)cc(-c2ccc3nnc(CNc4ccnc5c4=NCNC=5)n3n2)c1

Boltz running on GPU 2
7.67
CC(=O)N1Cc2c(ccc(F)c2C#N)O[C@@H](C)CNC(=O)c2c(-c3cnn(C)c3)nn3ccc1nc23

Boltz running on GPU 2
9.65
Already in buffer
[C-]#[N+]C1=CN=C2N=NN(C(C)c3ccc4ncc(C5=NC=C(OC)C5)cc4c3)C12

Boltz running on GPU 2
10.53
390/1000 | avg_top1: 12.050 | avg_top10: 11.836 | avg_top100: 11.237 | avg_sa: 3.467 | div: 0.821
{'avg_top1': 12.05, 'avg_top10': 11.835999999999999, 'avg_top100': 11.237399999999997, 'auc_top1': 4.6164499999999995, 'auc_top10': 4.50528, 'auc_top100': 4.215069309523809, 'avg_sa': 3.4665448504873693, 'diversity_top100': 0.8205775036215537, 'n_oracle': 390}
Already in buffer
Already in buffer
Already in buffer
Already in buffer
CC(=O)C(=O)C1=C(F)c2ncc(Cc3ccc4ncccc4c3)n2C1

Boltz running on GPU 2
8.69
O=C1N=CCCN1c1ncc(-c2cnn(CCO)c2)cn1

Boltz running on GPU 2
7.97
Cn1cc(-c2cc(F)c3nnc(-c4c[nH]cn4)n3c2)cn1

Boltz running on GPU 1
8.13
Already in buffer
Already in buffer
CNC(=S)c1ccc(C(=O)NN=C(C)c2cnc3nnn(Cc4cc5cccnc5cc4F)c3n2)cc1F

Boltz running on GPU 1
10.38
Already in buffer
Already in buffer
Fc1cc2ncccc2c(F)c1Cc1cnc2ccc(Cl)nn12

Boltz running on GPU 2
8.97
CC(=O)c1c(F)ccc2c1CN(CCCO)c1ccn3nc(N)c(c3n1)C(=O)NC[C@H](c1cccs1)O2

Boltz running on GPU 1
11.67
Already in buffer
CNC(=O)c1ccc(CCc2cnc3ncc(Cc4cc(Cl)c5ncccc5c4)n3n2)s1

Boltz running on GPU 2
9.84
CC(=Nc1cnn(C)c1)c1cnc2nnn(Cc3cc4cccnc4cc3F)c2n1

Boltz running on GPU 2
11.07
COc1cnc2ccc([C@H](C)C3=COCC3)cc2c1

Boltz running on GPU 2
8.37
CN1CCN(C(=O)c2ccc(NC(=O)C3C=Cc4cccnc4C3)cc2)CC1

Boltz running on GPU 2
8.16
400/1000 | avg_top1: 12.050 | avg_top10: 11.836 | avg_top100: 11.249 | avg_sa: 3.483 | div: 0.821
{'avg_top1': 12.05, 'avg_top10': 11.835999999999999, 'avg_top100': 11.248999999999999, 'auc_top1': 4.73695, 'auc_top10': 4.623639999999999, 'auc_top100': 4.327501309523809, 'avg_sa': 3.482638354894165, 'diversity_top100': 0.8209440180939477, 'n_oracle': 400}
Nc1nccc(Oc2ccc(NC(=O)c3ccc(F)cc3F)cc2F)c1Cl

Boltz running on GPU 1
7.89
CCOC(=O)NC1=NC=CC(Oc2ccccc2-c2ccc(F)c(F)c2Cl)C=C1NCc1ccc(F)cc1

Boltz running on GPU 2
8.41
CC(=O)N1Cc2c(ccc(F)c2F)O[C@@H](C)CNC(=O)c2c(N)nn3ccc1nc23

Boltz running on GPU 2
11.19
Already in buffer
[C-]#[N+]C1=CN=C2N=NN(C(C)c3ccc4ncc(C)cc4c3)C12

Boltz running on GPU 2
10.18
O=C1OCc2n[nH]c(Oc3ccnc4[nH]cc(-c5cccnc5)c34)c21

Boltz running on GPU 2
9.16
COc1cnc2ccc(F)cc2c1

Boltz running on GPU 2
6.6
CC(=NF)c1ccc2nnc(Cc3ccc4ncccc4c3CO)n2n1

Boltz running on GPU 1
9.78
CC(=O)NN=C(C)c1cnc2nnn(CC3=C(c4ccc(F)cc4F)N=C4COC(=O)C43)c2n1

Boltz running on GPU 2
10.14
Already in buffer
[C-]#[N+]C1=CN=C2N=NN(C(C)c3ccc(Nc4ncc(Cl)c(Nc5ccccc5C(=O)NN)n4)cc3)C12

Boltz running on GPU 2
11.33
Already in buffer
Already in buffer
Already in buffer
Already in buffer
COCCOC1=CN=C2C=CC(Sc3nnc4ccc(-c5cn[nH]c5)cn34)=CC12

Boltz running on GPU 1
9.0
410/1000 | avg_top1: 12.050 | avg_top10: 11.836 | avg_top100: 11.258 | avg_sa: 3.495 | div: 0.822
{'avg_top1': 12.05, 'avg_top10': 11.835999999999999, 'avg_top100': 11.258199999999997, 'auc_top1': 4.85745, 'auc_top10': 4.741999999999999, 'auc_top100': 4.4400373095238095, 'avg_sa': 3.49539593314778, 'diversity_top100': 0.8224788246463127, 'n_oracle': 410}
CC(=NF)c1cnc2nnn(Cc3cc4cccnc4cc3F)c2n1

Boltz running on GPU 1
11.34
Already in buffer
CC(=O)NN=C(C)c1cnc2nnn(CN=C(C)c3cnc4nnn(Cc5cc6cccnc6cc5F)c4n3)c2n1

Boltz running on GPU 1
10.11
Already in buffer
C/C(=N\OF)c1ccc2ncc(CC3=[SH]C=c4ncccc4=C3F)n2n1

Boltz running on GPU 2
10.01
COCCOc1cnc2ccc(C)cc2c1

Boltz running on GPU 2
7.16
C=CC1C(=CC=CC=C(CN)N=CN=Cc2cc(C)cc(F)c2)NC=CC=C1c1cccc(F)c1Nc1ccccc1

Boltz running on GPU 1
7.61
Fc1ccc2ncccc2c1

Boltz running on GPU 1
5.37
CC(=O)C(=NNC(N)=O)c1cnc2nnn(Cc3cc4cccnc4cc3F)c2n1

Boltz running on GPU 1
11.1
CC(=NN)c1cnc2nnn(Cc3cc4cccnc4cc3F)c2n1

Boltz running on GPU 1
11.69
[(12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15350>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b350>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4db30>), (11.73, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa270>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c0b0>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc80>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b057b0>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc820>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7740>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b050b0>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcdd0>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b4a0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa510>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b153c0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15900>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa040>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bcf0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a4a0>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c740>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ba0>), (11.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dcf0>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c890>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b580>), (11.11, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c2e0>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05200>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcb30>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c190>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c350>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc660>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a6d0>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c200>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05660>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc190>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15eb0>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a040>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05510>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c2e0>), (11.04, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b3c0>), (11.04, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7f90>), (11.03, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b040>), (11.01, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15430>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cd60>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c190>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b053c0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c510>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c5f0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc270>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b900>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12e40>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05580>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dba0>), (10.93, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc7b0>), (10.92, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcba0>), (10.92, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b055f0>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05e40>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cba0>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc900>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7c10>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc9e0>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c270>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c75f0>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9add0>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7820>), (10.86, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b740>), (10.84, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ceb0>), (10.82, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17580>), (10.81, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a350>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ac0>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c80>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05dd0>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17900>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15890>), (10.79, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b430>), (10.79, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b120>), (10.79, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dc80>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc350>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc5f0>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b2e0>), (10.74, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05350>)]
[0.008956177904620449, 0.008844690212862613, 0.008829825187294903, 0.00881496016172719, 0.008777797597807913, 0.008770365085024056, 0.0087629325722402, 0.0087629325722402, 0.008725770008320923, 0.008725770008320923, 0.008718337495537066, 0.00871090498275321, 0.008703472469969355, 0.008703472469969355, 0.008703472469969355, 0.008696039957185498, 0.008688607444401643, 0.008688607444401643, 0.008673742418833933, 0.008673742418833933, 0.008666309906050076, 0.008599417290995375, 0.008584552265427665, 0.008562254727076096, 0.008547389701508385, 0.00850279462480525, 0.00848792959923754, 0.00848792959923754, 0.00848792959923754, 0.00848792959923754, 0.00848792959923754, 0.008480497086453685, 0.008473064573669828, 0.008465632060885972, 0.008465632060885972, 0.008458199548102117, 0.00845076703531826, 0.008443334522534405, 0.008428469496966694, 0.008421036984182837, 0.008413604471398982, 0.008406171958615127, 0.008398739445831272, 0.008391306933047415, 0.00838387442026356, 0.00838387442026356, 0.008339279343560426, 0.008339279343560426, 0.00833184683077657, 0.008324414317992714, 0.008324414317992714, 0.008324414317992714, 0.008324414317992714, 0.008324414317992714, 0.008316981805208857, 0.008316981805208857, 0.008316981805208857, 0.008309549292425002, 0.008309549292425002, 0.008302116779641147, 0.008294684266857292, 0.008264954215721867, 0.008264954215721867, 0.008264954215721867, 0.008257521702938012, 0.008250089190154157, 0.008250089190154157, 0.008242656677370301, 0.008242656677370301, 0.008242656677370301, 0.008242656677370301, 0.008242656677370301, 0.00822779165180259, 0.00822779165180259, 0.00822779165180259, 0.00822779165180259, 0.008212926626234879, 0.008212926626234879, 0.008205494113451022, 0.008205494113451022, 0.008198061600667167, 0.008183196575099456, 0.008168331549531744, 0.008168331549531744, 0.008138601498396321, 0.008138601498396321, 0.008138601498396321, 0.008138601498396321, 0.008138601498396321, 0.008131168985612466, 0.008131168985612466, 0.008131168985612466, 0.008123736472828609, 0.008116303960044754, 0.008116303960044754, 0.008101438934477043, 0.008101438934477043, 0.008101438934477043, 0.008101438934477043, 0.008094006421693188, 0.008094006421693188, 0.008086573908909333, 0.008086573908909333, 0.008086573908909333, 0.008071708883341619, 0.008056843857773908, 0.008041978832206198, 0.008034546319422341, 0.008027113806638486, 0.008027113806638486, 0.008027113806638486, 0.008027113806638486, 0.008027113806638486, 0.008019681293854629, 0.008019681293854629, 0.008019681293854629, 0.007997383755503063, 0.007997383755503063, 0.007997383755503063, 0.007982518729935351]
[(10.74, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05350>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15900>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc190>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c75f0>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c80>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc350>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c890>), (10.84, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ceb0>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (11.73, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa270>), (10.86, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b740>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc5f0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa510>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c190>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc270>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc270>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cba0>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (10.81, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a350>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05580>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc660>), (10.79, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b120>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b2e0>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c350>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c270>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc270>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15350>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12e40>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c510>), (11.73, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa270>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (11.11, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c2e0>), (10.82, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17580>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05200>), (11.11, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c2e0>), (11.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dcf0>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c75f0>), (10.79, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b430>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c80>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7820>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (11.73, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa270>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc270>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c270>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc9e0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05660>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.11, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c2e0>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc9e0>), (10.92, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b055f0>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c75f0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bcf0>), (11.04, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b3c0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15900>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c80>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cd60>), (10.93, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc7b0>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b350>), (10.84, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ceb0>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c270>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05580>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc270>), (11.01, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15430>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c2e0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9add0>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ac0>), (10.92, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b055f0>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c740>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c890>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc9e0>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a6d0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c2e0>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b2e0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b2e0>), (11.11, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c2e0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa040>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c350>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (10.76, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc5f0>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c740>), (10.93, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc7b0>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ba0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (10.79, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b430>), (10.84, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ceb0>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>)]
Bin size: 100
===== for SMILES O=C1NCCCCN2C=C(C=N2)C2=CN=C3C=CC(=CC3=C2)CCN2N=C(C=CC2=O)C2=CC=C1C(C(F)(F)F)=C2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][N][=C][C][=C][C][=Branch1][Branch2][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][=C][Ring2][Ring2][C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][Ring2][Ring1][C][=C][Ring2][Ring1][=Branch1]
generated smiles O=C(O)C1=C2C=CC3=C1C=CC4=CC5=CC=C(N(C)C)C=C5N=C4C3=C2
added!
adding editted molecule!!!
===== for SMILES CN1C=C(CN2C=C(C(=O)NC3=C(F)C=C(C4=CNC5=NC=NC(N)=C45)C(F)=C3)C(=O)C(C3=CC=C(F)C=C3)=C2)C=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=C][Branch2][=Branch1][Ring2][C][N][C][=C][Branch2][Ring2][#Branch1][C][=Branch1][C][=O][N][C][=C][Branch1][C][F][C][=C][Branch1][P][C][=C][N][C][=N][C][=N][C][Branch1][C][N][=C][Ring1][#Branch2][Ring1][#Branch1][C][Branch1][C][F][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][=C][Ring2][Ring2][Ring1][C][=N][Ring2][Ring2][=Branch2]<eom>
Output: 
output selfies [N][C][=C][C][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][Ring1][=N][C][=C][Ring2][Ring1][=Branch1][F]
generated smiles NC1=CC=C(C2=CC=C3C(=C2)C(F)(F)C4=CC(F)=CC=C43)C=C1F
added!
adding editted molecule!!!
===== for SMILES CCN1CC2=C(C=CC(F)=C2C#N)O[C@@H](C2=CC=CS2)CNC(=O)C2=C3N=C1C=CN3N=C2N =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][N][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][#N][O][C@@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][C][N][C][=Branch1][C][=O][C][=C][N][=C][Ring2][Ring1][#Branch2][C][=C][N][Ring1][=Branch1][N][=C][Ring1][=Branch2][N]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring2][=Branch1][N][C][=Branch1][C][=O][N][C][C][C][C@@H1][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][C][C][Ring2][Ring1][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][S][C]
generated smiles C1COC(=O)C2=CC=CC(NC(=O)NCCC[C@@H1]1NC3=CC=C(C(F)(F)F)C=C3CC)=C2C=CC
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=C][N][=C][Branch1][#Branch2][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=N][=C][Ring1][P][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][F]
generated smiles C12C=CC(F)=C(C3=CC=C4C=CN=C(NC5=CC=CC=C5)C4=C3C=C1)C=C2C6=CC=CC=C6F
added!
adding editted molecule!!!
===== for SMILES CC(=NF)C1=NN2C(CC3=C(F)C=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Ring1][=N][F][C][=N][N][C][Branch2][Ring1][Ring2][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][=C][N][=C][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch1][Ring1][C][#N][C][Ring1][Branch2][=N][Ring1][P]
generated smiles CC1=CC(F)=CC(=C1)C=NC(F)=C2C=CC=C(C#N)C2=N
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=NN(CCC3=CC=C4N=CC(C5=CN(CCO)N=C5)=CC4=C3)C(=O)C=C2)C=C1C(F)(F)F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][#C][C][=N][N][Branch2][Ring1][S][C][C][C][=C][C][=C][N][=C][C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][=C][C][Ring1][=C][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][P][C][Branch1][C][F][Branch1][C][F][F]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][C][=C][Branch2][Ring1][P][N][C][=Branch1][C][=O][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2][C][=C][Ring1][S][Ring2][Ring1][#Branch1][=C][C][=C][Ring2][Ring1][=N][Ring2][Ring1][P]
generated smiles CC(C)(C)C1=CC=CC2(C=CC=CN=CC3=CNC(=O)NC=CC=C3C=CC=CC(C(F)(F)F)=C)C=C21
added!
adding editted molecule!!!
===== for SMILES N#CC1=C(F)C=CC2=C1CN(CCCO)C1=NC3=C(C(=O)NC[C@H](C4=CC=CS4)O2)C(N)=NN3C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][#C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][C][N][Branch1][Branch1][C][C][C][O][C][=N][C][=C][Branch2][Ring1][Branch1][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][Ring2][Ring1][#Branch1][C][Branch1][C][N][=N][N][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][N][C][=N][C][=C][C][Branch2][Ring1][#Branch2][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2][Cl][=C][C][=C][Ring2][Ring1][#Branch1][N][Ring2][Ring1][#Branch2][C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1]
generated smiles CCOC(=O)NC1=NC=CC(OC2=CC=CC=C2C3=CC=C(F)C(F)=C3Cl)C=C1NCC4=CC=C(F)C=C4
added!
adding editted molecule!!!
===== for SMILES CC(N=O)C1=NN2C(=NN=C2CC2=C(F)C=C3N=CC=CC3=C2F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch1][Ring1][N][=O][C][=N][N][C][=Branch2][Ring1][=Branch2][=N][N][=C][Ring1][Branch1][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch2][Ring2][C][C][=C][C][=C][C][Branch2][Ring1][=Branch1][N][C][=Branch1][C][=O][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][=C][Ring2][Ring1][Ring1][=C][C][=C][Ring2][Ring1][#Branch2][F]
generated smiles C1C(C)(C2)C=NC(C=CC=CC1(NC(=O)C3=NC4=CC=CC=C4C=C3F)C)C=C2F
added!
adding editted molecule!!!
===== for SMILES COC1=CC2=CC([C@H](C)N=C(C)C3=CN=C4N=NN(CC5=CC6=CC=CN=C6C=C5F)C4=N3)=CC=C2N=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=C][C][Branch2][Ring2][#Branch2][C@H1][Branch1][C][C][N][=C][Branch1][C][C][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1][=C][C][=C][Ring2][Ring1][S][N][=C][Ring2][Ring2][Ring2]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][N][=C][Branch2][Ring1][N][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][=C][Ring1][S][C][Ring2][Ring1][#Branch1][=C][Ring2][Ring1][O][=C][Ring2][Ring1][S]
generated smiles C1OC=CC=CC1C=CC2=CN=C3N=C(NC=CC4=C(C=CC5=CC=C6N=CC=CC6=C5)C=C4)C3=C2C
added!
adding editted molecule!!!
===== for SMILES NC(=O)c1ccc(-c2cnc3nnn(C(F)c4c(F)cc5ncc(F)cc5c4F)c3n2)cc1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][N][C][=C][N][=C][N][=N][N][Branch2][Ring1][#Branch2][C][Branch1][C][F][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][C][F][=C][C][Ring1][#Branch1][=C][Ring1][N][F][C][Ring2][Ring1][Ring2][=N][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][=C][F]<eom>
Output: 
output selfies [F][C][=C][C][=C][Branch2][Ring2][C][C][=C][C][=N][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][C][=C][Ring1][#Branch2][N][=C][Ring1][=C][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][=C][Ring2][Ring1][=N]
generated smiles FC1=CC=C(C=CC2=NC3=CC(C(F)(F)F)=CC=C3N=C2C4=CC=CCF)C4C=C1
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=CC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=C][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Branch1][=Branch1][=C][C][=C][C][=C][Branch2][Ring2][=Branch1][N][C][=C][C][=C][Branch2][Ring1][Branch2][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][N][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][#C][C][=C][Ring2][Ring1][Branch1][C][=C][Ring2][Ring1][=N][C][=C][Ring2][Ring2][C][C][N][Ring2][Ring2][=Branch1]
generated smiles CC1=CC(F)=CC(=C1)C=NC=NC(=CC=CC=C2NC=CC=C(C3=CC=CC(F)=C3NC4=CC=CC=C4)C2C=C)CN
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Ring2][S][=C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][N][=C][Ring1][O][C][=C][C][=C][Branch1][S][N][C][C][N][Branch1][=Branch1][C][C][C][Ring1][Ring1][C][C][Ring1][=Branch2][C][=C][Ring1][#C][C][=C][Ring2][Ring1][P][C][=C][Ring2][Ring2][=Branch1][C]
generated smiles CC1=CC(F)=CC(=C12)C=NC=NC(=CC3=C(F)C=CC=C3N=CC4=CC=C(N5CCN(C6CC6)CC5)C=C4C=C2C)CC
added!
adding editted molecule!!!
===== for SMILES O=C(NC1=CC=C(OC2=CC=NC(NC(=O)N3CCC3)=C2)C(F)=C1)C1=CN(CC2CC2)C(=O)N(C2=CC=C(F)C=C2)C1=O =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][Branch2][Ring2][#Branch1][N][C][=C][C][=C][Branch2][Ring1][#Branch1][O][C][=C][C][=N][C][Branch1][N][N][C][=Branch1][C][=O][N][C][C][C][Ring1][Ring2][=C][Ring1][=N][C][Branch1][C][F][=C][Ring2][Ring1][Branch1][C][=C][N][Branch1][#Branch1][C][C][C][C][Ring1][Ring1][C][=Branch1][C][=O][N][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][Ring2][Ring1][C][=O]<eom>
Output: 
output selfies [C][C][C][C][=N][C][Branch2][Ring2][=Branch1][C][=C][C][=C][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][Cl][C][=C][Ring2][Ring1][C][=C][C][=C][Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][C][C][N][C][C][C][C][C][Ring1][=Branch1]
generated smiles C1CC2C=NC3(C=CC=C(NC4=CC=C(C(F)(F)F)C=C4Cl)C3=CC=C2)C(=O)N1CCCN5CCCCC5
added!
adding editted molecule!!!
===== for SMILES CC(=O)N1CCC2=CC=C(NC3=NC=C(Cl)C(NC4=CC=CC=C4C(=O)NN)=N3)C=C2C(C)C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][N][C][C][C][=C][C][=C][Branch2][Ring1][#C][N][C][=N][C][=C][Branch1][C][Cl][C][Branch1][S][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][N][N][=N][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch2][C][Branch1][C][C][C][Ring2][Ring1][#C]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][C][=C][Branch1][#C][N][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=Branch2][N][=C][N][Branch1][=N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1][Cl][C][=Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1]
generated smiles CC(C1)CC2=C(NC3=NC4=CC=CC=C4C3)N=CN(C5=CC=C(Cl)C=C5Cl)C2C(=O)N1C6=CC=C(Cl)C=C6
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=CN3C(SC4=CC=C5N=CC6=C(OCC(=O)N6C)C5=C4)=NN=C3C(F)=C2)S1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][P][C][=C][N][C][Branch2][Ring1][N][S][C][=C][C][=C][N][=C][C][=C][Branch1][O][O][C][C][=Branch1][C][=O][N][Ring1][#Branch1][C][C][Ring1][N][=C][Ring1][S][=N][N][=C][Ring2][Ring1][=Branch1][C][Branch1][C][F][=C][Ring2][Ring1][O][S][Ring2][Ring1][S]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][=Branch1][C][=O][N][C][=N][C][=C][C][=C][Branch1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][C][N][=N][NH1][C][Ring1][=Branch2][=O][C][=C][Ring1][P][Ring2][Ring1][Branch1].[N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][#Branch1][=Branch1][C][=C][C][=C][C][=Branch2][=Branch1][=Branch1][=C][N][=C][Branch2][Branch1][O][C][=C][C][=C][Branch2][Ring2][P][N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring1][#C][C][=C][N][=C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][=C][C][=C][C][=C][Ring1][P][Ring1][=Branch1][C][=C][Ring2][Ring1][#Branch1][C][=C][Ring2][Ring1][S][C][=C][Ring2][Ring2][=Branch1][C][=C][Ring2][Ring2][=N][=C][Ring2][Branch1][Ring1]
generated smiles CC(C)C(=O)N1C=NC=C2C=C(C3=CC4=CC=C3CN=N[NH1]C4)OC=C21.NC(=O)C=CC=C5CC=CC=C6C(=CN=C(C=CC=C(NC(=O)C=CC=CC(C7=CN=C(C8=CC=C(F)C=C8)C9=CC=CC=C79)C=C)C)C6C)C5=C
added!
adding editted molecule!!!
===== for SMILES C[C@@H](c1ccc2ncc(-c3cnn(C)c3)cc2c1)c1nnc2c(F)cc(-c3cn(C)cn3)cn12 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C@@H1][Branch2][Ring1][O][C][=C][C][=C][N][=C][C][Branch1][O][C][C][=N][N][Branch1][C][C][C][=Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][S][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][N][Branch1][C][C][C][=N][Ring1][=Branch1][=C][N][Ring1][S][Ring1][=N]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch2][Ring2][C][C][=C][C][=C][C][Branch2][Ring1][Branch1][N][C][=N][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][Cl][=C][Ring2][Ring1][C][=C][C][=C][C][=C][C][=Ring2][Ring1][#Branch2][Ring1][=Branch1]
generated smiles CC(C)(C)C=NC(C1=CC=CC(NC2=NC=C(C(F)(F)F)C=C2Cl)=C1C3)C=CC=CC3
added!
adding editted molecule!!!
===== for SMILES CC(=O)C(F)(F)C1=CC2=CC=C1C(=O)NCCCCN1C=C(C=N1)C1=CN=C3C=CC(=CC3=C1)CCN1N=C2C=CC1=O =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][C][Branch1][C][F][Branch1][C][F][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][N][=C][C][=C][C][=Branch1][Branch2][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][C][N][N][=C][Ring2][Ring1][#C][C][=C][C][Ring1][=Branch1][=O]<eom>
Output: 
output selfies [C][C][=Branch1][C][=O][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][=C][Ring1][P][N].[O][=C][Branch1][C][O][C][Branch1][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2]
generated smiles CC(=O)C1=CC2=CC3=CC=C(N(C)C)C=C3N=C2C=C1N.O=C(O)C(O)C(=O)C4=CC=C5C=CC=CC5=C4
added!
adding editted molecule!!!
===== for SMILES CC(=NN)c1cnc2nnn(Cc3cc4cccnc4cc3F)c2n1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Ring1][=N][N][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][Branch1][N][C][=N][C][=C][C][=C][Branch1][C][F][C][=C][C][Ring1][#Branch1][=N][Ring1][O][C][=C][Ring2][Ring1][Ring1].[C][C][=C][C][=C][Branch2][Ring1][#Branch1][C][=C][C][=N][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][N][=C][Ring1][O][C][=C][Ring2][Ring1][Ring2]
generated smiles C1C=CC(F)=C1NC2=NC=C3C=C(F)C=CC3=N2.C4C=CC=CC=CC5=NC6=CC(F)=CC=C6N=C5C=C4
added!
adding editted molecule!!!
===== for SMILES CC(=O)c1c(F)ccc2c1CN(CCCO)c1ccn3nc(N)c(c3n1)C(=O)NC[C@H](c1cccs1)O2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][C][N][Branch1][Branch1][C][C][C][O][C][C][=C][N][N][=C][Branch1][C][N][C][=Branch1][#Branch1][=C][Ring1][=Branch1][N][=Ring1][#Branch2][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][Ring2][Ring1][=N]<eom>
Output: 
output selfies [C][C][C][=Branch1][C][=O][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][C][=C][C][=C][Branch1][S][N][C][C][C][N][Branch1][=Branch1][C][C][C][C][C][C][Ring1][=Branch2][C][=C][Ring1][P][N][Ring2][Ring1][=N][C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1]
generated smiles C1CC(=O)C2=C(F)C=CC=C2C3=CC=C(NCC4CN(CCCCC)C4)C=C3N1CC5=CC=C(F)C=C5
added!
adding editted molecule!!!
===== for SMILES CC(=NNC(N)=O)C1=CN=C2N=NN(CC3=CC4=CC=CN=C4C=C3F)C2=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Branch2][=N][N][C][Branch1][C][N][=O][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch1][=C][N][C][=C][C][=C][Branch1][C][N][C][=C][Ring1][#Branch1][F][=N][C][=C][Ring1][#C][C][=C][C][=C][N][=C][N][=C][Branch1][C][N][N][=C][Ring1][#Branch1][Ring1][#Branch2]
generated smiles CC(C)(C)C1=NC(NC2=CC=C(N)C=C2F)=NC=C1C=C3C=CN=CN=C(N)N=C3
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C2=CC(F)=CN=C2C=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][=Branch1][C][=C][Branch1][C][F][C][=C][C][Branch1][C][F][=C][N][=C][Ring1][#Branch1][C][=C][Ring1][N][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [N][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch2][Ring1][=Branch1][N][=C][C][=C][C][=C][Branch1][C][F][C][Branch1][=Branch1][C][=Branch1][C][=O][O][=C][Ring1][#Branch2][F][C][=C][Ring2][Ring1][Ring1][Ring2][Ring1][Branch2]
generated smiles NC1=NC(F)=CC2=CC=C(N=CC3=CC=C(F)C(C(=O)O)=C3F)C=C21
added!
adding editted molecule!!!
===== for SMILES O=C1C=CC(N2C=CC3=CC=C(F)C=C32)=NN1CCOC1=CC=NC2=CC(OCCCN3CCOCC3)=CC=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][C][=C][C][Branch1][P][N][C][=C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][Ring1][#Branch2][=N][N][Ring1][S][C][C][O][C][=C][C][=N][C][=C][C][Branch1][=N][O][C][C][C][N][C][C][O][C][C][Ring1][=Branch1][=C][C][=C][Ring1][S][Ring2][Ring1][Ring2]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][Branch2][Ring2][N][N][C][=C][C][=C][Branch2][Ring1][S][N][C][=Branch1][C][=O][C][=C][C][=C][Branch1][P][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2][F][C][=C][Ring1][S][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][#C][N][C][C][C][N][C][C][O][C][C][Ring1][=Branch1]
generated smiles COC=CC=C(NC=CC=C(NC(=O)C=CC=C(C1=CC=C(F)C(F)=C1F)CC)C)C=CNCCCN2CCOCC2
added!
adding editted molecule!!!
===== for SMILES C/C(=N\OCCCO)C1=NN2C(=NN=C2CC2=C(F)C=C3N=CC=CC3=C2F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][/C][=Branch1][#Branch1][=N][\O][C][C][C][O][C][=N][N][C][=Branch2][Ring1][=Branch2][=N][N][=C][Ring1][Branch1][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][C][=C][Ring1][Branch2][C][=C][C][=C][N][=C][Branch1][#Branch2][N][C][C][C][O][C][C][Ring1][=Branch1][N][=C][Ring1][=N][N][=C][Ring1][P][N].[H+1]
generated smiles CC1=C(F)C(F)=CC=C1C2=CC3=CN=C(NC4CCOCC4)N=C3N=C2N.[H+1]
added!
adding editted molecule!!!
===== for SMILES COC1=CC=C2C(=C1)N=CC=C2OCC1=NN=C2C(F)=CC(C3=CC(C)=CS3)=CN12 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][N][=C][C][=C][Ring1][#Branch1][O][C][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][C][Branch1][C][C][=C][S][Ring1][=Branch1][=C][N][Ring1][S][Ring1][=N]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][Branch2][Ring1][=N][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1][Ring1][S][=C][C][Branch1][Ring1][O][C][=C][Ring2][Ring1][=Branch2][O][C]
generated smiles C1OC=CC=CC2(C3=CC=CC(F)=C3NC4=CC=C(Cl)C=C42)C=C1OC
added!
adding editted molecule!!!
===== for SMILES CC(=NNC(N)=O)C1=NN2C(C(O)C3=C(F)C=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Branch2][=N][N][C][Branch1][C][N][=O][C][=N][N][C][Branch2][Ring1][#Branch1][C][Branch1][C][O][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][=C][N][=C][Ring2][Ring1][Ring1][C][=C][Ring2][Ring1][#Branch1]<eom>
Output: 
output selfies [C][C][O][C][=N][C][Branch1][C][F][=C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][N][N][C][=N][C][=C][C][Branch1][P][C][=C][N][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][Ring1][=C][=C][Ring1][P][C][=Branch1][C][=O][NH1][Ring2][Ring1][#Branch2]
generated smiles CCOC=NC(F)=C1C=CC(F)=C(N2C=NC=CC(C3=CN=C4C=CC=CC4=C3)=C2)C(=O)[NH1]1
added!
adding editted molecule!!!
===== for SMILES O=C1OCC2=NC(C3=CC=C(F)C=C3F)C(OC3=CC=NC4=C3C(C3=CC=CN=C3)=CN4)=C12 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][O][C][C][=N][C][Branch1][=N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][F][C][Branch2][Ring1][=Branch2][O][C][=C][C][=N][C][=C][Ring1][=Branch1][C][Branch1][=Branch2][C][=C][C][=C][N][=C][Ring1][=Branch1][=C][N][Ring1][O][=C][Ring2][Ring1][S][Ring2][Ring1][=N]<eom>
Output: 
output selfies [C][O][C][=C][C][=N][C][=C][C][Branch2][Ring1][P][C][=C][C][=C][Branch2][Ring1][Ring2][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][C][=C][Ring1][P][=C][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][N][O][C]
generated smiles COC=C1C=NC=CC(C2=CC=C(NC3=CC=C(C(F)(F)F)C=C3)C=C2C1)C=COC
added!
adding editted molecule!!!
===== for SMILES C/C(=N\OC(N)=O)C1=NN2C(CC3=C(F)C=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][/C][=Branch1][Branch2][=N][\O][C][Branch1][C][N][=O][C][=N][N][C][Branch2][Ring1][Ring2][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][=C][N][=C][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][O][C][=Branch1][C][=O][/N][=C][Branch1][C][/N][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2].[C][C][=C][C][=C][Branch2][Ring1][#Branch1][N][C][=Branch1][C][=O][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2][C][=C][Ring1][=N][C][=C][Ring2][Ring1][Ring2]
generated smiles CC(C)OC(=O)/N=C(/N)C1=CC=C(F)C(F)=C1.C2C=CC=C(N3C(=O)C4=CC=C(F)C(F)=C4C=C3)C=C2
added!
adding editted molecule!!!
===== for SMILES NC1=NC=NC2=C1C(C1=CC(F)=C(NC(=O)C3=CN(CC4CCOCC4)C=C(C4=CC=C(F)C=C4)C3=O)C=C1F)=CN2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=N][C][=N][C][=C][Ring1][=Branch1][C][Branch2][Branch1][Branch2][C][=C][C][Branch1][C][F][=C][Branch2][Ring2][Branch2][N][C][=Branch1][C][=O][C][=C][N][Branch1][#Branch2][C][C][C][C][O][C][C][Ring1][=Branch1][C][=C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][Ring2][Ring1][Ring2][=O][C][=C][Ring2][Ring1][#C][F][=C][N][Ring2][Ring2][Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][=N][N][C][=N][C][=C][C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][=C][C][=C][Ring1][N][C][=C][Ring2][Ring1][C][F][C][=C][Ring2][Ring1][#Branch2][C][Branch1][C][N][=O]
generated smiles C1C=CC(F)=C(NC=NC2=CC(C3=CC=CC=C3)=CC=C2C=CF)C1C(N)=O
added!
adding editted molecule!!!
===== for SMILES COc1cnc2ccc([C@H](C)c3nnc4c(F)cc(-c5cn(C)cn5)cn34)cc2c1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][N][=C][C][=C][C][Branch2][Ring1][P][C@H1][Branch1][C][C][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][N][Branch1][C][C][C][=N][Ring1][=Branch1][=C][N][Ring1][S][Ring1][=N][=C][C][Ring2][Ring1][Branch2][=C][Ring2][Ring1][N]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][=C][C][C][=Branch2][Ring1][#Branch2][=C][N][Branch1][=Branch1][C][C][C][Ring1][Ring1][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][P][C][Ring2][Ring1][Branch2]
generated smiles C1OC2=CC=CC(=C2)C(F)=CCC1=CN(C3CC3)C4=CC=CC=C4C5=CC=CC=C5
added!
adding editted molecule!!!
===== for SMILES COC1=CN=C2C=CC([C@H](C)C3=NN=C4C(F)=CC(C5=CN(C)C=N5)=CN43)=CC2=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][N][=C][C][=C][C][Branch2][Ring1][P][C@H1][Branch1][C][C][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][N][Branch1][C][C][C][=N][Ring1][=Branch1][=C][N][Ring1][=N][Ring1][S][=C][C][Ring2][Ring1][Branch2][=C][Ring2][Ring1][N]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][=C][C][C][=Branch2][Ring1][#Branch2][=C][N][Branch1][=Branch1][C][C][C][Ring1][Ring1][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][P][C][Ring2][Ring1][Branch2]
generated smiles C1OC2=CC=CC(=C2)C(F)=CCC1=CN(C3CC3)C4=CC=CC=C4C5=CC=CC=C5
added!
adding editted molecule!!!
fp_scores_to_top [0.13768115942028986, 0.25146198830409355, 0.09352517985611511, 0.27906976744186046, 0.053691275167785234, 0.16541353383458646, 0.24561403508771928, 0.2155688622754491, 0.22674418604651161, 0.10869565217391304, 0.23780487804878048, 0.1259259259259259, 0.10344827586206896, 0.21818181818181817, 0.1986754966887417, 0.17197452229299362, 0.20606060606060606, 0.1038961038961039, 0.28378378378378377, 0.2080536912751678, 0.0390625, 0.1450381679389313, 0.10967741935483871, 0.15083798882681565, 0.2033898305084746, 0.21301775147928995, 0.18181818181818182, 0.11585365853658537, 0.12318840579710146, 0.21428571428571427, 0.22875816993464052, 0.23270440251572327, 0.10526315789473684, 0.014705882352941176, 0.15822784810126583, 0.11801242236024845, 0.1724137931034483, 0.1951219512195122, 0.26436781609195403, 0.18452380952380953, 0.05194805194805195, 0.1893491124260355, 0.12949640287769784, 0.17834394904458598, 0.19886363636363635, 0.22346368715083798, 0.22077922077922077, 0.1524390243902439, 0.2777777777777778, 0.045454545454545456, 0.04195804195804196, 0.17582417582417584, 0.047619047619047616, 0.1411764705882353, 0.1695906432748538, 0.038461538461538464, 0.2792207792207792, 0.046153846153846156, 0.1839080459770115, 0.038461538461538464, 0.12, 0.18235294117647058, 0.14444444444444443, 0.057971014492753624, 0.06153846153846154, 0.19767441860465115, 0.18, 0.23636363636363636, 0.136986301369863, 0.06875, 0.19254658385093168, 0.23333333333333334, 0.2413793103448276, 0.1978021978021978, 0.1069182389937107, 0.1218274111675127, 0.18324607329842932, 0.16, 0.1875, 0.1871345029239766, 0.15458937198067632, 0.22959183673469388, 0.23369565217391305, 0.2074468085106383, 0.16382252559726962, 0.18604651162790697, 0.1989247311827957, 0.22459893048128343, 0.21739130434782608, 0.14772727272727273, 0.16875, 0.0871559633027523, 0.18072289156626506, 0.15568862275449102, 0.23837209302325582, 0.1907514450867052, 0.1891891891891892, 0.16470588235294117, 0.19767441860465115, 0.19767441860465115]
top 70 [18 56  3 48 38  1  6 72 94 10 67 82 71 31 81 30  8 87 45 46 13 88  7 29
 25 19 83 16 24 86 44 14 73 98 99 65 37 70 95 41 96 78 79 85 39 58 76 61
 26 92 66 43 51 36 15 54 90  5 97 84 77 34 93 80 47 23 89 21 62 53]
len offspring_mol 70
187
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
CC1=CSN(C(C)c2ccc3ncc(-c4cnn(C)c4)cc3c2)N=C1

Boltz running on GPU 2
9.77
CC(c1ccc2ncc(-c3cnn(C)c3)cc2c1)N1N=NC2=NC=CCC21

Boltz running on GPU 2
10.23
420/1000 | avg_top1: 12.050 | avg_top10: 11.836 | avg_top100: 11.275 | avg_sa: 3.501 | div: 0.820
{'avg_top1': 12.05, 'avg_top10': 11.835999999999999, 'avg_top100': 11.275499999999997, 'auc_top1': 4.97795, 'auc_top10': 4.860359999999999, 'auc_top100': 4.552705809523809, 'avg_sa': 3.501391327602522, 'diversity_top100': 0.819684734673577, 'n_oracle': 420}
CC1=CCC(c2ccc3c(c2)oc(=O)n3CCOc2ccnc3cc(-c4cnn(C)c4)ccc23)=C1

Boltz running on GPU 2
10.96
CC(=O)Nc1cnc2ccc(Sc3nnc4c(F)cc(-c5cnn(C)c5)cn34)cc2c1

Boltz running on GPU 2
10.08
CS(=O)(=O)N1C(=O)COc2c1cnc1ccc(Sc3nnc4c(F)cc(-c5cnn(F)c5)cn34)cc21

Boltz running on GPU 2
9.36
COC1C=COc2c1cnc1ccc(Sc3nnc4c(F)cc(-c5cnn(F)c5)cn34)cc21

Boltz running on GPU 2
10.95
Cc1cc(C(=O)NC2=Nc3ncc(-c4ccncc4)nc3C2)c(=O)n(-c2ccc(F)cc2)c1

Boltz running on GPU 2
8.4
Already in buffer
Already in buffer
COc1ccc2c(OCc3nnc4ccc(-c5cnn(C)c5)cn34)ccnc2c1

Boltz running on GPU 2
10.98
Cc1cc(-c2cc(F)c3nnc([C@@H](F)c4ccc5ncc(ON)cc5c4)n3c2)on1

Boltz running on GPU 1
10.89
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Cn1cc(COc2ccnc3cc(-c4cnn(C)c4)ccc23)cn1

Boltz running on GPU 2
9.47
c1cnc2ccc(Cc3ccc4nnc(Cc5ccc6ncccc6c5)n4n3)cc2c1

Boltz running on GPU 2
10.39
FC1=C(Nc2ncc3cc(F)ccc3n2)CC=C1.Fc1ccc2nc3c(nc2c1)C=CC=CC=CCC=C3

Boltz running on GPU 2
[Errno 2] No such file or directory: '/data/boltz/results/boltz_results_c-met_FC1=C(Nc2ncc3cc(F)ccc3n2)CC=C1.Fc1ccc2nc3c(nc2c1)C=CC=CC=CCC=C3/predictions/c-met_FC1=C(Nc2ncc3cc(F)ccc3n2)CC=C1.Fc1ccc2nc3c(nc2c1)C=CC=CC=CCC=C3/affinity_c-met_FC1=C(Nc2ncc3cc(F)ccc3n2)CC=C1.Fc1ccc2nc3c(nc2c1)C=CC=CC=CCC=C3.json'
-0.0
430/1000 | avg_top1: 12.050 | avg_top10: 11.836 | avg_top100: 11.280 | avg_sa: 3.472 | div: 0.819
{'avg_top1': 12.05, 'avg_top10': 11.835999999999999, 'avg_top100': 11.280000000000005, 'auc_top1': 5.09845, 'auc_top10': 4.978719999999998, 'auc_top100': 4.665483309523809, 'avg_sa': 3.4719506415257637, 'diversity_top100': 0.8191333729703952, 'n_oracle': 430}
COCCOC1CNc2cc3cc(-n4nnc5ncc(-c6ccncc6)nc54)cnc3cc2C1

Boltz running on GPU 2
10.42
FC=CCc1cnc2ccc(-c3cc(Cl)c4ncccc4c3)nn12

Boltz running on GPU 2
9.69
CC(c1c(F)cc2ncccc2c1F)n1cnc2ncc(-c3cnn(F)c3)nc21

Boltz running on GPU 2
10.28
CCCCCN1CC(CNc2ccc3c(c2)N(Cc2ccc(F)cc2)CCC(=O)c2c(F)cccc2-3)C1

Boltz running on GPU 2
7.88
COc1ccc2c(OCc3nnc4ccc(-c5cccn5C)cn34)ccnc2c1

Boltz running on GPU 2
10.08
OCCN1N=CC=C(c2ccc3nnc(Cc4ccc5ncccc5c4)n3n2)S1

Boltz running on GPU 2
11.19
Cc1csc(-c2ccc3c(c2)oc(=O)n3CCOc2ccnc3cc(N)ccc23)c1

Boltz running on GPU 1
9.61
Fc1ccc2nnc(Cc3ccc4ncccc4c3)n2n1

Boltz running on GPU 2
9.68
Already in buffer
Cc1csc(-c2cnn3c(Cc4c(F)cc5ncccc5c4F)nnc3c2)c1

Boltz running on GPU 2
10.84
CC(=Nc1cnn(CCO)c1)c1ccc2ncc(Cc3c(F)cc4ncccc4c3F)n2n1

Boltz running on GPU 2
10.13
440/1000 | avg_top1: 12.050 | avg_top10: 11.836 | avg_top100: 11.283 | avg_sa: 3.472 | div: 0.820
{'avg_top1': 12.05, 'avg_top10': 11.835999999999999, 'avg_top100': 11.283100000000005, 'auc_top1': 5.2189499999999995, 'auc_top10': 5.097079999999998, 'auc_top100': 4.778298809523809, 'avg_sa': 3.4717219090964306, 'diversity_top100': 0.8197432302194032, 'n_oracle': 440}
Already in buffer
[C-]#[N+]C1=CN=C2N=NN(C(C)c3ccc4ncc5c(c4c3)NCC(c3cnn(C)c3)C5)C12

Boltz running on GPU 2
10.14
Cn1cc(-c2ccc3c(OCNC(N)=O)ccnc3c2)cn1

Boltz running on GPU 2
8.86
Already in buffer
Already in buffer
COc1ccc2c(OCc3nnc4ccc(C5=CN(C)N=CS5)cn34)ccnc2c1

Boltz running on GPU 2
10.47
Cn1cc2c(n1)CC(Sc1nnc3c(F)cc(-c4cnn(F)c4)cn13)CC2

Boltz running on GPU 2
8.84
Already in buffer
Already in buffer
Fc1cc2ncccc2cc1Cn1nnc2ncc(CN3CCOCC3)nc21

Boltz running on GPU 2
8.8
Already in buffer
Already in buffer
FCC=CC=C1c2nc3ccc(C(F)(F)F)cc3nc2C=CC2=CC=C(F)C=CC21

Boltz running on GPU 2
7.69
Already in buffer
Cn1cc(-c2cc(F)c3nnc(SC4=CC5C(=NC=CN5F)C=C4)n3c2)cn1

Boltz running on GPU 2
10.24
CNC(=O)c1ccccc1Nc1nc(Nc2c(F)cc3ncccc3c2F)ncc1Cl

Boltz running on GPU 1
9.71
Already in buffer
CN1CCN(Nc2ccc(Oc3ccnc(NC(=O)N4CCC4)c3)c(F)c2)CC1

Boltz running on GPU 1
7.63
CO/N=C(\F)c1ccc2ncc(Cc3c(F)cc4ncccc4c3F)n2n1

Boltz running on GPU 1
11.18
450/1000 | avg_top1: 12.050 | avg_top10: 11.836 | avg_top100: 11.286 | avg_sa: 3.469 | div: 0.819
{'avg_top1': 12.05, 'avg_top10': 11.835999999999999, 'avg_top100': 11.286100000000003, 'auc_top1': 5.33945, 'auc_top10': 5.215439999999997, 'auc_top100': 4.8911448095238095, 'avg_sa': 3.4688279167865153, 'diversity_top100': 0.8192410484389265, 'n_oracle': 450}
Already in buffer
CNC(=S)c1ccc(-c2cnc3ncc(C)n3n2)cc1F

Boltz running on GPU 2
7.12
C[C@@H](c1ccccc1)c1nnc2c(F)cc(-c3c[nH]cn3)cn12

Boltz running on GPU 2
8.75
O=C(NC1=CCC(F)C=C1)C1(C(=O)Nc2ccc(Oc3ccnc4c3C=C(F)C4)c(F)c2)CC1

Boltz running on GPU 2
9.11
Already in buffer
Fc1cc2ncccc2c(F)c1Cc1nnc2ccc(Cl)nn12

Boltz running on GPU 2
9.47
Cn1cc(Sc2ccc3nc(NC(=O)NCCN4CCOCC4)sc3c2)cn1

Boltz running on GPU 2
8.75
Already in buffer
Cc1ccc2ncc(ON)cc2c1

Boltz running on GPU 2
7.16
Already in buffer
Already in buffer
Already in buffer
FC1=CC(Cc2nnc3ccc(C4=CNC=CS4)nn23)=CC1

Boltz running on GPU 1
8.27
Already in buffer
Already in buffer
CO/N=C(\C)c1csc(-c2ccc3nnc(Cc4cn(F)[nH]4)n3n2)c1

Boltz running on GPU 1
9.24
CC(=O)NN=C(C)C=Cc1cnc2ncn([C@@H](C)c3cc4cccnc4cc3F)c2n1

Boltz running on GPU 2
9.7
Already in buffer
Oc1ccc2ncccc2c1

Boltz running on GPU 2
5.54
460/1000 | avg_top1: 12.050 | avg_top10: 11.836 | avg_top100: 11.286 | avg_sa: 3.469 | div: 0.819
{'avg_top1': 12.05, 'avg_top10': 11.835999999999999, 'avg_top100': 11.286100000000003, 'auc_top1': 5.45995, 'auc_top10': 5.333799999999997, 'auc_top100': 5.004005809523809, 'avg_sa': 3.4688279167865153, 'diversity_top100': 0.8192410484389265, 'n_oracle': 460}
CC(=O)NN=C(C)c1cnc2nnn(Cc3cc4cccnc4cc3C(C)=NF)c2n1

Boltz running on GPU 2
8.76
COCNc1nc(Nc2ccc3c(c2)C(C)CN(C(C)=O)CC3)ncc1Cl

Boltz running on GPU 2
10.01
[(12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15350>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b350>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4db30>), (11.73, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa270>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c0b0>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc80>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b057b0>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc820>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7740>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b050b0>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcdd0>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b4a0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa510>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b153c0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa040>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bcf0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a4a0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bba0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a5f0>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c740>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ac80>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ba0>), (11.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dcf0>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c890>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b580>), (11.11, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c2e0>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05200>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcb30>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c190>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c350>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc660>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a6d0>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c200>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05660>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc190>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15eb0>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a040>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05510>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c2e0>), (11.04, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b3c0>), (11.04, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7f90>), (11.03, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b040>), (11.01, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15430>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cd60>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c190>), (10.98, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bacc80>), (10.96, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b172e0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b053c0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c510>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c5f0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc270>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b900>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa430>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12e40>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05580>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dba0>), (10.93, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc7b0>), (10.92, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcba0>), (10.92, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b055f0>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05e40>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cba0>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc900>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7c10>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc9e0>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c270>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bac430>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c75f0>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9add0>), (10.86, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b740>), (10.84, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ceb0>), (10.84, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b820>), (10.82, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17580>), (10.81, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a350>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ac0>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c80>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05dd0>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17900>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15890>), (10.79, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b430>)]
[0.008946203988293952, 0.008834840453170885, 0.008819991981821143, 0.0088051435104714, 0.008768022332097045, 0.008760598096422174, 0.008753173860747301, 0.008753173860747301, 0.008716052682372947, 0.008716052682372947, 0.008708628446698076, 0.008701204211023205, 0.008693779975348334, 0.008693779975348334, 0.008693779975348334, 0.008686355739673461, 0.00867893150399859, 0.00867893150399859, 0.008664083032648848, 0.008664083032648848, 0.008656658796973977, 0.008589840675900138, 0.008574992204550396, 0.008552719497525781, 0.00853787102617604, 0.008493325612126812, 0.00847847714077707, 0.00847847714077707, 0.00847847714077707, 0.00847847714077707, 0.00847847714077707, 0.0084710529051022, 0.008463628669427329, 0.008456204433752458, 0.008456204433752458, 0.008448780198077587, 0.008441355962402714, 0.008433931726727843, 0.008419083255378101, 0.00841165901970323, 0.00840423478402836, 0.008396810548353489, 0.008389386312678618, 0.008381962077003745, 0.008374537841328874, 0.008374537841328874, 0.008329992427279647, 0.008329992427279647, 0.008322568191604776, 0.008315143955929905, 0.008315143955929905, 0.008315143955929905, 0.008315143955929905, 0.008307719720255034, 0.008307719720255034, 0.008307719720255034, 0.008307719720255034, 0.008307719720255034, 0.008300295484580163, 0.008300295484580163, 0.008300295484580163, 0.008292871248905292, 0.008285447013230422, 0.008255750070530936, 0.008255750070530936, 0.008255750070530936, 0.008248325834856065, 0.008240901599181194, 0.008240901599181194, 0.008233477363506323, 0.008233477363506323, 0.008233477363506323, 0.008233477363506323, 0.008233477363506323, 0.00821862889215658, 0.00821862889215658, 0.00821862889215658, 0.00821862889215658, 0.008203780420806838, 0.008203780420806838, 0.008196356185131967, 0.008196356185131967, 0.008188931949457096, 0.008174083478107353, 0.008159235006757611, 0.008159235006757611, 0.00815181077108274, 0.008136962299732998, 0.008129538064058127, 0.008129538064058127, 0.008129538064058127, 0.008129538064058127, 0.008129538064058127, 0.008129538064058127, 0.008122113828383255, 0.008122113828383255, 0.008122113828383255, 0.008114689592708384, 0.008107265357033513, 0.008107265357033513, 0.008092416885683771, 0.008092416885683771, 0.008092416885683771, 0.008092416885683771, 0.0080849926500089, 0.0080849926500089, 0.0080849926500089, 0.00807756841433403, 0.00807756841433403, 0.008062719942984286, 0.008047871471634544, 0.008047871471634544, 0.008033023000284802, 0.008025598764609931, 0.00801817452893506, 0.00801817452893506, 0.00801817452893506, 0.00801817452893506, 0.00801817452893506, 0.008010750293260187]
[(11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ba0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa040>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c200>), (10.98, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bacc80>), (10.86, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b740>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcb30>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c75f0>), (10.79, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b430>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc190>), (10.98, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bacc80>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15eb0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (10.82, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17580>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c2e0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c190>), (11.11, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c2e0>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15eb0>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (10.96, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b172e0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a5f0>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa430>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b580>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc9e0>), (11.04, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7f90>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc80>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15eb0>), (11.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dcf0>), (10.96, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b172e0>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b580>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15890>), (10.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17900>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12e40>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc270>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05e40>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (10.84, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b820>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b4a0>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cd60>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc660>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.04, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7f90>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c75f0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (11.73, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa270>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa510>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc190>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b057b0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (11.11, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c2e0>), (10.79, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b430>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa510>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05e40>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc820>), (10.82, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17580>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc9e0>), (11.11, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c2e0>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05e40>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b4a0>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4db30>), (10.84, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b820>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc9e0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b057b0>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc9e0>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9add0>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcb30>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (10.86, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b740>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05660>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc660>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa040>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc80>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05200>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05510>), (11.03, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b040>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>)]
Bin size: 100
===== for SMILES O=C1NCCCCN2C=C(C=N2)C2=CN=C3C=CC(=CC3=C2)CCN2N=C(C=CC2=O)C2=CC=C1C(C(F)(F)F)=C2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][N][=C][C][=C][C][=Branch1][Branch2][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][=C][Ring2][Ring2][C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][Ring2][Ring1][C][=C][Ring2][Ring1][=Branch1]
generated smiles O=C(O)C1=C2C=CC3=C1C=CC4=CC5=CC=C(N(C)C)C=C5N=C4C3=C2
added!
adding editted molecule!!!
===== for SMILES CN1C=C(CN2C=C(C(=O)NC3=C(F)C=C(C4=CNC5=NC=NC(N)=C45)C(F)=C3)C(=O)C(C3=CC=C(F)C=C3)=C2)C=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=C][Branch2][=Branch1][Ring2][C][N][C][=C][Branch2][Ring2][#Branch1][C][=Branch1][C][=O][N][C][=C][Branch1][C][F][C][=C][Branch1][P][C][=C][N][C][=N][C][=N][C][Branch1][C][N][=C][Ring1][#Branch2][Ring1][#Branch1][C][Branch1][C][F][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][=C][Ring2][Ring2][Ring1][C][=N][Ring2][Ring2][=Branch2]<eom>
Output: 
output selfies [N][C][=C][C][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][Ring1][=N][C][=C][Ring2][Ring1][=Branch1][F]
generated smiles NC1=CC=C(C2=CC=C3C(=C2)C(F)(F)C4=CC(F)=CC=C43)C=C1F
added!
adding editted molecule!!!
===== for SMILES CCN1CC2=C(C=CC(F)=C2C#N)O[C@@H](C2=CC=CS2)CNC(=O)C2=C3N=C1C=CN3N=C2N =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][N][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][#N][O][C@@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][C][N][C][=Branch1][C][=O][C][=C][N][=C][Ring2][Ring1][#Branch2][C][=C][N][Ring1][=Branch1][N][=C][Ring1][=Branch2][N]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring2][=Branch1][N][C][=Branch1][C][=O][N][C][C][C][C@@H1][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][C][C][Ring2][Ring1][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][S][C]
generated smiles C1COC(=O)C2=CC=CC(NC(=O)NCCC[C@@H1]1NC3=CC=C(C(F)(F)F)C=C3CC)=C2C=CC
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=C][N][=C][Branch1][#Branch2][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=N][=C][Ring1][P][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][F]
generated smiles C12C=CC(F)=C(C3=CC=C4C=CN=C(NC5=CC=CC=C5)C4=C3C=C1)C=C2C6=CC=CC=C6F
added!
adding editted molecule!!!
===== for SMILES CC(=NF)C1=NN2C(CC3=C(F)C=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Ring1][=N][F][C][=N][N][C][Branch2][Ring1][Ring2][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][=C][N][=C][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch1][Ring1][C][#N][C][Ring1][Branch2][=N][Ring1][P]
generated smiles CC1=CC(F)=CC(=C1)C=NC(F)=C2C=CC=C(C#N)C2=N
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=NN(CCC3=CC=C4N=CC(C5=CN(CCO)N=C5)=CC4=C3)C(=O)C=C2)C=C1C(F)(F)F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][#C][C][=N][N][Branch2][Ring1][S][C][C][C][=C][C][=C][N][=C][C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][=C][C][Ring1][=C][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][P][C][Branch1][C][F][Branch1][C][F][F]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][C][=C][Branch2][Ring1][P][N][C][=Branch1][C][=O][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2][C][=C][Ring1][S][Ring2][Ring1][#Branch1][=C][C][=C][Ring2][Ring1][=N][Ring2][Ring1][P]
generated smiles CC(C)(C)C1=CC=CC2(C=CC=CN=CC3=CNC(=O)NC=CC=C3C=CC=CC(C(F)(F)F)=C)C=C21
added!
adding editted molecule!!!
===== for SMILES CC(N=O)C1=NN2C(=NN=C2CC2=C(F)C=C3N=CC=CC3=C2F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch1][Ring1][N][=O][C][=N][N][C][=Branch2][Ring1][=Branch2][=N][N][=C][Ring1][Branch1][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch2][Ring2][C][C][=C][C][=C][C][Branch2][Ring1][=Branch1][N][C][=Branch1][C][=O][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][=C][Ring2][Ring1][Ring1][=C][C][=C][Ring2][Ring1][#Branch2][F]
generated smiles C1C(C)(C2)C=NC(C=CC=CC1(NC(=O)C3=NC4=CC=CC=C4C=C3F)C)C=C2F
added!
adding editted molecule!!!
===== for SMILES N#CC1=C(F)C=CC2=C1CN(CCCO)C1=NC3=C(C(=O)NC[C@H](C4=CC=CS4)O2)C(N)=NN3C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][#C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][C][N][Branch1][Branch1][C][C][C][O][C][=N][C][=C][Branch2][Ring1][Branch1][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][Ring2][Ring1][#Branch1][C][Branch1][C][N][=N][N][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][N][C][=N][C][=C][C][Branch2][Ring1][#Branch2][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2][Cl][=C][C][=C][Ring2][Ring1][#Branch1][N][Ring2][Ring1][#Branch2][C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1]
generated smiles CCOC(=O)NC1=NC=CC(OC2=CC=CC=C2C3=CC=C(F)C(F)=C3Cl)C=C1NCC4=CC=C(F)C=C4
added!
adding editted molecule!!!
===== for SMILES NC(=O)C1=CC=C(C2=CN=C3N=NN(C(F)C4=C(F)C5=CC(F)=CN=C5C=C4F)C3=N2)C=C1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][N][C][=C][N][=C][N][=N][N][Branch2][Ring1][#Branch2][C][Branch1][C][F][C][=C][Branch1][C][F][C][=C][C][Branch1][C][F][=C][N][=C][Ring1][#Branch1][C][=C][Ring1][N][F][C][Ring2][Ring1][Ring2][=N][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][=C][F]<eom>
Output: 
output selfies [N][C][=Branch1][C][=O][C][=C][C][Branch1][C][F][=C][C][Branch2][Ring2][=Branch1][N][C][=N][C][=C][C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][=N][C][=C][N][=C][Branch1][C][F][C][=C][Ring2][Ring1][C][Ring1][#Branch1][=C][Ring2][Ring1][O][F][=C][Ring2][Ring1][P]
generated smiles N1C(=O)C=CC(F)=CC1NC=NC=CC(C2=CC=CC=C2)=NC3=CN=C(F)C=C3
added!
adding editted molecule!!!
===== for SMILES COC1=CC2=CC([C@H](C)N=C(C)C3=CN=C4N=NN(CC5=CC6=CC=CN=C6C=C5F)C4=N3)=CC=C2N=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=C][C][Branch2][Ring2][#Branch2][C@H1][Branch1][C][C][N][=C][Branch1][C][C][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1][=C][C][=C][Ring2][Ring1][S][N][=C][Ring2][Ring2][Ring2]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][N][=C][Branch2][Ring1][N][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][=C][Ring1][S][C][Ring2][Ring1][#Branch1][=C][Ring2][Ring1][O][=C][Ring2][Ring1][S]
generated smiles C1OC=CC=CC1C=CC2=CN=C3N=C(NC=CC4=C(C=CC5=CC=C6N=CC=CC6=C5)C=C4)C3=C2C
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=CC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=C][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Branch1][=Branch1][=C][C][=C][C][=C][Branch2][Ring2][=Branch1][N][C][=C][C][=C][Branch2][Ring1][Branch2][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][N][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][#C][C][=C][Ring2][Ring1][Branch1][C][=C][Ring2][Ring1][=N][C][=C][Ring2][Ring2][C][C][N][Ring2][Ring2][=Branch1]
generated smiles CC1=CC(F)=CC(=C1)C=NC=NC(=CC=CC=C2NC=CC=C(C3=CC=CC(F)=C3NC4=CC=CC=C4)C2C=C)CN
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Ring2][S][=C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][N][=C][Ring1][O][C][=C][C][=C][Branch1][S][N][C][C][N][Branch1][=Branch1][C][C][C][Ring1][Ring1][C][C][Ring1][=Branch2][C][=C][Ring1][#C][C][=C][Ring2][Ring1][P][C][=C][Ring2][Ring2][=Branch1][C]
generated smiles CC1=CC(F)=CC(=C12)C=NC=NC(=CC3=C(F)C=CC=C3N=CC4=CC=C(N5CCN(C6CC6)CC5)C=C4C=C2C)CC
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=CN3C(SC4=CC=C5N=CC6=C(OCC(=O)N6C)C5=C4)=NN=C3C(F)=C2)S1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][P][C][=C][N][C][Branch2][Ring1][N][S][C][=C][C][=C][N][=C][C][=C][Branch1][O][O][C][C][=Branch1][C][=O][N][Ring1][#Branch1][C][C][Ring1][N][=C][Ring1][S][=N][N][=C][Ring2][Ring1][=Branch1][C][Branch1][C][F][=C][Ring2][Ring1][O][S][Ring2][Ring1][S]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][=Branch1][C][=O][N][C][=N][C][=C][C][=C][Branch1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][C][N][=N][NH1][C][Ring1][=Branch2][=O][C][=C][Ring1][P][Ring2][Ring1][Branch1].[N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][#Branch1][=Branch1][C][=C][C][=C][C][=Branch2][=Branch1][=Branch1][=C][N][=C][Branch2][Branch1][O][C][=C][C][=C][Branch2][Ring2][P][N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring1][#C][C][=C][N][=C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][=C][C][=C][C][=C][Ring1][P][Ring1][=Branch1][C][=C][Ring2][Ring1][#Branch1][C][=C][Ring2][Ring1][S][C][=C][Ring2][Ring2][=Branch1][C][=C][Ring2][Ring2][=N][=C][Ring2][Branch1][Ring1]
generated smiles CC(C)C(=O)N1C=NC=C2C=C(C3=CC4=CC=C3CN=N[NH1]C4)OC=C21.NC(=O)C=CC=C5CC=CC=C6C(=CN=C(C=CC=C(NC(=O)C=CC=CC(C7=CN=C(C8=CC=C(F)C=C8)C9=CC=CC=C79)C=C)C)C6C)C5=C
added!
adding editted molecule!!!
===== for SMILES CC(=O)N1CCC2=CC=C(NC3=NC=C(Cl)C(NC4=CC=CC=C4C(=O)NN)=N3)C=C2C(C)C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][N][C][C][C][=C][C][=C][Branch2][Ring1][#C][N][C][=N][C][=C][Branch1][C][Cl][C][Branch1][S][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][N][N][=N][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch2][C][Branch1][C][C][C][Ring2][Ring1][#C]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][C][=C][Branch1][#C][N][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=Branch2][N][=C][N][Branch1][=N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1][Cl][C][=Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1]
generated smiles CC(C1)CC2=C(NC3=NC4=CC=CC=C4C3)N=CN(C5=CC=C(Cl)C=C5Cl)C2C(=O)N1C6=CC=C(Cl)C=C6
added!
adding editted molecule!!!
===== for SMILES O=C(NC1=CC=C(OC2=CC=NC(NC(=O)N3CCC3)=C2)C(F)=C1)C1=CN(CC2CC2)C(=O)N(C2=CC=C(F)C=C2)C1=O =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][Branch2][Ring2][#Branch1][N][C][=C][C][=C][Branch2][Ring1][#Branch1][O][C][=C][C][=N][C][Branch1][N][N][C][=Branch1][C][=O][N][C][C][C][Ring1][Ring2][=C][Ring1][=N][C][Branch1][C][F][=C][Ring2][Ring1][Branch1][C][=C][N][Branch1][#Branch1][C][C][C][C][Ring1][Ring1][C][=Branch1][C][=O][N][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][Ring2][Ring1][C][=O]<eom>
Output: 
output selfies [C][C][C][C][=N][C][Branch2][Ring2][=Branch1][C][=C][C][=C][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][Cl][C][=C][Ring2][Ring1][C][=C][C][=C][Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][C][C][N][C][C][C][C][C][Ring1][=Branch1]
generated smiles C1CC2C=NC3(C=CC=C(NC4=CC=C(C(F)(F)F)C=C4Cl)C3=CC=C2)C(=O)N1CCCN5CCCCC5
added!
adding editted molecule!!!
===== for SMILES C[C@@H](c1ccc2ncc(-c3cnn(C)c3)cc2c1)c1nnc2c(F)cc(-c3cn(C)cn3)cn12 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C@@H1][Branch2][Ring1][O][C][=C][C][=C][N][=C][C][Branch1][O][C][C][=N][N][Branch1][C][C][C][=Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][S][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][N][Branch1][C][C][C][=N][Ring1][=Branch1][=C][N][Ring1][S][Ring1][=N]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch2][Ring2][C][C][=C][C][=C][C][Branch2][Ring1][Branch1][N][C][=N][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][Cl][=C][Ring2][Ring1][C][=C][C][=C][C][=C][C][=Ring2][Ring1][#Branch2][Ring1][=Branch1]
generated smiles CC(C)(C)C=NC(C1=CC=CC(NC2=NC=C(C(F)(F)F)C=C2Cl)=C1C3)C=CC=CC3
added!
adding editted molecule!!!
===== for SMILES CC(=NN)C1=CN=C2N=NN(CC3=CC4=CC=CN=C4C=C3F)C2=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Ring1][=N][N][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][Branch1][N][C][=N][C][=C][C][=C][Branch1][C][F][C][=C][C][Ring1][#Branch1][=N][Ring1][O][C][=C][Ring2][Ring1][Ring1].[C][C][=C][C][=C][Branch2][Ring1][#Branch1][C][=C][C][=N][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][N][=C][Ring1][O][C][=C][Ring2][Ring1][Ring2]
generated smiles C1C=CC(F)=C1NC2=NC=C3C=C(F)C=CC3=N2.C4C=CC=CC=CC5=NC6=CC(F)=CC=C6N=C5C=C4
added!
adding editted molecule!!!
===== for SMILES CC(=O)C(F)(F)C1=CC2=CC=C1C(=O)NCCCCN1C=C(C=N1)C1=CN=C3C=CC(=CC3=C1)CCN1N=C2C=CC1=O =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][C][Branch1][C][F][Branch1][C][F][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][N][=C][C][=C][C][=Branch1][Branch2][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][C][N][N][=C][Ring2][Ring1][#C][C][=C][C][Ring1][=Branch1][=O]<eom>
Output: 
output selfies [C][C][=Branch1][C][=O][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][=C][Ring1][P][N].[O][=C][Branch1][C][O][C][Branch1][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2]
generated smiles CC(=O)C1=CC2=CC3=CC=C(N(C)C)C=C3N=C2C=C1N.O=C(O)C(O)C(=O)C4=CC=C5C=CC=CC5=C4
added!
adding editted molecule!!!
===== for SMILES CC(=NNC(N)=O)C1=CN=C2N=NN(CC3=CC4=CC=CN=C4C=C3F)C2=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Branch2][=N][N][C][Branch1][C][N][=O][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch1][=C][N][C][=C][C][=C][Branch1][C][N][C][=C][Ring1][#Branch1][F][=N][C][=C][Ring1][#C][C][=C][C][=C][N][=C][N][=C][Branch1][C][N][N][=C][Ring1][#Branch1][Ring1][#Branch2]
generated smiles CC(C)(C)C1=NC(NC2=CC=C(N)C=C2F)=NC=C1C=C3C=CN=CN=C(N)N=C3
added!
adding editted molecule!!!
===== for SMILES CC(=O)C1=C(F)C=CC2=C1CN(CCCO)C1=NC3=C(C(=O)NC[C@H](C4=CC=CS4)O2)C(N)=NN3C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][C][N][Branch1][Branch1][C][C][C][O][C][=N][C][=C][Branch2][Ring1][Branch1][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][Ring2][Ring1][#Branch1][C][Branch1][C][N][=N][N][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring2][S][N][C][=Branch1][C][=O][N][Branch1][=N][C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][C][C][N][Branch2][Ring1][Branch1][C][C][C][N][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][C][C][Ring1][N][C][C][Ring2][Ring1][C][=C][Ring2][Ring2][C]
generated smiles C1C(C)C(=O)C=CC2=CC1(NC(=O)N(CC3=CC=C(F)C=C3)CCCNC4CCN(C5=CC=CC=C5)CC4CC)C2
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C2=CC(F)=CN=C2C=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][=Branch1][C][=C][Branch1][C][F][C][=C][C][Branch1][C][F][=C][N][=C][Ring1][#Branch1][C][=C][Ring1][N][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [N][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch2][Ring1][=Branch1][N][=C][C][=C][C][=C][Branch1][C][F][C][Branch1][=Branch1][C][=Branch1][C][=O][O][=C][Ring1][#Branch2][F][C][=C][Ring2][Ring1][Ring1][Ring2][Ring1][Branch2]
generated smiles NC1=NC(F)=CC2=CC=C(N=CC3=CC=C(F)C(C(=O)O)=C3F)C=C21
added!
adding editted molecule!!!
===== for SMILES O=C1C=CC(N2C=CC3=CC=C(F)C=C32)=NN1CCOC1=CC=NC2=CC(OCCCN3CCOCC3)=CC=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][C][=C][C][Branch1][P][N][C][=C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][Ring1][#Branch2][=N][N][Ring1][S][C][C][O][C][=C][C][=N][C][=C][C][Branch1][=N][O][C][C][C][N][C][C][O][C][C][Ring1][=Branch1][=C][C][=C][Ring1][S][Ring2][Ring1][Ring2]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][Branch2][Ring2][N][N][C][=C][C][=C][Branch2][Ring1][S][N][C][=Branch1][C][=O][C][=C][C][=C][Branch1][P][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2][F][C][=C][Ring1][S][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][#C][N][C][C][C][N][C][C][O][C][C][Ring1][=Branch1]
generated smiles COC=CC=C(NC=CC=C(NC(=O)C=CC=C(C1=CC=C(F)C(F)=C1F)CC)C)C=CNCCCN2CCOCC2
added!
adding editted molecule!!!
===== for SMILES C/C(=N\OCCCO)C1=NN2C(=NN=C2CC2=C(F)C=C3N=CC=CC3=C2F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][/C][=Branch1][#Branch1][=N][\O][C][C][C][O][C][=N][N][C][=Branch2][Ring1][=Branch2][=N][N][=C][Ring1][Branch1][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][C][=C][Ring1][Branch2][C][=C][C][=C][N][=C][Branch1][#Branch2][N][C][C][C][O][C][C][Ring1][=Branch1][N][=C][Ring1][=N][N][=C][Ring1][P][N].[H+1]
generated smiles CC1=C(F)C(F)=CC=C1C2=CC3=CN=C(NC4CCOCC4)N=C3N=C2N.[H+1]
added!
adding editted molecule!!!
===== for SMILES COC1=CC=C2C(=C1)N=CC=C2OCC1=NN=C2C(F)=CC(C3=CC(C)=CS3)=CN12 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][N][=C][C][=C][Ring1][#Branch1][O][C][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][C][Branch1][C][C][=C][S][Ring1][=Branch1][=C][N][Ring1][S][Ring1][=N]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][Branch2][Ring1][=N][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1][Ring1][S][=C][C][Branch1][Ring1][O][C][=C][Ring2][Ring1][=Branch2][O][C]
generated smiles C1OC=CC=CC2(C3=CC=CC(F)=C3NC4=CC=C(Cl)C=C42)C=C1OC
added!
adding editted molecule!!!
===== for SMILES CC(=NNC(N)=O)C1=NN2C(C(O)C3=C(F)C=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Branch2][=N][N][C][Branch1][C][N][=O][C][=N][N][C][Branch2][Ring1][#Branch1][C][Branch1][C][O][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][=C][N][=C][Ring2][Ring1][Ring1][C][=C][Ring2][Ring1][#Branch1]<eom>
Output: 
output selfies [C][C][O][C][=N][C][Branch1][C][F][=C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][N][N][C][=N][C][=C][C][Branch1][P][C][=C][N][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][Ring1][=C][=C][Ring1][P][C][=Branch1][C][=O][NH1][Ring2][Ring1][#Branch2]
generated smiles CCOC=NC(F)=C1C=CC(F)=C(N2C=NC=CC(C3=CN=C4C=CC=CC4=C3)=C2)C(=O)[NH1]1
added!
adding editted molecule!!!
===== for SMILES O=C1OCC2=NC(C3=CC=C(F)C=C3F)C(OC3=CC=NC4=C3C(C3=CC=CN=C3)=CN4)=C12 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][O][C][C][=N][C][Branch1][=N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][F][C][Branch2][Ring1][=Branch2][O][C][=C][C][=N][C][=C][Ring1][=Branch1][C][Branch1][=Branch2][C][=C][C][=C][N][=C][Ring1][=Branch1][=C][N][Ring1][O][=C][Ring2][Ring1][S][Ring2][Ring1][=N]<eom>
Output: 
output selfies [C][O][C][=C][C][=N][C][=C][C][Branch2][Ring1][P][C][=C][C][=C][Branch2][Ring1][Ring2][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][C][=C][Ring1][P][=C][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][N][O][C]
generated smiles COC=C1C=NC=CC(C2=CC=C(NC3=CC=C(C(F)(F)F)C=C3)C=C2C1)C=COC
added!
adding editted molecule!!!
===== for SMILES NC1=NC=NC2=C1C(C1=CC(F)=C(NC(=O)C3=CN(CC4CCOCC4)C=C(C4=CC=C(F)C=C4)C3=O)C=C1F)=CN2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=N][C][=N][C][=C][Ring1][=Branch1][C][Branch2][Branch1][Branch2][C][=C][C][Branch1][C][F][=C][Branch2][Ring2][Branch2][N][C][=Branch1][C][=O][C][=C][N][Branch1][#Branch2][C][C][C][C][O][C][C][Ring1][=Branch1][C][=C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][Ring2][Ring1][Ring2][=O][C][=C][Ring2][Ring1][#C][F][=C][N][Ring2][Ring2][Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][=N][N][C][=N][C][=C][C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][=C][C][=C][Ring1][N][C][=C][Ring2][Ring1][C][F][C][=C][Ring2][Ring1][#Branch2][C][Branch1][C][N][=O]
generated smiles C1C=CC(F)=C(NC=NC2=CC(C3=CC=CC=C3)=CC=C2C=CF)C1C(N)=O
added!
adding editted molecule!!!
===== for SMILES C/C(=N\OC(N)=O)C1=NN2C(CC3=C(F)C=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][/C][=Branch1][Branch2][=N][\O][C][Branch1][C][N][=O][C][=N][N][C][Branch2][Ring1][Ring2][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][=C][N][=C][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][O][C][=Branch1][C][=O][/N][=C][Branch1][C][/N][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2].[C][C][=C][C][=C][Branch2][Ring1][#Branch1][N][C][=Branch1][C][=O][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2][C][=C][Ring1][=N][C][=C][Ring2][Ring1][Ring2]
generated smiles CC(C)OC(=O)/N=C(/N)C1=CC=C(F)C(F)=C1.C2C=CC=C(N3C(=O)C4=CC=C(F)C(F)=C4C=C3)C=C2
added!
adding editted molecule!!!
===== for SMILES COc1cnc2ccc([C@H](C)c3nnc4c(F)cc(-c5cn(C)cn5)cn34)cc2c1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][N][=C][C][=C][C][Branch2][Ring1][P][C@H1][Branch1][C][C][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][N][Branch1][C][C][C][=N][Ring1][=Branch1][=C][N][Ring1][S][Ring1][=N][=C][C][Ring2][Ring1][Branch2][=C][Ring2][Ring1][N]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][=C][C][C][=Branch2][Ring1][#Branch2][=C][N][Branch1][=Branch1][C][C][C][Ring1][Ring1][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][P][C][Ring2][Ring1][Branch2]
generated smiles C1OC2=CC=CC(=C2)C(F)=CCC1=CN(C3CC3)C4=CC=CC=C4C5=CC=CC=C5
added!
adding editted molecule!!!
===== for SMILES COC1=CN=C2C=CC([C@H](C)C3=NN=C4C(F)=CC(C5=CN(C)C=N5)=CN43)=CC2=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][N][=C][C][=C][C][Branch2][Ring1][P][C@H1][Branch1][C][C][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][N][Branch1][C][C][C][=N][Ring1][=Branch1][=C][N][Ring1][=N][Ring1][S][=C][C][Ring2][Ring1][Branch2][=C][Ring2][Ring1][N]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][=C][C][C][=Branch2][Ring1][#Branch2][=C][N][Branch1][=Branch1][C][C][C][Ring1][Ring1][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][P][C][Ring2][Ring1][Branch2]
generated smiles C1OC2=CC=CC(=C2)C(F)=CCC1=CN(C3CC3)C4=CC=CC=C4C5=CC=CC=C5
added!
adding editted molecule!!!
fp_scores_to_top [0.1917808219178082, 0.28484848484848485, 0.046511627906976744, 0.20394736842105263, 0.21212121212121213, 0.24848484848484848, 0.11688311688311688, 0.13793103448275862, 0.20625, 0.07482993197278912, 0.33125, 0.2251655629139073, 0.12025316455696203, 0.06474820143884892, 0.15384615384615385, 0.1712707182320442, 0.24260355029585798, 0.1554054054054054, 0.02142857142857143, 0.15425531914893617, 0.2571428571428571, 0.31097560975609756, 0.21875, 0.1527777777777778, 0.21893491124260356, 0.24203821656050956, 0.21518987341772153, 0.1638418079096045, 0.2543352601156069, 0.09722222222222222, 0.06201550387596899, 0.24571428571428572, 0.13636363636363635, 0.1569767441860465, 0.16455696202531644, 0.9186991869918699, 0.11409395973154363, 0.1511627906976744, 0.014705882352941176, 0.28125, 0.16666666666666666, 0.2028985507246377, 0.12269938650306748, 0.15, 0.18471337579617833, 0.20238095238095238, 0.15436241610738255, 0.16470588235294117, 0.27976190476190477, 0.26875, 0.17058823529411765, 0.14193548387096774, 0.10810810810810811, 0.2388888888888889, 0.1702127659574468, 0.22289156626506024, 0.2737430167597765, 0.19767441860465115, 0.1259259259259259, 0.25, 0.1297709923664122, 0.11875, 0.07692307692307693, 0.16766467065868262, 0.27564102564102566, 0.1337579617834395, 0.13855421686746988, 0.1038961038961039, 0.21910112359550563, 0.29310344827586204, 0.19254658385093168, 0.23333333333333334, 0.2413793103448276, 0.1978021978021978, 0.1069182389937107, 0.1218274111675127, 0.16, 0.18324607329842932, 0.16091954022988506, 0.1875, 0.15458937198067632, 0.22959183673469388, 0.16382252559726962, 0.2074468085106383, 0.23369565217391305, 0.18604651162790697, 0.22459893048128343, 0.1989247311827957, 0.14772727272727273, 0.1691542288557214, 0.16875, 0.0871559633027523, 0.18072289156626506, 0.15568862275449102, 0.23837209302325582, 0.1907514450867052, 0.16470588235294117, 0.1891891891891892, 0.19767441860465115, 0.19767441860465115]
top 70 [35 10 21 69  1 39 48 64 56 49 20 28 59  5 31 16 25 72 53 94 84 71 81 11
 86 55 68 24 22 26  4 83  8  3 41 45 87 73 99 57 98 70  0 95 97 79 85 44
 77 92 15 50 54 89 90 63 40 47 96 34 27 82 78 76 33 93 17 80 46 19]
len offspring_mol 70
189
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
O=C1NCCCCn2cc(cn2)-c2cnc3ccc(cc3c2)CCn2nc(ccc2=O)-c2ccc1c(C(O)(F)F)c2

Boltz running on GPU 2
11.95
Cn1cc(-c2cnc3ccc(Sc4nnc5ccc(N6CCOCC6)cn45)cc3c2)cn1

Boltz running on GPU 1
10.29
CCN1CCC(n2cc(-c3cnc4ccc5ccc(NS(N)(=O)=O)cc5c(=O)c4c3)cn2)CC1

Boltz running on GPU 2
11.44
Cn1cc(-c2ccc3c(-c4ccnc5cc(OCCCN6CCOCC6)ccc45)ccnc3c2)cn1

Boltz running on GPU 1
9.29
N#Cc1cccc(-c2ccc(=O)n(Cc3cccc(-c4ncc5ncccc5n4)c3)n2)c1

Boltz running on GPU 2
8.75
COc1ccc(-c2cc(F)c3ncc(Cc4ccc5ncccc5c4)n3c2)cc1F

Boltz running on GPU 2
10.82
CN1C(=O)COc2c1cnc1ccc(Sc3cc(F)c4c(F)cc(-c5cnn(F)c5)cn34)cc21

Boltz running on GPU 2
9.7
c1cnc2ccc(Sc3ccc4ncc(N5CCOCC5)cc4c3)cc2c1

Boltz running on GPU 1
8.52
470/1000 | avg_top1: 12.050 | avg_top10: 11.857 | avg_top100: 11.302 | avg_sa: 3.482 | div: 0.820
{'avg_top1': 12.05, 'avg_top10': 11.857000000000001, 'avg_top100': 11.302200000000003, 'auc_top1': 5.58045, 'auc_top10': 5.452264999999998, 'auc_top100': 5.116947309523809, 'avg_sa': 3.482443638117463, 'diversity_top100': 0.8201327258370982, 'n_oracle': 470}
Fc1cc(-c2cccc(-c3ccc4ncccc4c3)c2)cn2c(Cc3ccc4ncccc4c3)cnc12

Boltz running on GPU 1
10.07
OCCn1cc(-c2cc(F)c3ncc(Cc4ccc5ncccc5c4)n3c2)cn1

Boltz running on GPU 2
10.48
CC(c1c(F)cc2ncc(-c3cnn(C)c3)cc2c1F)c1nnc2c(F)cc(-c3cnn(C)c3)cn12

Boltz running on GPU 2
11.64
CC1=CCC(c2ccc3c(c2)oc(=O)n3CCOc2cnc3ccc(-c4cnn(C)c4)cn23)=C1

Boltz running on GPU 2
10.36
Fc1cc(F)c2nnc(Sc3ccc4ncc(NC5=COCC5)cc4c3)n2c1

Boltz running on GPU 2
9.13
Fc1cc2ncccc2c(F)c1CSc1ccc2ncc(NC3=COCC3)cc2c1

Boltz running on GPU 1
10.63
CC(c1c(F)cc2ncc(-c3cnn(C)c3)cc2c1F)n1nnc2ncc(-c3cnn(C)c3)nc21

Boltz running on GPU 1
11.91
Cc1cc(F)c(NC(=O)c2cn(Cc3cnn(C)c3)cc(-c3ccc(F)cc3)c2=O)cc1F

Boltz running on GPU 2
9.12
Fc1ccnc2ccc(Sc3nnc4ccc(-c5cn[nH]c5)cn34)cc12

Boltz running on GPU 2
10.21
Already in buffer
Cc1csc(-c2ccc3c(c2)oc(=O)n3CCOc2ccnc3cc(C4=CCC(O)CC4)ccc23)c1

Boltz running on GPU 2
10.08
480/1000 | avg_top1: 12.050 | avg_top10: 11.874 | avg_top100: 11.320 | avg_sa: 3.481 | div: 0.817
{'avg_top1': 12.05, 'avg_top10': 11.873999999999999, 'avg_top100': 11.319800000000004, 'auc_top1': 5.70095, 'auc_top10': 5.570919999999997, 'auc_top100': 5.230057309523809, 'avg_sa': 3.480873894948388, 'diversity_top100': 0.8166900424478586, 'n_oracle': 480}
Already in buffer
Already in buffer
Already in buffer
Already in buffer
CC(N=O)c1ccc2nnc(-c3ccc4ncccc4c3)n2n1

Boltz running on GPU 2
8.5
Already in buffer
CC(=NN)c1ccsc1-c1ccc2nnc(Cc3ccc4ncccc4c3)n2n1

Boltz running on GPU 2
11.12
C(=NNc1ccc2ncccc2c1)c1cnc2nnn(Cc3ccc4ncccc4c3)c2n1

Boltz running on GPU 2
10.69
Cc1csc(-c2cnn3c(CC=C[C@@H](C)c4ccc5ncccc5c4)nnc3c2)c1

Boltz running on GPU 1
10.04
CC(N=O)c1ccc2nnc(Cc3c(-n4cnc5ncc(-c6cnn(C)c6)nc54)cc4ncccc4c3F)n2n1

Boltz running on GPU 2
10.91
CC1C=CCN(c2cnc3ccc(NCc4ccccn4)cc3c2)C1

Boltz running on GPU 2
9.9
CC1=CC=C(c2cnc3nnn([C@@H](C)c4ccc5ncccc5c4)c3n2)CC1

Boltz running on GPU 2
10.26
Already in buffer
c1csc(-c2cnc3nnn(Cc4ccc5ncccc5c4)c3n2)c1

Boltz running on GPU 2
11.31
Cc1cc(-c2cnn(CCO)c2)c(=O)n(-c2ccc(F)cc2)c1

Boltz running on GPU 2
8.15
N#Cc1cccc(-c2ccc(=O)n(CF)n2)c1

Boltz running on GPU 2
7.0
490/1000 | avg_top1: 12.050 | avg_top10: 11.874 | avg_top100: 11.326 | avg_sa: 3.469 | div: 0.817
{'avg_top1': 12.05, 'avg_top10': 11.873999999999999, 'avg_top100': 11.326100000000004, 'auc_top1': 5.82145, 'auc_top10': 5.689659999999997, 'auc_top100': 5.343286809523809, 'avg_sa': 3.4686382867732415, 'diversity_top100': 0.8172597855035338, 'n_oracle': 490}
COC1C=COc2c1cnc1ccc(Cc3c(F)cc4ncccc4c3F)cc21

Boltz running on GPU 2
10.42
Already in buffer
Already in buffer
Already in buffer
COc1cc2nccc(Oc3ccc(C(=O)N4CCN(C)CC4)cc3F)c2cc1OC

Boltz running on GPU 2
8.37
Already in buffer
CNS(=O)(=O)c1cnc2ccc(-c3cnn(C)c3)cn12

Boltz running on GPU 1
9.1
Already in buffer
Already in buffer
Already in buffer
Already in buffer
O=C(Nc1ccc(F)cc1)C1(c2cc(Cl)c3ncccc3c2)CC1

Boltz running on GPU 2
7.72
Already in buffer
Already in buffer
COc1cc2nccc(OC3=CC=C(F)C(C(=O)NCC4CCCCN4)C3F)c2cc1OC

Boltz running on GPU 2
8.87
CCN1Cc2c(ccc(F)c2C)O[C@@H](C)CNC(=O)c2c(N)nn3ccc1nc23

Boltz running on GPU 2
10.82
C/C(=N\OCCCC1=CCC=CS1)c1ccc2nnc(Cc3c(F)cc4ncccc4c3F)n2n1

Boltz running on GPU 1
10.65
CCC1CN(c2ccccc2)CCC1NCCCN(Cc1ccc(F)cc1)C(=O)NC12C=C(C=CC(=O)C(C)C1)C2

Boltz running on GPU 2
9.94
Already in buffer
C/C(=N\OCl)c1ccc2ncc(Cc3c(C)cc4ncccc4c3F)n2n1

Boltz running on GPU 2
9.1
Fc1cc(-c2cnn(F)c2)cn2c1cn2CC1CCOCC1

Boltz running on GPU 2
8.06
500/1000 | avg_top1: 12.050 | avg_top10: 11.874 | avg_top100: 11.326 | avg_sa: 3.469 | div: 0.817
{'avg_top1': 12.05, 'avg_top10': 11.873999999999999, 'avg_top100': 11.326100000000004, 'auc_top1': 5.941949999999999, 'auc_top10': 5.808399999999997, 'auc_top100': 5.456547809523809, 'avg_sa': 3.4686382867732415, 'diversity_top100': 0.8172597855035338, 'n_oracle': 500}
CC(=NNC(N)=O)C1=NN2C([C@@H](C)c3ccc4ncccc4c3)=CCC2C=C1

Boltz running on GPU 2
10.24
Already in buffer
C[C@@H](c1cc2cccnc2cc1F)n1cnc2ncc(O)nc21

Boltz running on GPU 1
8.62
Cc1c(OCC(O)CN2CCC(O)CC2)cn2ncnc(Oc3ccc(I)cc3F)c12

Boltz running on GPU 1
9.48
Already in buffer
O=C1C=CC(F)=CC(NC=NC=CC(=Nc2ccc(F)nc2)c2ccccc2)N1

Boltz running on GPU 1
7.69
Already in buffer
COc1cc2nccc(Oc3ccc(NC(=O)NC(N)=O)cc3F)c2cc1OC

Boltz running on GPU 2
8.71
Already in buffer
CN1CCC(Nc2cnc3cccnc3c2)CC1

Boltz running on GPU 1
6.29
Already in buffer
Cn1cc(-c2cc(F)c3nnc(SC#N)n3c2)cn1

Boltz running on GPU 2
8.1
CC(=O)NN=C(C)c1cnc2nnn(Cc3cc4c5c(cnc4cc3F)CCC(O)C5C#N)c2n1

Boltz running on GPU 2
9.34
[(12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (11.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c120>), (11.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15350>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b350>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4db30>), (11.73, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa270>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c0b0>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc80>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b057b0>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (11.64, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15dd0>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc820>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c3c0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7740>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b050b0>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcdd0>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc740>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b4a0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa510>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b153c0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa040>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bcf0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a4a0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bba0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a5f0>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c740>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ac80>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ba0>), (11.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dcf0>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c890>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b580>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65eb4f20>), (11.11, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c2e0>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05200>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcb30>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c190>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c350>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc660>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a6d0>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c200>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05660>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc190>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15eb0>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a040>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05510>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c2e0>), (11.04, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b3c0>), (11.04, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7f90>), (11.03, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b040>), (11.01, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15430>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cd60>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c190>), (10.98, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bacc80>), (10.96, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b172e0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b053c0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c510>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c5f0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc270>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b900>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa430>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12e40>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05580>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dba0>), (10.93, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc7b0>), (10.92, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcba0>), (10.92, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b055f0>), (10.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcf20>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05e40>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cba0>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc900>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7c10>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc9e0>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c270>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bac430>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c75f0>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9add0>), (10.86, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b740>), (10.84, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ceb0>), (10.84, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b820>), (10.82, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17580>)]
[0.008915227652737473, 0.008841242361014124, 0.008811648244324786, 0.008804249715152451, 0.008789452656807781, 0.00877465559846311, 0.008737662952601437, 0.008730264423429102, 0.008722865894256767, 0.008722865894256767, 0.008685873248395093, 0.008685873248395093, 0.008678474719222758, 0.008671076190050423, 0.008663677660878088, 0.008663677660878088, 0.008663677660878088, 0.008656279131705753, 0.008648880602533418, 0.008648880602533418, 0.008634083544188749, 0.008634083544188749, 0.008626685015016414, 0.008611887956671746, 0.008560098252465401, 0.008545301194120732, 0.008523105606603727, 0.008508308548259057, 0.008463917373225048, 0.008463917373225048, 0.008449120314880378, 0.008449120314880378, 0.008449120314880378, 0.008449120314880378, 0.008449120314880378, 0.008441721785708043, 0.008434323256535708, 0.008426924727363373, 0.008426924727363373, 0.008419526198191038, 0.008412127669018703, 0.008404729139846369, 0.008389932081501699, 0.008382533552329364, 0.008375135023157029, 0.008367736493984696, 0.008367736493984696, 0.008360337964812361, 0.008352939435640024, 0.00834554090646769, 0.00834554090646769, 0.008301149731433682, 0.008301149731433682, 0.008293751202261347, 0.00828635267308901, 0.00828635267308901, 0.00828635267308901, 0.00828635267308901, 0.008278954143916675, 0.008278954143916675, 0.008278954143916675, 0.008278954143916675, 0.008278954143916675, 0.008271555614744342, 0.008271555614744342, 0.008271555614744342, 0.008264157085572007, 0.008256758556399672, 0.008227164439710333, 0.008227164439710333, 0.008227164439710333, 0.008227164439710333, 0.008219765910537998, 0.008212367381365663, 0.008212367381365663, 0.008204968852193328, 0.008204968852193328, 0.008204968852193328, 0.008204968852193328, 0.008204968852193328, 0.008190171793848658, 0.008190171793848658, 0.008190171793848658, 0.008190171793848658, 0.008175374735503988, 0.008175374735503988, 0.008167976206331654, 0.008167976206331654, 0.008160577677159319, 0.008145780618814649, 0.008130983560469979, 0.008130983560469979, 0.008123585031297646, 0.008108787972952976, 0.00810138944378064, 0.00810138944378064, 0.00810138944378064, 0.00810138944378064, 0.00810138944378064, 0.00810138944378064, 0.008093990914608305, 0.008093990914608305, 0.008093990914608305, 0.00808659238543597, 0.008079193856263635, 0.008079193856263635, 0.008071795327091302, 0.008064396797918967, 0.008064396797918967, 0.008064396797918967, 0.008064396797918967, 0.008056998268746632, 0.008056998268746632, 0.008056998268746632, 0.008049599739574297, 0.008049599739574297, 0.008034802681229625, 0.008020005622884957, 0.008020005622884957, 0.008005208564540288]
[(10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c270>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bac430>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b580>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ac80>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05200>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (10.92, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b055f0>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc660>), (10.93, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc7b0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c3c0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b153c0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b057b0>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05660>), (10.98, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bacc80>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05510>), (11.04, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b3c0>), (11.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dcf0>), (11.03, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b040>), (10.92, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b055f0>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c190>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c270>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ac80>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a6d0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (11.01, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15430>), (10.82, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17580>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc9e0>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c0b0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b900>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c190>), (10.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcf20>), (11.03, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b040>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bac430>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b580>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (10.93, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc7b0>), (11.01, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15430>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa430>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a5f0>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12e40>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7c10>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (10.96, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b172e0>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc9e0>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bac430>), (10.89, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c270>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05200>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a5f0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4db30>), (10.92, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcba0>), (11.04, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b3c0>), (10.92, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcba0>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (11.11, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c2e0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (10.84, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ceb0>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc270>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b4a0>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cd60>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a6d0>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c190>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b050b0>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc80>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a5f0>), (10.84, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b820>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c190>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a5f0>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (10.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05e40>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c190>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b053c0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa430>), (11.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc740>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ac80>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc80>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c200>), (10.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9add0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (11.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c120>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a040>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b053c0>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b4a0>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa430>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b053c0>)]
Bin size: 100
===== for SMILES O=C1NCCCCN2C=C(C=N2)C2=CN=C3C=CC(=CC3=C2)CCN2N=C(C=CC2=O)C2=CC=C1C(C(F)(F)F)=C2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][N][=C][C][=C][C][=Branch1][Branch2][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][=C][Ring2][Ring2][C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][Ring2][Ring1][C][=C][Ring2][Ring1][=Branch1]
generated smiles O=C(O)C1=C2C=CC3=C1C=CC4=CC5=CC=C(N(C)C)C=C5N=C4C3=C2
added!
adding editted molecule!!!
===== for SMILES O=C1NCCCCN2C=C(C=N2)C2=CC3=CC(=CC=C3N=C2)CCN2N=C(C=CC2=O)C2=CC(C(O)(F)F)=C1C=C2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][C][=C][C][=Branch1][#Branch2][=C][C][=C][Ring1][=Branch1][N][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][Branch1][=Branch2][C][Branch1][C][O][Branch1][C][F][F][=C][Ring2][Ring2][=Branch1][C][=C][Ring1][#Branch2]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][Ring2][Ring1][C][=N][Ring2][Ring1][=Branch1]
generated smiles O=C(O)C1=C2C=CC3=C1C=CC4=CC5=CC=C(N(C)C)C=C5N=C4C3=N2
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CN(C)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][N][=C][Ring1][N][Ring1][#C]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Ring2][S][=C][C][=C][C][Branch2][Ring1][N][N][=N][C][=C][C][=C][Branch1][P][C][=C][N][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][Ring1][=C][C][=C][Ring1][S][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring2][Ring2][=Branch1]
generated smiles CC1=CC(F)=CC(=C1)C=NC=NC(=CC=CC(N=NC2=CC=C(C3=CN=C4C=CC=CC4=C32)C=C)=CC=CC5=CC)CC=C5
added!
adding editted molecule!!!
===== for SMILES CN1C=C(CN2C=C(C(=O)NC3=C(F)C=C(C4=CNC5=NC=NC(N)=C45)C(F)=C3)C(=O)C(C3=CC=C(F)C=C3)=C2)C=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=C][Branch2][=Branch1][Ring2][C][N][C][=C][Branch2][Ring2][#Branch1][C][=Branch1][C][=O][N][C][=C][Branch1][C][F][C][=C][Branch1][P][C][=C][N][C][=N][C][=N][C][Branch1][C][N][=C][Ring1][#Branch2][Ring1][#Branch1][C][Branch1][C][F][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][=C][Ring2][Ring2][Ring1][C][=N][Ring2][Ring2][=Branch2]<eom>
Output: 
output selfies [N][C][=C][C][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][Ring1][=N][C][=C][Ring2][Ring1][=Branch1][F]
generated smiles NC1=CC=C(C2=CC=C3C(=C2)C(F)(F)C4=CC(F)=CC=C43)C=C1F
added!
adding editted molecule!!!
===== for SMILES CCN1CC2=C(C=CC(F)=C2C#N)O[C@@H](C2=CC=CS2)CNC(=O)C2=C3N=C1C=CN3N=C2N =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][N][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][#N][O][C@@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][C][N][C][=Branch1][C][=O][C][=C][N][=C][Ring2][Ring1][#Branch2][C][=C][N][Ring1][=Branch1][N][=C][Ring1][=Branch2][N]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring2][=Branch1][N][C][=Branch1][C][=O][N][C][C][C][C@@H1][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][C][C][Ring2][Ring1][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][S][C]
generated smiles C1COC(=O)C2=CC=CC(NC(=O)NCCC[C@@H1]1NC3=CC=C(C(F)(F)F)C=C3CC)=C2C=CC
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=C][N][=C][Branch1][#Branch2][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=N][=C][Ring1][P][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][F]
generated smiles C12C=CC(F)=C(C3=CC=C4C=CN=C(NC5=CC=CC=C5)C4=C3C=C1)C=C2C6=CC=CC=C6F
added!
adding editted molecule!!!
===== for SMILES CC(=NF)C1=NN2C(CC3=C(F)C=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Ring1][=N][F][C][=N][N][C][Branch2][Ring1][Ring2][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][=C][N][=C][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch1][Ring1][C][#N][C][Ring1][Branch2][=N][Ring1][P]
generated smiles CC1=CC(F)=CC(=C1)C=NC(F)=C2C=CC=C(C#N)C2=N
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=NN(CCC3=CC=C4N=CC(C5=CN(CCO)N=C5)=CC4=C3)C(=O)C=C2)C=C1C(F)(F)F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][#C][C][=N][N][Branch2][Ring1][S][C][C][C][=C][C][=C][N][=C][C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][=C][C][Ring1][=C][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][P][C][Branch1][C][F][Branch1][C][F][F]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][C][=C][Branch2][Ring1][P][N][C][=Branch1][C][=O][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2][C][=C][Ring1][S][Ring2][Ring1][#Branch1][=C][C][=C][Ring2][Ring1][=N][Ring2][Ring1][P]
generated smiles CC(C)(C)C1=CC=CC2(C=CC=CN=CC3=CNC(=O)NC=CC=C3C=CC=CC(C(F)(F)F)=C)C=C21
added!
adding editted molecule!!!
===== for SMILES N#CC1=C(F)C=CC2=C1CN(CCCO)C1=NC3=C(C(=O)NC[C@H](C4=CC=CS4)O2)C(N)=NN3C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][#C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][C][N][Branch1][Branch1][C][C][C][O][C][=N][C][=C][Branch2][Ring1][Branch1][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][Ring2][Ring1][#Branch1][C][Branch1][C][N][=N][N][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][N][C][=N][C][=C][C][Branch2][Ring1][#Branch2][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2][Cl][=C][C][=C][Ring2][Ring1][#Branch1][N][Ring2][Ring1][#Branch2][C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1]
generated smiles CCOC(=O)NC1=NC=CC(OC2=CC=CC=C2C3=CC=C(F)C(F)=C3Cl)C=C1NCC4=CC=C(F)C=C4
added!
adding editted molecule!!!
===== for SMILES CC(N=O)C1=NN2C(=NN=C2CC2=C(F)C=C3N=CC=CC3=C2F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch1][Ring1][N][=O][C][=N][N][C][=Branch2][Ring1][=Branch2][=N][N][=C][Ring1][Branch1][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch2][Ring2][C][C][=C][C][=C][C][Branch2][Ring1][=Branch1][N][C][=Branch1][C][=O][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][=C][Ring2][Ring1][Ring1][=C][C][=C][Ring2][Ring1][#Branch2][F]
generated smiles C1C(C)(C2)C=NC(C=CC=CC1(NC(=O)C3=NC4=CC=CC=C4C=C3F)C)C=C2F
added!
adding editted molecule!!!
===== for SMILES COC1=CC2=CC([C@H](C)N=C(C)C3=CN=C4N=NN(CC5=CC6=CC=CN=C6C=C5F)C4=N3)=CC=C2N=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=C][C][Branch2][Ring2][#Branch2][C@H1][Branch1][C][C][N][=C][Branch1][C][C][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1][=C][C][=C][Ring2][Ring1][S][N][=C][Ring2][Ring2][Ring2]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][N][=C][Branch2][Ring1][N][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][=C][Ring1][S][C][Ring2][Ring1][#Branch1][=C][Ring2][Ring1][O][=C][Ring2][Ring1][S]
generated smiles C1OC=CC=CC1C=CC2=CN=C3N=C(NC=CC4=C(C=CC5=CC=C6N=CC=CC6=C5)C=C4)C3=C2C
added!
adding editted molecule!!!
===== for SMILES NC(=O)C1=CC=C(C2=CN=C3N=NN(C(F)C4=C(F)C5=CC(F)=CN=C5C=C4F)C3=N2)C=C1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][N][C][=C][N][=C][N][=N][N][Branch2][Ring1][#Branch2][C][Branch1][C][F][C][=C][Branch1][C][F][C][=C][C][Branch1][C][F][=C][N][=C][Ring1][#Branch1][C][=C][Ring1][N][F][C][Ring2][Ring1][Ring2][=N][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][=C][F]<eom>
Output: 
output selfies [N][C][=Branch1][C][=O][C][=C][C][Branch1][C][F][=C][C][Branch2][Ring2][=Branch1][N][C][=N][C][=C][C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][=N][C][=C][N][=C][Branch1][C][F][C][=C][Ring2][Ring1][C][Ring1][#Branch1][=C][Ring2][Ring1][O][F][=C][Ring2][Ring1][P]
generated smiles N1C(=O)C=CC(F)=CC1NC=NC=CC(C2=CC=CC=C2)=NC3=CN=C(F)C=C3
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=CC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=C][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Branch1][=Branch1][=C][C][=C][C][=C][Branch2][Ring2][=Branch1][N][C][=C][C][=C][Branch2][Ring1][Branch2][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][N][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][#C][C][=C][Ring2][Ring1][Branch1][C][=C][Ring2][Ring1][=N][C][=C][Ring2][Ring2][C][C][N][Ring2][Ring2][=Branch1]
generated smiles CC1=CC(F)=CC(=C1)C=NC=NC(=CC=CC=C2NC=CC=C(C3=CC=CC(F)=C3NC4=CC=CC=C4)C2C=C)CN
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Ring2][S][=C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][N][=C][Ring1][O][C][=C][C][=C][Branch1][S][N][C][C][N][Branch1][=Branch1][C][C][C][Ring1][Ring1][C][C][Ring1][=Branch2][C][=C][Ring1][#C][C][=C][Ring2][Ring1][P][C][=C][Ring2][Ring2][=Branch1][C]
generated smiles CC1=CC(F)=CC(=C12)C=NC=NC(=CC3=C(F)C=CC=C3N=CC4=CC=C(N5CCN(C6CC6)CC5)C=C4C=C2C)CC
added!
adding editted molecule!!!
===== for SMILES O=C(NC1=CC=C(OC2=CC=NC(NC(=O)N3CCC3)=C2)C(F)=C1)C1=CN(CC2CC2)C(=O)N(C2=CC=C(F)C=C2)C1=O =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][Branch2][Ring2][#Branch1][N][C][=C][C][=C][Branch2][Ring1][#Branch1][O][C][=C][C][=N][C][Branch1][N][N][C][=Branch1][C][=O][N][C][C][C][Ring1][Ring2][=C][Ring1][=N][C][Branch1][C][F][=C][Ring2][Ring1][Branch1][C][=C][N][Branch1][#Branch1][C][C][C][C][Ring1][Ring1][C][=Branch1][C][=O][N][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][Ring2][Ring1][C][=O]<eom>
Output: 
output selfies [C][C][C][C][=N][C][Branch2][Ring2][=Branch1][C][=C][C][=C][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][Cl][C][=C][Ring2][Ring1][C][=C][C][=C][Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][C][C][N][C][C][C][C][C][Ring1][=Branch1]
generated smiles C1CC2C=NC3(C=CC=C(NC4=CC=C(C(F)(F)F)C=C4Cl)C3=CC=C2)C(=O)N1CCCN5CCCCC5
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=CN3C(SC4=CC=C5N=CC6=C(OCC(=O)N6C)C5=C4)=NN=C3C(F)=C2)S1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][P][C][=C][N][C][Branch2][Ring1][N][S][C][=C][C][=C][N][=C][C][=C][Branch1][O][O][C][C][=Branch1][C][=O][N][Ring1][#Branch1][C][C][Ring1][N][=C][Ring1][S][=N][N][=C][Ring2][Ring1][=Branch1][C][Branch1][C][F][=C][Ring2][Ring1][O][S][Ring2][Ring1][S]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][=Branch1][C][=O][N][C][=N][C][=C][C][=C][Branch1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][C][N][=N][NH1][C][Ring1][=Branch2][=O][C][=C][Ring1][P][Ring2][Ring1][Branch1].[N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][#Branch1][=Branch1][C][=C][C][=C][C][=Branch2][=Branch1][=Branch1][=C][N][=C][Branch2][Branch1][O][C][=C][C][=C][Branch2][Ring2][P][N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring1][#C][C][=C][N][=C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][=C][C][=C][C][=C][Ring1][P][Ring1][=Branch1][C][=C][Ring2][Ring1][#Branch1][C][=C][Ring2][Ring1][S][C][=C][Ring2][Ring2][=Branch1][C][=C][Ring2][Ring2][=N][=C][Ring2][Branch1][Ring1]
generated smiles CC(C)C(=O)N1C=NC=C2C=C(C3=CC4=CC=C3CN=N[NH1]C4)OC=C21.NC(=O)C=CC=C5CC=CC=C6C(=CN=C(C=CC=C(NC(=O)C=CC=CC(C7=CN=C(C8=CC=C(F)C=C8)C9=CC=CC=C79)C=C)C)C6C)C5=C
added!
adding editted molecule!!!
===== for SMILES CC(=O)N1CCC2=CC=C(NC3=NC=C(Cl)C(NC4=CC=CC=C4C(=O)NN)=N3)C=C2C(C)C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][N][C][C][C][=C][C][=C][Branch2][Ring1][#C][N][C][=N][C][=C][Branch1][C][Cl][C][Branch1][S][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][N][N][=N][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch2][C][Branch1][C][C][C][Ring2][Ring1][#C]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][C][=C][Branch1][#C][N][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=Branch2][N][=C][N][Branch1][=N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1][Cl][C][=Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1]
generated smiles CC(C1)CC2=C(NC3=NC4=CC=CC=C4C3)N=CN(C5=CC=C(Cl)C=C5Cl)C2C(=O)N1C6=CC=C(Cl)C=C6
added!
adding editted molecule!!!
===== for SMILES C[C@@H](C1=CC2=CC(C3=CN(C)N=C3)=CN=C2C=C1)C1=NN=C2C(F)=CC(C3=CN(C)C=N3)=CN21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C@@H1][Branch2][Ring1][O][C][=C][C][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][N][=C][Ring1][N][C][=C][Ring1][S][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][N][Branch1][C][C][C][=N][Ring1][=Branch1][=C][N][Ring1][=N][Ring1][S]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][Ring1][=C][C][=C][Ring2][Ring1][Branch2][N][C][=N][C][=C][Branch1][=Branch2][C][Branch1][C][C][Branch1][C][C][C][C][=C][Ring1][#Branch2]
generated smiles C1C=CC(F)=C(C2=CC3=CC(=C2)C(F)(F)C4=CC(F)=CC=C43)C=C1NC5=NC=C(C(C)(C)C)C=C5
added!
adding editted molecule!!!
===== for SMILES CC(=O)C(F)(F)C1=CC2=CC=C1C(=O)NCCCCN1C=C(C=N1)C1=CN=C3C=CC(=CC3=C1)CCN1N=C2C=CC1=O =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][C][Branch1][C][F][Branch1][C][F][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][N][=C][C][=C][C][=Branch1][Branch2][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][C][N][N][=C][Ring2][Ring1][#C][C][=C][C][Ring1][=Branch1][=O]<eom>
Output: 
output selfies [C][C][=Branch1][C][=O][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][=C][Ring1][P][N].[O][=C][Branch1][C][O][C][Branch1][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2]
generated smiles CC(=O)C1=CC2=CC3=CC=C(N(C)C)C=C3N=C2C=C1N.O=C(O)C(O)C(=O)C4=CC=C5C=CC=CC5=C4
added!
adding editted molecule!!!
===== for SMILES CC(=NN)C1=CN=C2N=NN(CC3=CC4=CC=CN=C4C=C3F)C2=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Ring1][=N][N][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][Branch1][N][C][=N][C][=C][C][=C][Branch1][C][F][C][=C][C][Ring1][#Branch1][=N][Ring1][O][C][=C][Ring2][Ring1][Ring1].[C][C][=C][C][=C][Branch2][Ring1][#Branch1][C][=C][C][=N][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][N][=C][Ring1][O][C][=C][Ring2][Ring1][Ring2]
generated smiles C1C=CC(F)=C1NC2=NC=C3C=C(F)C=CC3=N2.C4C=CC=CC=CC5=NC6=CC(F)=CC=C6N=C5C=C4
added!
adding editted molecule!!!
===== for SMILES CC(=O)C1=C(F)C=CC2=C1CN(CCCO)C1=NC3=C(C(=O)NC[C@H](C4=CC=CS4)O2)C(N)=NN3C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][C][N][Branch1][Branch1][C][C][C][O][C][=N][C][=C][Branch2][Ring1][Branch1][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][Ring2][Ring1][#Branch1][C][Branch1][C][N][=N][N][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring2][S][N][C][=Branch1][C][=O][N][Branch1][=N][C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][C][C][N][Branch2][Ring1][Branch1][C][C][C][N][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][C][C][Ring1][N][C][C][Ring2][Ring1][C][=C][Ring2][Ring2][C]
generated smiles C1C(C)C(=O)C=CC2=CC1(NC(=O)N(CC3=CC=C(F)C=C3)CCCNC4CCN(C5=CC=CC=C5)CC4CC)C2
added!
adding editted molecule!!!
===== for SMILES CC(=NNC(N)=O)C1=CN=C2N=NN(CC3=CC4=CC=CN=C4C=C3F)C2=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Branch2][=N][N][C][Branch1][C][N][=O][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch1][=C][N][C][=C][C][=C][Branch1][C][N][C][=C][Ring1][#Branch1][F][=N][C][=C][Ring1][#C][C][=C][C][=C][N][=C][N][=C][Branch1][C][N][N][=C][Ring1][#Branch1][Ring1][#Branch2]
generated smiles CC(C)(C)C1=NC(NC2=CC=C(N)C=C2F)=NC=C1C=C3C=CN=CN=C(N)N=C3
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C2=CC(F)=CN=C2C=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][=Branch1][C][=C][Branch1][C][F][C][=C][C][Branch1][C][F][=C][N][=C][Ring1][#Branch1][C][=C][Ring1][N][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [N][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch2][Ring1][=Branch1][N][=C][C][=C][C][=C][Branch1][C][F][C][Branch1][=Branch1][C][=Branch1][C][=O][O][=C][Ring1][#Branch2][F][C][=C][Ring2][Ring1][Ring1][Ring2][Ring1][Branch2]
generated smiles NC1=NC(F)=CC2=CC=C(N=CC3=CC=C(F)C(C(=O)O)=C3F)C=C21
added!
adding editted molecule!!!
===== for SMILES CC(c1c(F)cc2ncc(-c3cnn(C)c3)cc2c1F)c1nnc2c(F)cc(-c3cnn(C)c3)cn12 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][C][=N][N][Branch1][C][C][C][=Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][C][=N][N][Branch1][C][C][C][=Ring1][=Branch1][=C][N][Ring1][S][Ring1][=N]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch2][Ring2][C][C][=C][C][=C][C][Branch2][Ring1][Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][Cl][=C][Ring2][Ring1][C][F][=C][C][=C][C][=C][C][=Ring2][Ring1][#Branch2][Ring1][=Branch1]
generated smiles CC(C)(C)C=NC(C1=CC=CC(NC2=CC=C(C(F)(F)F)C=C2Cl)=C1F)=C3C=CC=CC3
added!
adding editted molecule!!!
===== for SMILES O=C1C=CC(N2C=CC3=CC=C(F)C=C32)=NN1CCOC1=CC=NC2=CC(OCCCN3CCOCC3)=CC=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][C][=C][C][Branch1][P][N][C][=C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][Ring1][#Branch2][=N][N][Ring1][S][C][C][O][C][=C][C][=N][C][=C][C][Branch1][=N][O][C][C][C][N][C][C][O][C][C][Ring1][=Branch1][=C][C][=C][Ring1][S][Ring2][Ring1][Ring2]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][Branch2][Ring2][N][N][C][=C][C][=C][Branch2][Ring1][S][N][C][=Branch1][C][=O][C][=C][C][=C][Branch1][P][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2][F][C][=C][Ring1][S][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][#C][N][C][C][C][N][C][C][O][C][C][Ring1][=Branch1]
generated smiles COC=CC=C(NC=CC=C(NC(=O)C=CC=C(C1=CC=C(F)C(F)=C1F)CC)C)C=CNCCCN2CCOCC2
added!
adding editted molecule!!!
===== for SMILES C/C(=N\OCCCO)C1=NN2C(=NN=C2CC2=C(F)C=C3N=CC=CC3=C2F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][/C][=Branch1][#Branch1][=N][\O][C][C][C][O][C][=N][N][C][=Branch2][Ring1][=Branch2][=N][N][=C][Ring1][Branch1][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][C][=C][Ring1][Branch2][C][=C][C][=C][N][=C][Branch1][#Branch2][N][C][C][C][O][C][C][Ring1][=Branch1][N][=C][Ring1][=N][N][=C][Ring1][P][N].[H+1]
generated smiles CC1=C(F)C(F)=CC=C1C2=CC3=CN=C(NC4CCOCC4)N=C3N=C2N.[H+1]
added!
adding editted molecule!!!
===== for SMILES COC1=CC=C2C(=C1)N=CC=C2OCC1=NN=C2C(F)=CC(C3=CC(C)=CS3)=CN12 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][N][=C][C][=C][Ring1][#Branch1][O][C][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][C][Branch1][C][C][=C][S][Ring1][=Branch1][=C][N][Ring1][S][Ring1][=N]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][Branch2][Ring1][=N][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1][Ring1][S][=C][C][Branch1][Ring1][O][C][=C][Ring2][Ring1][=Branch2][O][C]
generated smiles C1OC=CC=CC2(C3=CC=CC(F)=C3NC4=CC=C(Cl)C=C42)C=C1OC
added!
adding editted molecule!!!
===== for SMILES CC(=NNC(N)=O)C1=NN2C(C(O)C3=C(F)C=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Branch2][=N][N][C][Branch1][C][N][=O][C][=N][N][C][Branch2][Ring1][#Branch1][C][Branch1][C][O][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][=C][N][=C][Ring2][Ring1][Ring1][C][=C][Ring2][Ring1][#Branch1]<eom>
Output: 
output selfies [C][C][O][C][=N][C][Branch1][C][F][=C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][N][N][C][=N][C][=C][C][Branch1][P][C][=C][N][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][Ring1][=C][=C][Ring1][P][C][=Branch1][C][=O][NH1][Ring2][Ring1][#Branch2]
generated smiles CCOC=NC(F)=C1C=CC(F)=C(N2C=NC=CC(C3=CN=C4C=CC=CC4=C3)=C2)C(=O)[NH1]1
added!
adding editted molecule!!!
===== for SMILES O=C1OCC2=NC(C3=CC=C(F)C=C3F)C(OC3=CC=NC4=C3C(C3=CC=CN=C3)=CN4)=C12 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][O][C][C][=N][C][Branch1][=N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][F][C][Branch2][Ring1][=Branch2][O][C][=C][C][=N][C][=C][Ring1][=Branch1][C][Branch1][=Branch2][C][=C][C][=C][N][=C][Ring1][=Branch1][=C][N][Ring1][O][=C][Ring2][Ring1][S][Ring2][Ring1][=N]<eom>
Output: 
output selfies [C][O][C][=C][C][=N][C][=C][C][Branch2][Ring1][P][C][=C][C][=C][Branch2][Ring1][Ring2][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][C][=C][Ring1][P][=C][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][N][O][C]
generated smiles COC=C1C=NC=CC(C2=CC=C(NC3=CC=C(C(F)(F)F)C=C3)C=C2C1)C=COC
added!
adding editted molecule!!!
===== for SMILES CCN1CCC(n2cc(-c3cnc4ccc5ccc(NS(N)(=O)=O)cc5c(=O)c4c3)cn2)CC1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][C][Branch2][Ring2][S][N][C][=C][Branch2][Ring2][Branch1][C][=C][N][=C][C][=C][C][=C][C][=C][Branch1][#Branch2][N][S][Branch1][C][N][=Branch1][C][=O][=O][C][=C][Ring1][O][C][=Branch1][C][=O][C][Ring1][P][=C][Ring2][Ring1][Branch1][C][=N][Ring2][Ring1][#Branch2][C][C][Ring2][Ring1][S]<eom>
Output: 
output selfies [C][C][=C][C][=C][Branch2][Ring2][Branch2][N][C][=Branch1][C][=O][C][=C][C][=C][C][=C][C][=C][Branch2][Ring1][Ring1][N][C][=C][C][=C][Branch1][=Branch2][S][Branch1][C][N][=Branch1][C][=O][=O][C][=C][Ring1][#Branch2][C][=C][Ring2][Ring1][C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][=N][N][C][C][N][Branch1][P][C][=Branch1][C][=O][C][=C][C][=C][Branch1][C][N][C][=C][Ring1][#Branch1][C][C][Ring1][S]
generated smiles C1C=CC=C1NC(=O)C=CC=C2C=CC=C(NC3=CC=C(S(N)(=O)=O)C=C3)C=C2
added!
adding editted molecule!!!
fp_scores_to_top [0.23529411764705882, 0.32515337423312884, 0.1118421052631579, 0.17647058823529413, 0.18518518518518517, 0.16167664670658682, 0.20710059171597633, 0.15723270440251572, 0.16049382716049382, 0.12318840579710146, 0.1417910447761194, 0.1588235294117647, 0.1118421052631579, 0.19333333333333333, 0.03759398496240601, 0.20105820105820105, 0.25882352941176473, 0.07971014492753623, 0.15789473684210525, 0.17045454545454544, 0.16463414634146342, 0.2122905027932961, 0.27044025157232704, 0.18354430379746836, 0.13414634146341464, 0.21656050955414013, 0.12195121951219512, 0.11643835616438356, 0.2289156626506024, 0.14619883040935672, 0.22560975609756098, 0.007407407407407408, 0.1511627906976744, 0.1870967741935484, 0.12352941176470589, 0.2057142857142857, 0.13986013986013987, 0.17647058823529413, 0.056451612903225805, 0.1881720430107527, 0.23076923076923078, 0.17341040462427745, 0.0958904109589041, 0.25949367088607594, 0.26519337016574585, 0.183206106870229, 0.19631901840490798, 0.23076923076923078, 0.23333333333333334, 0.15172413793103448, 0.1694915254237288, 0.20359281437125748, 0.21893491124260356, 0.11594202898550725, 0.15819209039548024, 0.0547945205479452, 0.11724137931034483, 0.2185792349726776, 0.11764705882352941, 0.23030303030303031, 0.21965317919075145, 0.09740259740259741, 0.23121387283236994, 0.27976190476190477, 0.2064516129032258, 0.1450381679389313, 0.046357615894039736, 0.25882352941176473, 0.14457831325301204, 0.2839506172839506, 0.19254658385093168, 0.18518518518518517, 0.17703349282296652, 0.23333333333333334, 0.2413793103448276, 0.1978021978021978, 0.1069182389937107, 0.1218274111675127, 0.18324607329842932, 0.16, 0.1875, 0.16091954022988506, 0.15458937198067632, 0.22959183673469388, 0.23369565217391305, 0.16382252559726962, 0.2074468085106383, 0.2413793103448276, 0.1989247311827957, 0.22459893048128343, 0.1691542288557214, 0.14772727272727273, 0.16875, 0.17714285714285713, 0.0871559633027523, 0.18072289156626506, 0.15568862275449102, 0.23837209302325582, 0.1907514450867052, 0.13559322033898305]
top 70 [ 1 69 63 22 44 43 67 16 74 87 97  0 84 73 48 62 40 47 59 83 28 30 89 60
 52 57 25 21 86  6 64 35 51 15 88 75 46 13 70 98 39 80 33  4 71 23 78 45
 95 93 72  3 37 41 19 50 90 92 20 85  5 81  8 79 11 54 18  7 96 82]
len offspring_mol 70
189
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Cn1cnc(-c2cc(F)c3nnc([C@@H](F)c4ccc5ncc(-c6cnn(C)c6)cc5c4)n3c2)c1

Boltz running on GPU 1
11.32
Cn1cc(-c2ccc3nnc(Sc4ccc5ncc(NCC(N)=O)cc5c4)n3c2)cn1

Boltz running on GPU 2
10.3
510/1000 | avg_top1: 12.050 | avg_top10: 11.874 | avg_top100: 11.330 | avg_sa: 3.458 | div: 0.816
{'avg_top1': 12.05, 'avg_top10': 11.873999999999999, 'avg_top100': 11.330100000000002, 'auc_top1': 6.06245, 'auc_top10': 5.927139999999997, 'auc_top100': 5.569828809523809, 'avg_sa': 3.4581654643301856, 'diversity_top100': 0.816028347223158, 'n_oracle': 510}
CN(C)S(=O)(=O)NNc1cnc2ccc(Sc3nnc4ccc(-c5cnn(C)c5)cn34)cc2c1

Boltz running on GPU 1
10.21
[C-]#[N+]C1=CN=C2N=NN(C(F)c3ccc4ncc(-c5cnn(NC)c5)cc4c3)C12

Boltz running on GPU 2
11.1
NC(=O)c1ccc(-c2cnc3nnn(C(F)c4c(F)cc5ncc(F)cc5c4F)c3n2)cc1-c1ccncc1

Boltz running on GPU 1
11.26
CC(c1ccc2ncc(-c3cnn(C)c3)cc2c1)N1N=NC2=NC=NN(C)C21

Boltz running on GPU 1
9.48
Cn1cc(-c2ccc3nnc(Sc4ccc(C(=O)NCC5CCCCN5)c(F)c4)n3c2)cn1

Boltz running on GPU 2
8.96
Cn1cc(-c2cnc3nnc(C(F)(c4ccc5ncccc5c4)c4cnn(C)c4)n3n2)cn1

Boltz running on GPU 2
10.01
Already in buffer
CC(C)(C)c1ccc(NC2=CC(c3cc4cc(c3)C(F)(F)c3cc(F)ccc3-4)=C(F)C=CC2)nc1

Boltz running on GPU 2
[Errno 2] No such file or directory: '/data/boltz/results/boltz_results_c-met_CC(C)(C)c1ccc(NC2=CC(c3cc4cc(c3)C(F)(F)c3cc(F)ccc3-4)=C(F)C=CC2)nc1/predictions/c-met_CC(C)(C)c1ccc(NC2=CC(c3cc4cc(c3)C(F)(F)c3cc(F)ccc3-4)=C(F)C=CC2)nc1/affinity_c-met_CC(C)(C)c1ccc(NC2=CC(c3cc4cc(c3)C(F)(F)c3cc(F)ccc3-4)=C(F)C=CC2)nc1.json'
-0.0
Already in buffer
NC(=O)c1cnc2c(NCc3nnc4ccc(-c5cc(F)cc(F)c5)nn34)ccnc2c1

Boltz running on GPU 2
10.19
Already in buffer
Already in buffer
CCn1cc(C(=O)Nc2cc(F)c(-c3c[nH]c4ncnc(N)c34)cc2F)c(=O)c(-c2ccc(F)cc2)c1

Boltz running on GPU 1
10.87
Already in buffer
OC(c1c(F)cc2ncc(F)cc2c1F)n1nnc2ncc(-c3ccc(F)c(F)c3)nc21

Boltz running on GPU 2
10.57
520/1000 | avg_top1: 12.050 | avg_top10: 11.874 | avg_top100: 11.335 | avg_sa: 3.481 | div: 0.815
{'avg_top1': 12.05, 'avg_top10': 11.873999999999999, 'avg_top100': 11.335200000000002, 'auc_top1': 6.18295, 'auc_top10': 6.045879999999997, 'auc_top100': 5.683155309523809, 'avg_sa': 3.4811826302370816, 'diversity_top100': 0.8152652358782294, 'n_oracle': 520}
Already in buffer
OCCn1cc(-c2cnc3nnn([C@@H](F)c4ccc5ncccc5c4)c3n2)cn1

Boltz running on GPU 2
11.33
Already in buffer
Cc1cc(-c2cc(N)c3nnc([C@@H](F)c4ccc5ncc(ON)cc5c4)n3c2)on1

Boltz running on GPU 1
11.67
CN1CCC(Nc2cnc3c(c2)=C(Cc2ccc4ncccc4c2)CC=3)CC1

Boltz running on GPU 1
7.82
Already in buffer
O=C(Nc1cc(F)c(O)cc1F)c1cn(CC2CCOCC2)cc(-c2ccc(F)cc2)c1=O

Boltz running on GPU 2
9.94
CNCCn1cc(-c2cnc3nnn([C@@H](C)c4ccc5ncccc5c4)c3n2)cn1

Boltz running on GPU 2
10.48
COc1c(Oc2ccc(Nc3nccc4cc(C)n(-c5ccc(F)cc5)c(=O)c34)cc2F)ccnc1N

Boltz running on GPU 2
10.71
Cc1ccc2nnc(Sc3ccc4ncc(NCCO)cc4c3)n2c1

Boltz running on GPU 2
10.54
COCc1cc(F)c(NC(=O)c2cn(CC3CCOCC3)cc(-c3ccc(F)cc3)c2=O)cc1F

Boltz running on GPU 1
9.73
Already in buffer
COc1ccc2cc([C@H](C)c3nnc4c(F)cc(-c5cc(C)no5)cn34)ccc2n1

Boltz running on GPU 2
9.2
O=C1C=CC(n2ccc3ccc(F)cc32)=C1c1cnn(CCO)c1

Boltz running on GPU 2
8.75
530/1000 | avg_top1: 12.050 | avg_top10: 11.874 | avg_top100: 11.346 | avg_sa: 3.492 | div: 0.813
{'avg_top1': 12.05, 'avg_top10': 11.873999999999999, 'avg_top100': 11.346400000000003, 'auc_top1': 6.30345, 'auc_top10': 6.164619999999997, 'auc_top100': 5.79656330952381, 'avg_sa': 3.491639639898255, 'diversity_top100': 0.8128746138226102, 'n_oracle': 530}
COc1ccc2c(OCc3nnc4ccc(-c5ccc(C(=O)C#N)s5)cn34)ccnc2c1

Boltz running on GPU 2
11.59
Cc1c(C(C)n2cnc3ncc(-c4cnn(C)c4)nc32)c(F)cc2ncccc12

Boltz running on GPU 2
10.52
Cc1c(OCC(O)F)cn2ncnc(Oc3ccc(NC(=O)C4(C(=O)Nc5ccc(F)cc5)CC4)cc3F)c12

Boltz running on GPU 1
9.92
Already in buffer
Already in buffer
COCCOc1cnc2ccc([C@H](C)n3nnc4c3C(=O)C(C)=C4)cc2c1

Boltz running on GPU 2
9.61
COCCOc1ccnc2cc(-c3cnn(C)c3)ccc12

Boltz running on GPU 1
9.67
Already in buffer
Already in buffer
Nc1nn2ccc3nc2c1C(=O)NC[C@H](c1cccs1)Oc1ccc(F)c(N=O)c1CN3CCCO

Boltz running on GPU 1
11.7
Already in buffer
Cc1ccc2ncc(Cc3c(F)cc4ncccc4c3F)n2n1

Boltz running on GPU 1
10.17
CN=C(F)c1ccc2ncc(Cc3c(F)cc4ncccc4c3F)n2n1

Boltz running on GPU 2
10.41
CN(C)c1ccc2cc3c(nc2c1)-c1nc2ccc1c(c2C(=O)O)C=C3

Boltz running on GPU 2
[Errno 2] No such file or directory: '/data/boltz/results/boltz_results_c-met_CN(C)c1ccc2cc3c(nc2c1)-c1nc2ccc1c(c2C(=O)O)C=C3/predictions/c-met_CN(C)c1ccc2cc3c(nc2c1)-c1nc2ccc1c(c2C(=O)O)C=C3/affinity_c-met_CN(C)c1ccc2cc3c(nc2c1)-c1nc2ccc1c(c2C(=O)O)C=C3.json'
-0.0
CCc1ccc2ncc(Cc3c(F)cc4ncccc4c3F)n2n1

Boltz running on GPU 1
11.38
540/1000 | avg_top1: 12.050 | avg_top10: 11.874 | avg_top100: 11.365 | avg_sa: 3.493 | div: 0.815
{'avg_top1': 12.05, 'avg_top10': 11.873999999999999, 'avg_top100': 11.364600000000001, 'auc_top1': 6.42395, 'auc_top10': 6.283359999999996, 'auc_top100': 5.91011830952381, 'avg_sa': 3.4931610714411843, 'diversity_top100': 0.814869961674902, 'n_oracle': 540}
Already in buffer
Cn1cc(-c2ccc(F)cc2)cn1

Boltz running on GPU 1
5.41
Already in buffer
CC(C)(C)C=NC(=C1C=CC=CC1)c1cccc(Nc2ccc(C(F)(F)F)cc2Cl)c1F

Boltz running on GPU 1
7.63
C=Cc1ccc(N=NC2=CC=CC(=CC)C=CCC(N=CN=Cc3cc(C)cc(F)c3)=CC=C2)c2c1cnc1ccccc12

Boltz running on GPU 2
9.57
Cc1csc(-c2ccc3nnc(-c4ccncc4)n3n2)c1

Boltz running on GPU 1
8.37
Already in buffer
C[C@@H](c1ccc2c(c1)CON=N2)n1nnc2ncc(-c3cnn(CCO)c3)nc21

Boltz running on GPU 1
9.3
Fc1cc2ncccc2c(F)c1Cc1cnc2n1NC(OCCn1cncn1)C=C2

Boltz running on GPU 1
10.08
CC(=O)N1Cc2c(ccc(F)c2C#N)O[C@@H](C#N)CNC(=O)c2c(N)nn3ccc1nc23

Boltz running on GPU 2
10.7
Already in buffer
Already in buffer
COc1cnc2nnn(C(F)c3c(F)cc4ncc(F)cc4c3F)c2n1

Boltz running on GPU 2
10.8
Already in buffer
CO/N=C(\F)c1ccc2ncc(Cc3c(F)cc4c(c3F)CC(F)=N4)n2n1

Boltz running on GPU 2
11.17
Already in buffer
Cn1cc(C2CNc3nc(-c4cnn(CCO)c4)cnc3N2)cn1

Boltz running on GPU 2
8.1
550/1000 | avg_top1: 12.050 | avg_top10: 11.874 | avg_top100: 11.367 | avg_sa: 3.503 | div: 0.814
{'avg_top1': 12.05, 'avg_top10': 11.873999999999999, 'avg_top100': 11.366800000000001, 'auc_top1': 6.544449999999999, 'auc_top10': 6.4020999999999955, 'auc_top100': 6.023775309523811, 'avg_sa': 3.502828583959399, 'diversity_top100': 0.8138965530714878, 'n_oracle': 550}
Already in buffer
CO/N=C(\F)c1ccc2ncc(Cc3c(F)cc4c(c3F)CC(C#N)=N4)n2n1

Boltz running on GPU 1
10.97
CCN1Cc2c(ccc(O)c2C#N)O[C@@H](C)CNC(=O)c2c(NC)nn3ccc1nc23

Boltz running on GPU 1
10.32
NC(=O)NN=C(F)c1cnc2nnn(Cc3cc4cccnc4cc3F)c2n1

Boltz running on GPU 1
11.32
C[C@H](c1c(F)cc2ncccc2c1F)c1nnc2n1NCC=C2

Boltz running on GPU 2
9.93
Already in buffer
Already in buffer
[(12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (11.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c120>), (11.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15350>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b350>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4db30>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c74a0>), (11.73, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa270>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c0b0>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c200>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc80>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b057b0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7200>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (11.64, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15dd0>), (11.59, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8cf0>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc820>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c3c0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7740>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05890>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b050b0>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ccf0>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcdd0>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7a50>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c430>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15f20>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc740>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b4a0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.26, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b174a0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa510>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b153c0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa040>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bcf0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a4a0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bba0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a5f0>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c740>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ac80>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ba0>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05eb0>), (11.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dcf0>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c890>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b580>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65eb4f20>), (11.11, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c2e0>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05200>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcb30>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17970>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c190>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c350>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc660>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a6d0>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c200>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7970>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05660>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc190>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15eb0>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a040>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05510>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c2e0>), (11.04, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b3c0>), (11.04, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7f90>), (11.03, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b040>), (11.01, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15430>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cd60>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c190>), (10.98, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bacc80>), (10.97, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15970>), (10.96, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b172e0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b053c0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c510>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c5f0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc270>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa430>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12e40>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05580>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dba0>), (10.93, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc7b0>), (10.92, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcba0>), (10.92, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b055f0>), (10.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcf20>)]
[0.008871122104917431, 0.008797502834337813, 0.008768055126105966, 0.008760693199048005, 0.008745969344932082, 0.008731245490816159, 0.008694435855526352, 0.008687073928468389, 0.008679712001410426, 0.008679712001410426, 0.008642902366120619, 0.008642902366120619, 0.008642902366120619, 0.008635540439062657, 0.008628178512004696, 0.008620816584946735, 0.008620816584946735, 0.008620816584946735, 0.00861345465788877, 0.00861345465788877, 0.00860609273083081, 0.00860609273083081, 0.008591368876714887, 0.008591368876714887, 0.008591368876714887, 0.008584006949656926, 0.008569283095541003, 0.008532473460251194, 0.00851774960613527, 0.008503025752019347, 0.008480939970845461, 0.008466216116729538, 0.008422044554381768, 0.008422044554381768, 0.008407320700265845, 0.008407320700265845, 0.008407320700265845, 0.008407320700265845, 0.008407320700265845, 0.008407320700265845, 0.008399958773207884, 0.008392596846149921, 0.00838523491909196, 0.00838523491909196, 0.008377872992034, 0.008377872992034, 0.008370511064976036, 0.008363149137918075, 0.008348425283802152, 0.00834106335674419, 0.00834106335674419, 0.008333701429686228, 0.008333701429686228, 0.008333701429686228, 0.008326339502628267, 0.008326339502628267, 0.008318977575570305, 0.008311615648512342, 0.008304253721454382, 0.008304253721454382, 0.008289529867338458, 0.008260082159106612, 0.008260082159106612, 0.008252720232048651, 0.008245358304990688, 0.008245358304990688, 0.008245358304990688, 0.008245358304990688, 0.008237996377932726, 0.008237996377932726, 0.008237996377932726, 0.008237996377932726, 0.008237996377932726, 0.008230634450874765, 0.008230634450874765, 0.008230634450874765, 0.008223272523816803, 0.008223272523816803, 0.008215910596758842, 0.008186462888526995, 0.008186462888526995, 0.008186462888526995, 0.008186462888526995, 0.008179100961469033, 0.008171739034411072, 0.008171739034411072, 0.008171739034411072, 0.00816437710735311, 0.00816437710735311, 0.00816437710735311, 0.00816437710735311, 0.00816437710735311, 0.00816437710735311, 0.008149653253237186, 0.008149653253237186, 0.008149653253237186, 0.008149653253237186, 0.008134929399121265, 0.008134929399121265, 0.0081275674720633, 0.0081275674720633, 0.00812020554500534, 0.008105481690889416, 0.008090757836773493, 0.008090757836773493, 0.008083395909715532, 0.00807603398265757, 0.008068672055599609, 0.008061310128541646, 0.008061310128541646, 0.008061310128541646, 0.008061310128541646, 0.008061310128541646, 0.008053948201483684, 0.008053948201483684, 0.008053948201483684, 0.008046586274425723, 0.008039224347367762, 0.008039224347367762, 0.0080318624203098]
[(11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a6d0>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4db30>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c3c0>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05660>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa430>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05eb0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c5f0>), (11.26, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b174a0>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (11.04, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7f90>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12e40>), (11.64, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15dd0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b057b0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa510>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.03, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b040>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15f20>), (11.59, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8cf0>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4db30>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (10.98, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bacc80>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa430>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b580>), (11.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcdd0>), (11.11, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c2e0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b053c0>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c350>), (10.92, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcba0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7200>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15f20>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b153c0>), (11.26, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b174a0>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (11.26, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b174a0>), (11.64, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15dd0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c200>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7200>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (11.03, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b040>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c120>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05580>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (10.98, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bacc80>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c740>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b050b0>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dba0>), (10.94, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12e40>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05890>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc80>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa430>), (11.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.26, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b174a0>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b053c0>), (11.11, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c2e0>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ccf0>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a6d0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa430>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc190>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c430>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05890>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc80>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7a50>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b580>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c2e0>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b350>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c74a0>), (11.64, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15dd0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b4a0>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c3c0>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c190>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc190>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc270>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc270>), (11.03, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b040>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c890>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.01, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15430>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b153c0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65eb4f20>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c190>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (10.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcf20>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (10.97, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15970>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b4a0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05890>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c0b0>)]
Bin size: 100
===== for SMILES O=C1NCCCCN2C=C(C=N2)C2=CN=C3C=CC(=CC3=C2)CCN2N=C(C=CC2=O)C2=CC=C1C(C(F)(F)F)=C2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][N][=C][C][=C][C][=Branch1][Branch2][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][=C][Ring2][Ring2][C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][Ring2][Ring1][C][=C][Ring2][Ring1][=Branch1]
generated smiles O=C(O)C1=C2C=CC3=C1C=CC4=CC5=CC=C(N(C)C)C=C5N=C4C3=C2
added!
adding editted molecule!!!
===== for SMILES O=C1NCCCCN2C=C(C=N2)C2=CC3=CC(=CC=C3N=C2)CCN2N=C(C=CC2=O)C2=CC(C(O)(F)F)=C1C=C2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][C][=C][C][=Branch1][#Branch2][=C][C][=C][Ring1][=Branch1][N][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][Branch1][=Branch2][C][Branch1][C][O][Branch1][C][F][F][=C][Ring2][Ring2][=Branch1][C][=C][Ring1][#Branch2]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][Ring2][Ring1][C][=N][Ring2][Ring1][=Branch1]
generated smiles O=C(O)C1=C2C=CC3=C1C=CC4=CC5=CC=C(N(C)C)C=C5N=C4C3=N2
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CN(C)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][N][=C][Ring1][N][Ring1][#C]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Ring2][S][=C][C][=C][C][Branch2][Ring1][N][N][=N][C][=C][C][=C][Branch1][P][C][=C][N][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][Ring1][=C][C][=C][Ring1][S][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring2][Ring2][=Branch1]
generated smiles CC1=CC(F)=CC(=C1)C=NC=NC(=CC=CC(N=NC2=CC=C(C3=CN=C4C=CC=CC4=C32)C=C)=CC=CC5=CC)CC=C5
added!
adding editted molecule!!!
===== for SMILES CN1C=C(CN2C=C(C(=O)NC3=C(F)C=C(C4=CNC5=NC=NC(N)=C45)C(F)=C3)C(=O)C(C3=CC=C(F)C=C3)=C2)C=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=C][Branch2][=Branch1][Ring2][C][N][C][=C][Branch2][Ring2][#Branch1][C][=Branch1][C][=O][N][C][=C][Branch1][C][F][C][=C][Branch1][P][C][=C][N][C][=N][C][=N][C][Branch1][C][N][=C][Ring1][#Branch2][Ring1][#Branch1][C][Branch1][C][F][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][=C][Ring2][Ring2][Ring1][C][=N][Ring2][Ring2][=Branch2]<eom>
Output: 
output selfies [N][C][=C][C][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][Ring1][=N][C][=C][Ring2][Ring1][=Branch1][F]
generated smiles NC1=CC=C(C2=CC=C3C(=C2)C(F)(F)C4=CC(F)=CC=C43)C=C1F
added!
adding editted molecule!!!
===== for SMILES CCN1CC2=C(C=CC(F)=C2C#N)O[C@@H](C2=CC=CS2)CNC(=O)C2=C3N=C1C=CN3N=C2N =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][N][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][#N][O][C@@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][C][N][C][=Branch1][C][=O][C][=C][N][=C][Ring2][Ring1][#Branch2][C][=C][N][Ring1][=Branch1][N][=C][Ring1][=Branch2][N]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring2][=Branch1][N][C][=Branch1][C][=O][N][C][C][C][C@@H1][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][C][C][Ring2][Ring1][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][S][C]
generated smiles C1COC(=O)C2=CC=CC(NC(=O)NCCC[C@@H1]1NC3=CC=C(C(F)(F)F)C=C3CC)=C2C=CC
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=C][N][=C][Branch1][#Branch2][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=N][=C][Ring1][P][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][F]
generated smiles C12C=CC(F)=C(C3=CC=C4C=CN=C(NC5=CC=CC=C5)C4=C3C=C1)C=C2C6=CC=CC=C6F
added!
adding editted molecule!!!
===== for SMILES CC(=NF)C1=NN2C(CC3=C(F)C=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Ring1][=N][F][C][=N][N][C][Branch2][Ring1][Ring2][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][=C][N][=C][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch1][Ring1][C][#N][C][Ring1][Branch2][=N][Ring1][P]
generated smiles CC1=CC(F)=CC(=C1)C=NC(F)=C2C=CC=C(C#N)C2=N
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=NN(CCC3=CC=C4N=CC(C5=CN(CCO)N=C5)=CC4=C3)C(=O)C=C2)C=C1C(F)(F)F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][#C][C][=N][N][Branch2][Ring1][S][C][C][C][=C][C][=C][N][=C][C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][=C][C][Ring1][=C][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][P][C][Branch1][C][F][Branch1][C][F][F]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][C][=C][Branch2][Ring1][P][N][C][=Branch1][C][=O][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2][C][=C][Ring1][S][Ring2][Ring1][#Branch1][=C][C][=C][Ring2][Ring1][=N][Ring2][Ring1][P]
generated smiles CC(C)(C)C1=CC=CC2(C=CC=CN=CC3=CNC(=O)NC=CC=C3C=CC=CC(C(F)(F)F)=C)C=C21
added!
adding editted molecule!!!
===== for SMILES CC(N=O)C1=NN2C(=NN=C2CC2=C(F)C=C3N=CC=CC3=C2F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch1][Ring1][N][=O][C][=N][N][C][=Branch2][Ring1][=Branch2][=N][N][=C][Ring1][Branch1][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch2][Ring2][C][C][=C][C][=C][C][Branch2][Ring1][=Branch1][N][C][=Branch1][C][=O][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][=C][Ring2][Ring1][Ring1][=C][C][=C][Ring2][Ring1][#Branch2][F]
generated smiles C1C(C)(C2)C=NC(C=CC=CC1(NC(=O)C3=NC4=CC=CC=C4C=C3F)C)C=C2F
added!
adding editted molecule!!!
===== for SMILES N#CC1=C(F)C=CC2=C1CN(CCCO)C1=NC3=C(C(=O)NC[C@H](C4=CC=CS4)O2)C(N)=NN3C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][#C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][C][N][Branch1][Branch1][C][C][C][O][C][=N][C][=C][Branch2][Ring1][Branch1][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][Ring2][Ring1][#Branch1][C][Branch1][C][N][=N][N][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][N][C][=N][C][=C][C][Branch2][Ring1][#Branch2][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2][Cl][=C][C][=C][Ring2][Ring1][#Branch1][N][Ring2][Ring1][#Branch2][C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1]
generated smiles CCOC(=O)NC1=NC=CC(OC2=CC=CC=C2C3=CC=C(F)C(F)=C3Cl)C=C1NCC4=CC=C(F)C=C4
added!
adding editted molecule!!!
===== for SMILES COC1=CC2=CC([C@H](C)N=C(C)C3=CN=C4N=NN(CC5=CC6=CC=CN=C6C=C5F)C4=N3)=CC=C2N=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=C][C][Branch2][Ring2][#Branch2][C@H1][Branch1][C][C][N][=C][Branch1][C][C][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1][=C][C][=C][Ring2][Ring1][S][N][=C][Ring2][Ring2][Ring2]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][N][=C][Branch2][Ring1][N][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][=C][Ring1][S][C][Ring2][Ring1][#Branch1][=C][Ring2][Ring1][O][=C][Ring2][Ring1][S]
generated smiles C1OC=CC=CC1C=CC2=CN=C3N=C(NC=CC4=C(C=CC5=CC=C6N=CC=CC6=C5)C=C4)C3=C2C
added!
adding editted molecule!!!
===== for SMILES NC(=O)C1=CC=C(C2=CN=C3N=NN(C(F)C4=C(F)C5=CC(F)=CN=C5C=C4F)C3=N2)C=C1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][N][C][=C][N][=C][N][=N][N][Branch2][Ring1][#Branch2][C][Branch1][C][F][C][=C][Branch1][C][F][C][=C][C][Branch1][C][F][=C][N][=C][Ring1][#Branch1][C][=C][Ring1][N][F][C][Ring2][Ring1][Ring2][=N][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][=C][F]<eom>
Output: 
output selfies [N][C][=Branch1][C][=O][C][=C][C][Branch1][C][F][=C][C][Branch2][Ring2][=Branch1][N][C][=N][C][=C][C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][=N][C][=C][N][=C][Branch1][C][F][C][=C][Ring2][Ring1][C][Ring1][#Branch1][=C][Ring2][Ring1][O][F][=C][Ring2][Ring1][P]
generated smiles N1C(=O)C=CC(F)=CC1NC=NC=CC(C2=CC=CC=C2)=NC3=CN=C(F)C=C3
added!
adding editted molecule!!!
===== for SMILES NC(=O)c1ccc(-c2cnc3nnn(C(F)c4c(F)cc5ncc(F)cc5c4F)c3n2)cc1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][N][C][=C][N][=C][N][=N][N][Branch2][Ring1][#Branch2][C][Branch1][C][F][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][C][F][=C][C][Ring1][#Branch1][=C][Ring1][N][F][C][Ring2][Ring1][Ring2][=N][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][=C][F]<eom>
Output: 
output selfies [F][C][=C][C][=C][Branch2][Ring2][C][C][=C][C][=N][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][C][=C][Ring1][#Branch2][N][=C][Ring1][=C][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][=C][Ring2][Ring1][=N]
generated smiles FC1=CC=C(C=CC2=NC3=CC(C(F)(F)F)=CC=C3N=C2C4=CC=CCF)C4C=C1
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=CC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=C][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Branch1][=Branch1][=C][C][=C][C][=C][Branch2][Ring2][=Branch1][N][C][=C][C][=C][Branch2][Ring1][Branch2][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][N][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][#C][C][=C][Ring2][Ring1][Branch1][C][=C][Ring2][Ring1][=N][C][=C][Ring2][Ring2][C][C][N][Ring2][Ring2][=Branch1]
generated smiles CC1=CC(F)=CC(=C1)C=NC=NC(=CC=CC=C2NC=CC=C(C3=CC=CC(F)=C3NC4=CC=CC=C4)C2C=C)CN
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Ring2][S][=C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][N][=C][Ring1][O][C][=C][C][=C][Branch1][S][N][C][C][N][Branch1][=Branch1][C][C][C][Ring1][Ring1][C][C][Ring1][=Branch2][C][=C][Ring1][#C][C][=C][Ring2][Ring1][P][C][=C][Ring2][Ring2][=Branch1][C]
generated smiles CC1=CC(F)=CC(=C12)C=NC=NC(=CC3=C(F)C=CC=C3N=CC4=CC=C(N5CCN(C6CC6)CC5)C=C4C=C2C)CC
added!
adding editted molecule!!!
===== for SMILES O=C(NC1=CC=C(OC2=CC=NC(NC(=O)N3CCC3)=C2)C(F)=C1)C1=CN(CC2CC2)C(=O)N(C2=CC=C(F)C=C2)C1=O =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][Branch2][Ring2][#Branch1][N][C][=C][C][=C][Branch2][Ring1][#Branch1][O][C][=C][C][=N][C][Branch1][N][N][C][=Branch1][C][=O][N][C][C][C][Ring1][Ring2][=C][Ring1][=N][C][Branch1][C][F][=C][Ring2][Ring1][Branch1][C][=C][N][Branch1][#Branch1][C][C][C][C][Ring1][Ring1][C][=Branch1][C][=O][N][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][Ring2][Ring1][C][=O]<eom>
Output: 
output selfies [C][C][C][C][=N][C][Branch2][Ring2][=Branch1][C][=C][C][=C][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][Cl][C][=C][Ring2][Ring1][C][=C][C][=C][Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][C][C][N][C][C][C][C][C][Ring1][=Branch1]
generated smiles C1CC2C=NC3(C=CC=C(NC4=CC=C(C(F)(F)F)C=C4Cl)C3=CC=C2)C(=O)N1CCCN5CCCCC5
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=CN3C(SC4=CC=C5N=CC6=C(OCC(=O)N6C)C5=C4)=NN=C3C(F)=C2)S1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][P][C][=C][N][C][Branch2][Ring1][N][S][C][=C][C][=C][N][=C][C][=C][Branch1][O][O][C][C][=Branch1][C][=O][N][Ring1][#Branch1][C][C][Ring1][N][=C][Ring1][S][=N][N][=C][Ring2][Ring1][=Branch1][C][Branch1][C][F][=C][Ring2][Ring1][O][S][Ring2][Ring1][S]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][=Branch1][C][=O][N][C][=N][C][=C][C][=C][Branch1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][C][N][=N][NH1][C][Ring1][=Branch2][=O][C][=C][Ring1][P][Ring2][Ring1][Branch1].[N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][#Branch1][=Branch1][C][=C][C][=C][C][=Branch2][=Branch1][=Branch1][=C][N][=C][Branch2][Branch1][O][C][=C][C][=C][Branch2][Ring2][P][N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring1][#C][C][=C][N][=C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][=C][C][=C][C][=C][Ring1][P][Ring1][=Branch1][C][=C][Ring2][Ring1][#Branch1][C][=C][Ring2][Ring1][S][C][=C][Ring2][Ring2][=Branch1][C][=C][Ring2][Ring2][=N][=C][Ring2][Branch1][Ring1]
generated smiles CC(C)C(=O)N1C=NC=C2C=C(C3=CC4=CC=C3CN=N[NH1]C4)OC=C21.NC(=O)C=CC=C5CC=CC=C6C(=CN=C(C=CC=C(NC(=O)C=CC=CC(C7=CN=C(C8=CC=C(F)C=C8)C9=CC=CC=C79)C=C)C)C6C)C5=C
added!
adding editted molecule!!!
===== for SMILES CC(=O)N1CCC2=CC=C(NC3=NC=C(Cl)C(NC4=CC=CC=C4C(=O)NN)=N3)C=C2C(C)C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][N][C][C][C][=C][C][=C][Branch2][Ring1][#C][N][C][=N][C][=C][Branch1][C][Cl][C][Branch1][S][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][N][N][=N][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch2][C][Branch1][C][C][C][Ring2][Ring1][#C]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][C][=C][Branch1][#C][N][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=Branch2][N][=C][N][Branch1][=N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1][Cl][C][=Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1]
generated smiles CC(C1)CC2=C(NC3=NC4=CC=CC=C4C3)N=CN(C5=CC=C(Cl)C=C5Cl)C2C(=O)N1C6=CC=C(Cl)C=C6
added!
adding editted molecule!!!
===== for SMILES NC1=NN2C=CC3=NC2=C1C(=O)NC[C@H](C1=CC=CS1)OC1=C(CN3CCCO)C(N=O)=C(F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=N][N][C][=C][C][=N][C][Ring1][=Branch1][=C][Ring1][=Branch2][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][C][=C][Branch1][#Branch2][C][N][Ring2][Ring1][Ring1][C][C][C][O][C][Branch1][Ring1][N][=O][=C][Branch1][C][F][C][=C][Ring1][#C]<eom>
Output: 
output selfies [C][C][=C][Branch1][=Branch1][C][=Branch1][C][=O][O][C][=Branch1][C][=O][C][=C][N][Ring1][#Branch2][C][=C][C][=C][Branch1][S][N][C][C][N][Branch1][=Branch1][C][Branch1][C][C][C][C][C][Ring1][=Branch2][C][=C][Ring1][#C]
generated smiles CC1=C(C(=O)O)C(=O)C=CN1C2=CC=C(N3CCN(C(C)C)CC3)C=C2
added!
adding editted molecule!!!
===== for SMILES C[C@@H](C1=CC2=CC(C3=CN(C)N=C3)=CN=C2C=C1)C1=NN=C2C(F)=CC(C3=CN(C)C=N3)=CN21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C@@H1][Branch2][Ring1][O][C][=C][C][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][N][=C][Ring1][N][C][=C][Ring1][S][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][N][Branch1][C][C][C][=N][Ring1][=Branch1][=C][N][Ring1][=N][Ring1][S]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][Ring1][=C][C][=C][Ring2][Ring1][Branch2][N][C][=N][C][=C][Branch1][=Branch2][C][Branch1][C][C][Branch1][C][C][C][C][=C][Ring1][#Branch2]
generated smiles C1C=CC(F)=C(C2=CC3=CC(=C2)C(F)(F)C4=CC(F)=CC=C43)C=C1NC5=NC=C(C(C)(C)C)C=C5
added!
adding editted molecule!!!
===== for SMILES CC(=NN)C1=CN=C2N=NN(CC3=CC4=CC=CN=C4C=C3F)C2=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Ring1][=N][N][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][Branch1][N][C][=N][C][=C][C][=C][Branch1][C][F][C][=C][C][Ring1][#Branch1][=N][Ring1][O][C][=C][Ring2][Ring1][Ring1].[C][C][=C][C][=C][Branch2][Ring1][#Branch1][C][=C][C][=N][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][N][=C][Ring1][O][C][=C][Ring2][Ring1][Ring2]
generated smiles C1C=CC(F)=C1NC2=NC=C3C=C(F)C=CC3=N2.C4C=CC=CC=CC5=NC6=CC(F)=CC=C6N=C5C=C4
added!
adding editted molecule!!!
===== for SMILES CC(=O)C(F)(F)C1=CC2=CC=C1C(=O)NCCCCN1C=C(C=N1)C1=CN=C3C=CC(=CC3=C1)CCN1N=C2C=CC1=O =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][C][Branch1][C][F][Branch1][C][F][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][N][=C][C][=C][C][=Branch1][Branch2][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][C][N][N][=C][Ring2][Ring1][#C][C][=C][C][Ring1][=Branch1][=O]<eom>
Output: 
output selfies [C][C][=Branch1][C][=O][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][=C][Ring1][P][N].[O][=C][Branch1][C][O][C][Branch1][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2]
generated smiles CC(=O)C1=CC2=CC3=CC=C(N(C)C)C=C3N=C2C=C1N.O=C(O)C(O)C(=O)C4=CC=C5C=CC=CC5=C4
added!
adding editted molecule!!!
===== for SMILES CC(=O)C1=C(F)C=CC2=C1CN(CCCO)C1=NC3=C(C(=O)NC[C@H](C4=CC=CS4)O2)C(N)=NN3C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][C][N][Branch1][Branch1][C][C][C][O][C][=N][C][=C][Branch2][Ring1][Branch1][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][Ring2][Ring1][#Branch1][C][Branch1][C][N][=N][N][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring2][S][N][C][=Branch1][C][=O][N][Branch1][=N][C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][C][C][N][Branch2][Ring1][Branch1][C][C][C][N][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][C][C][Ring1][N][C][C][Ring2][Ring1][C][=C][Ring2][Ring2][C]
generated smiles C1C(C)C(=O)C=CC2=CC1(NC(=O)N(CC3=CC=C(F)C=C3)CCCNC4CCN(C5=CC=CC=C5)CC4CC)C2
added!
adding editted molecule!!!
===== for SMILES CC(=NNC(N)=O)C1=CN=C2N=NN(CC3=CC4=CC=CN=C4C=C3F)C2=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Branch2][=N][N][C][Branch1][C][N][=O][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch1][=C][N][C][=C][C][=C][Branch1][C][N][C][=C][Ring1][#Branch1][F][=N][C][=C][Ring1][#C][C][=C][C][=C][N][=C][N][=C][Branch1][C][N][N][=C][Ring1][#Branch1][Ring1][#Branch2]
generated smiles CC(C)(C)C1=NC(NC2=CC=C(N)C=C2F)=NC=C1C=C3C=CN=CN=C(N)N=C3
added!
adding editted molecule!!!
===== for SMILES CC1=NOC(C2=CN3C(=NN=C3[C@@H](F)C3=CC4=CC(ON)=CN=C4C=C3)C(N)=C2)=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=N][O][C][Branch2][Ring2][O][C][=C][N][C][=Branch2][Ring1][N][=N][N][=C][Ring1][Branch1][C@@H1][Branch1][C][F][C][=C][C][=C][C][Branch1][Ring1][O][N][=C][N][=C][Ring1][Branch2][C][=C][Ring1][N][C][Branch1][C][N][=C][Ring2][Ring1][Branch2][=C][Ring2][Ring1][=N]<eom>
Output: 
output selfies [N][C][=N][C][=C][C][=C][Branch1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][NH1][Ring1][#Branch2][C][=C][Ring1][P][C][=C][Ring2][Ring1][Branch1][C][=C][C][=C][Branch1][C][N][C][=C][Ring1][#Branch1]
generated smiles N1C2=NC=CC=C(C3=CC=CC=C3C(=O)[NH1])C=C2C=C1C4=CC=C(N)C=C4
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C2=CC(F)=CN=C2C=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][=Branch1][C][=C][Branch1][C][F][C][=C][C][Branch1][C][F][=C][N][=C][Ring1][#Branch1][C][=C][Ring1][N][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [N][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch2][Ring1][=Branch1][N][=C][C][=C][C][=C][Branch1][C][F][C][Branch1][=Branch1][C][=Branch1][C][=O][O][=C][Ring1][#Branch2][F][C][=C][Ring2][Ring1][Ring1][Ring2][Ring1][Branch2]
generated smiles NC1=NC(F)=CC2=CC=C(N=CC3=CC=C(F)C(C(=O)O)=C3F)C=C21
added!
adding editted molecule!!!
===== for SMILES CC(c1c(F)cc2ncc(-c3cnn(C)c3)cc2c1F)c1nnc2c(F)cc(-c3cnn(C)c3)cn12 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][C][=N][N][Branch1][C][C][C][=Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][C][=N][N][Branch1][C][C][C][=Ring1][=Branch1][=C][N][Ring1][S][Ring1][=N]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch2][Ring2][C][C][=C][C][=C][C][Branch2][Ring1][Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][Cl][=C][Ring2][Ring1][C][F][=C][C][=C][C][=C][C][=Ring2][Ring1][#Branch2][Ring1][=Branch1]
generated smiles CC(C)(C)C=NC(C1=CC=CC(NC2=CC=C(C(F)(F)F)C=C2Cl)=C1F)=C3C=CC=CC3
added!
adding editted molecule!!!
===== for SMILES COc1ccc2c(OCc3nnc4ccc(-c5ccc(C(=O)C#N)s5)cn34)ccnc2c1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=C][C][Branch2][Ring2][C][O][C][C][=N][N][=C][C][=C][C][Branch1][S][C][=C][C][=C][Branch1][#Branch1][C][=Branch1][C][=O][C][#N][S][Ring1][=Branch2][=C][N][Ring2][Ring1][C][Ring1][#C][=C][C][=N][C][Ring2][Ring1][#Branch2][=C][Ring2][Ring1][=C]<eom>
Output: 
output selfies [N][#C][C][=C][C][=C][C][Branch2][Ring1][S][C][=N][C][=C][C][Branch1][P][C][=C][C][=C][Branch1][Ring1][O][C][C][Branch1][Ring1][O][C][=C][Ring1][#Branch2][=C][C][=C][Ring1][S][S][Ring2][Ring1][Ring2][=C][Ring2][Ring1][=Branch2]
generated smiles N#CC1=CC=CC(C=NC2=CC(C3=CC=C(OC)C(OC)=C3)=CC=C2S)=C1
added!
adding editted molecule!!!
===== for SMILES O=C1C=CC(N2C=CC3=CC=C(F)C=C32)=NN1CCOC1=CC=NC2=CC(OCCCN3CCOCC3)=CC=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][C][=C][C][Branch1][P][N][C][=C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][Ring1][#Branch2][=N][N][Ring1][S][C][C][O][C][=C][C][=N][C][=C][C][Branch1][=N][O][C][C][C][N][C][C][O][C][C][Ring1][=Branch1][=C][C][=C][Ring1][S][Ring2][Ring1][Ring2]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][Branch2][Ring2][N][N][C][=C][C][=C][Branch2][Ring1][S][N][C][=Branch1][C][=O][C][=C][C][=C][Branch1][P][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2][F][C][=C][Ring1][S][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][#C][N][C][C][C][N][C][C][O][C][C][Ring1][=Branch1]
generated smiles COC=CC=C(NC=CC=C(NC(=O)C=CC=C(C1=CC=C(F)C(F)=C1F)CC)C)C=CNCCCN2CCOCC2
added!
adding editted molecule!!!
===== for SMILES C/C(=N\OCCCO)C1=NN2C(=NN=C2CC2=C(F)C=C3N=CC=CC3=C2F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][/C][=Branch1][#Branch1][=N][\O][C][C][C][O][C][=N][N][C][=Branch2][Ring1][=Branch2][=N][N][=C][Ring1][Branch1][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][C][=C][Ring1][Branch2][C][=C][C][=C][N][=C][Branch1][#Branch2][N][C][C][C][O][C][C][Ring1][=Branch1][N][=C][Ring1][=N][N][=C][Ring1][P][N].[H+1]
generated smiles CC1=C(F)C(F)=CC=C1C2=CC3=CN=C(NC4CCOCC4)N=C3N=C2N.[H+1]
added!
adding editted molecule!!!
fp_scores_to_top [0.12318840579710146, 0.11038961038961038, 0.07142857142857142, 0.1896551724137931, 0.2289156626506024, 0.11805555555555555, 0.051470588235294115, 0.029850746268656716, 0.09722222222222222, 0.2846153846153846, 0.06716417910447761, 0.16167664670658682, 0.0948905109489051, 0.030534351145038167, 0.2222222222222222, 0.16891891891891891, 0.0703125, 0.1881720430107527, 0.2261904761904762, 0.13333333333333333, 0.16875, 0.25555555555555554, 0.19135802469135801, 0.15606936416184972, 0.21935483870967742, 0.16129032258064516, 0.19444444444444445, 0.18471337579617833, 0.15942028985507245, 0.3271604938271605, 0.061068702290076333, 0.14942528735632185, 0.1509433962264151, 0.044444444444444446, 0.2, 0.23863636363636365, 0.1337579617834395, 0.25, 0.15602836879432624, 0.31736526946107785, 0.16091954022988506, 0.12408759124087591, 0.30526315789473685, 0.17391304347826086, 0.21787709497206703, 0.14285714285714285, 0.0945945945945946, 0.2830188679245283, 0.23076923076923078, 0.1588235294117647, 0.15841584158415842, 0.2972972972972973, 0.17647058823529413, 0.19393939393939394, 0.21787709497206703, 0.1870967741935484, 0.18543046357615894, 0.09815950920245399, 0.13924050632911392, 0.14482758620689656, 0.13286713286713286, 0.18823529411764706, 0.18181818181818182, 0.1746987951807229, 0.17218543046357615, 0.22826086956521738, 0.044444444444444446, 0.0948905109489051, 0.16891891891891891, 0.15723270440251572, 0.19254658385093168, 0.18518518518518517, 0.17703349282296652, 0.23333333333333334, 0.2413793103448276, 0.1978021978021978, 0.1069182389937107, 0.1218274111675127, 0.16, 0.18324607329842932, 0.1875, 0.16091954022988506, 0.1871345029239766, 0.15458937198067632, 0.22959183673469388, 0.23369565217391305, 0.16382252559726962, 0.2074468085106383, 0.1656441717791411, 0.2413793103448276, 0.22459893048128343, 0.1989247311827957, 0.1691542288557214, 0.14772727272727273, 0.20245398773006135, 0.16875, 0.17714285714285713, 0.18181818181818182, 0.0871559633027523, 0.18072289156626506]
top 70 [29 39 42 51  9 47 21 37 74 89 35 85 73 48 84  4 65 18 90 14 24 44 54 87
 94 34 91 75 26 53 70 22  3 61 17 80 82 55 56 71 27 79 62 97 99 96 72 52
 63 43 64 92 68 15 20 95 88 86 11 25 81 40 78 28 49 50 69 23 38 83]
len offspring_mol 70
189
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Cn1cc(-c2cnc3ccc(C(F)n4nnc5ncc(-c6ccncc6)nc54)cc3c2)cn1

Boltz running on GPU 2
11.38
Cn1cc(-c2cnc3ccc(C(C(N)=O)n4nnc5ncc(-c6ccncc6)nc54)cc3c2)cn1

Boltz running on GPU 2
10.57
CC(=Nc1ccc2ncc(-c3cnn(C)c3)cc2c1)c1csc(-c2ccc3nnc(Cc4ccc5ncccc5c4)n3n2)c1

Boltz running on GPU 2
11.79
Cn1cc(-c2ccc3nnc(-c4ccc5ncccc5c4)n3c2)cn1

Boltz running on GPU 2
8.59
Cc1ccc2ncc(-c3cnn(C)c3)cc2c1

Boltz running on GPU 2
8.59
COc1cnc2ccc([C@H](C)c3nnc4c(F)cc(-c5cnn(F)c5)cn34)cc2c1

Boltz running on GPU 2
10.91
560/1000 | avg_top1: 12.050 | avg_top10: 11.874 | avg_top100: 11.383 | avg_sa: 3.513 | div: 0.812
{'avg_top1': 12.05, 'avg_top10': 11.873999999999999, 'avg_top100': 11.3828, 'auc_top1': 6.66495, 'auc_top10': 6.520839999999995, 'auc_top100': 6.13752330952381, 'avg_sa': 3.512755585937632, 'diversity_top100': 0.8120477697155178, 'n_oracle': 560}
COCCOc1cnc2ccc([C@H](C)n3nnc4ccn(-c5ccc6ncccc6c5)c(=O)c43)cc2c1

Boltz running on GPU 2
10.75
Cn1cc(C(=O)Nc2ccc(Oc3ccnc(NC(=O)N4CCC4)c3)c(F)c2)c(=O)n(-c2ccc(F)cc2)c1=O

Boltz running on GPU 2
10.11
Already in buffer
Already in buffer
Cc1csc(-c2ccc3c(c2)oc(=O)n3CCOc2ccnc3cc(C4=CCN=C4)ccc23)c1

Boltz running on GPU 2
10.81
Already in buffer
Already in buffer
NC(=O)c1ccc(C2=C(F)c3cc(F)cnc3C2)cc1-c1ccncc1

Boltz running on GPU 2
8.48
Already in buffer
Already in buffer
C1=CSC(C2=NN3SC(c4ccc5nnc(Cc6ccc7ncccc7c6)n5n4)=NN=C3C=C2)=CN1

Boltz running on GPU 1
10.07
CO/N=C(\F)c1csc(-c2ccc3nnc(Cc4ccc5ncccc5c4)n3n2)c1

Boltz running on GPU 1
11.55
Already in buffer
COc1cnc2ccc([C@H](C)c3nnc4c(C(N)=O)cc(-c5cc(C)no5)cn34)cc2c1

Boltz running on GPU 2
9.89
NOc1cnc2ccc([C@H](F)c3nnc4c(N)cc(N)cn34)cc2c1

Boltz running on GPU 2
10.98
C[C@H](c1c(F)cc2ncccc2c1F)c1nnc2ccc(-c3c(F)cc4ncccc4c3F)nn12

Boltz running on GPU 2
11.19
CC(=Nc1ccc2ncccc2c1)c1ccc2nnc([C@@H](C)c3ccc4ncccc4c3)n2n1

Boltz running on GPU 2
9.19
570/1000 | avg_top1: 12.050 | avg_top10: 11.874 | avg_top100: 11.390 | avg_sa: 3.519 | div: 0.811
{'avg_top1': 12.05, 'avg_top10': 11.873999999999999, 'avg_top100': 11.3904, 'auc_top1': 6.78545, 'auc_top10': 6.639579999999995, 'auc_top100': 6.25138930952381, 'avg_sa': 3.519298065686909, 'diversity_top100': 0.8110028633387336, 'n_oracle': 570}
Already in buffer
[NH]C(=O)c1ccccc1C1=CC=CN=c2[nH]c(-c3ccc(N)cc3)cc2=C1

Boltz running on GPU 2
7.87
N#CCCNc1cnc2ccc(Sc3nnc4c(F)cc(C=NNC(N)=O)cn34)cc2c1

Boltz running on GPU 1
10.38
Already in buffer
Already in buffer
COCCOc1cnc2ccn([C@H](C)c3nnc4c(F)cc(-c5cc(N)no5)cn34)c(=O)c2c1

Boltz running on GPU 2
11.15
CO/N=C(\F)c1ccc2ncc(Cc3c(F)cc4ncc(F)cc4c3F)n2n1

Boltz running on GPU 2
10.75
Already in buffer
Fc1cc2ncccc2c(F)c1Cc1cnc2ccc(CC3CC3)nn12

Boltz running on GPU 1
9.79
CC(=Nc1cc(C)no1)c1ccc2ncc(Cc3c(F)cc4ncccc4c3F)n2n1

Boltz running on GPU 1
10.22
Cn1cc(-c2cnc3nnc(C(F)(F)c4ncc(C(F)=NNC(N)=O)[nH]4)n3n2)cn1

Boltz running on GPU 2
10.14
COC1C=COc2c1cnc1c2=CC(Sc2nnc3c(F)cc(-c4cnn(F)c4)cn23)C=1C(C)=NN

Boltz running on GPU 2
10.31
Already in buffer
Already in buffer
Already in buffer
Cn1cc(-c2nnc3c(F)cc(-c4c[nH]cn4)cn23)cn1

Boltz running on GPU 2
7.73
Already in buffer
O=C(F)c1cn(CC2CCOCC2)cc(-c2ccc(F)cc2)c1=O

Boltz running on GPU 1
7.96
580/1000 | avg_top1: 12.050 | avg_top10: 11.874 | avg_top100: 11.392 | avg_sa: 3.525 | div: 0.811
{'avg_top1': 12.05, 'avg_top10': 11.873999999999999, 'avg_top100': 11.391799999999998, 'auc_top1': 6.90595, 'auc_top10': 6.758319999999995, 'auc_top100': 6.36530030952381, 'avg_sa': 3.5245863895866796, 'diversity_top100': 0.8109184943585119, 'n_oracle': 580}
Already in buffer
C1=NN=C(Cc2ccc3ncccc3c2)CC1

Boltz running on GPU 1
7.42
COc1ccc(-c2ccc(S)c(N=Cc3cccc(C#N)c3)c2)cc1OC

Boltz running on GPU 2
7.31
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
CC(C=CNCc1nnc2ccc(-c3cc(F)cc(F)c3)nn12)=NF

Boltz running on GPU 2
8.06
CC(N=O)c1ccc2nnc(-c3ccc(F)c(F)c3)n2n1

Boltz running on GPU 2
7.61
Already in buffer
O=c1c(F)cn(CC2CC2)c(=O)n1-c1ccc(F)cc1

Boltz running on GPU 1
7.27
C[C@@H](c1ccc2ncccc2c1)c1cc(ON)c[nH]1

Boltz running on GPU 2
9.73
O=C(NC1N=Nc2ncc(-c3cnn(CCO)c3)nc21)N1CCC1

Boltz running on GPU 1
7.2
Already in buffer
Cc1c(C(=O)O)c(=O)ccn1-c1ccc(N2CCN(C(C)C)CC2)cc1

Boltz running on GPU 2
7.28
Already in buffer
CO/N=C(\C)c1ccc2ncc(Cc3c(F)cc4c(c3F)CC(F)=N4)n2n1

Boltz running on GPU 1
10.38
CC(CCO)n1nnc2ncc(-c3ccc(F)c(F)c3)nc21

Boltz running on GPU 2
7.62
590/1000 | avg_top1: 12.050 | avg_top10: 11.874 | avg_top100: 11.392 | avg_sa: 3.525 | div: 0.811
{'avg_top1': 12.05, 'avg_top10': 11.873999999999999, 'avg_top100': 11.391799999999998, 'auc_top1': 7.02645, 'auc_top10': 6.877059999999995, 'auc_top100': 6.47921830952381, 'avg_sa': 3.5245863895866796, 'diversity_top100': 0.8109184943585119, 'n_oracle': 590}
Already in buffer
CCN1Cc2c(ccc(O)c2OC)O[C@@H](C)CNC(=O)c2c(C)nn3ccc1nc23

Boltz running on GPU 2
9.63
Already in buffer
COc1cnc2ccc(C(C)C)cc2c1

Boltz running on GPU 2
6.98
CC(=NOO)c1ccc2nnc([C@H](C)c3c(F)cc4ncccc4c3F)n2n1

Boltz running on GPU 2
11.21
[C-]#[N+]C1=CN=C2N=NN(C(C)c3nn4ccc5nc4c3C(=O)NC[C@H](C)Oc3ccc(O)c(C#N)c3CN5CC)C12

Boltz running on GPU 1
10.7
N#CC1=Nn2c(Cc3c(F)cc4ncccc4c3F)cnc2C1

Boltz running on GPU 1
9.34
CCON=C(C)c1ccc2nnc([C@H](C)c3c(F)cc4ncccc4c3F)n2n1

Boltz running on GPU 2
10.19
COc1cnc2ccc([C@H](C)C#N)cc2c1

Boltz running on GPU 2
8.14
Already in buffer
[(12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (11.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c120>), (11.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15350>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12eb0>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b350>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4db30>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c74a0>), (11.73, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa270>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c0b0>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c200>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc80>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b057b0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7200>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (11.64, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15dd0>), (11.59, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8cf0>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ac0>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc820>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c3c0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7740>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15d60>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b050b0>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ccf0>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa350>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcdd0>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7a50>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c430>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15f20>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc740>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b4a0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.26, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b174a0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa510>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba89e0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b153c0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa040>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bcf0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a4a0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bba0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a5f0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b5f0>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c740>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ac80>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ba0>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05eb0>), (11.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dcf0>), (11.15, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bf90>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c890>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b580>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65eb4f20>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f90>), (11.11, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c2e0>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05200>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcb30>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17970>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c190>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c350>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc660>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a6d0>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c200>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7970>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05660>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc190>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15eb0>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a040>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05510>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c2e0>), (11.04, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b3c0>), (11.04, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7f90>), (11.03, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b040>), (11.01, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15430>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cd60>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c190>), (10.98, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bacc80>), (10.98, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bb6eb0>), (10.97, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15970>), (10.96, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b172e0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b053c0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c510>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c5f0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc270>)]
[0.008852092913913413, 0.008778631561931339, 0.00874924702113851, 0.0087419008859403, 0.008727208615543887, 0.008712516345147471, 0.008675785669156435, 0.008668439533958227, 0.00866109339876002, 0.00866109339876002, 0.00866109339876002, 0.008624362722768982, 0.008624362722768982, 0.008624362722768982, 0.008617016587570775, 0.008609670452372568, 0.008602324317174361, 0.008602324317174361, 0.008602324317174361, 0.008594978181976153, 0.008594978181976153, 0.008587632046777946, 0.008587632046777946, 0.00857293977638153, 0.00857293977638153, 0.00857293977638153, 0.008565593641183323, 0.008550901370786908, 0.008514170694795872, 0.008499478424399456, 0.008484786154003042, 0.008484786154003042, 0.008462747748408418, 0.008448055478012004, 0.00840397866682276, 0.00840397866682276, 0.008389286396426344, 0.008389286396426344, 0.008389286396426344, 0.008389286396426344, 0.008389286396426344, 0.008389286396426344, 0.008381940261228137, 0.00837459412602993, 0.008367247990831723, 0.008367247990831723, 0.008359901855633515, 0.008359901855633515, 0.008359901855633515, 0.008352555720435306, 0.0083452095852371, 0.008330517314840686, 0.008323171179642477, 0.008323171179642477, 0.00831582504444427, 0.00831582504444427, 0.00831582504444427, 0.008308478909246063, 0.008308478909246063, 0.008301132774047856, 0.008293786638849648, 0.00828644050365144, 0.00828644050365144, 0.008271748233255025, 0.008242363692462196, 0.008242363692462196, 0.00823501755726399, 0.00823501755726399, 0.00822767142206578, 0.00822767142206578, 0.00822767142206578, 0.00822767142206578, 0.008220325286867574, 0.008220325286867574, 0.008220325286867574, 0.008220325286867574, 0.008220325286867574, 0.008220325286867574, 0.008212979151669367, 0.008212979151669367, 0.008212979151669367, 0.008205633016471158, 0.008205633016471158, 0.008198286881272951, 0.008190940746074744, 0.008168902340480122, 0.008168902340480122, 0.008168902340480122, 0.008168902340480122, 0.008168902340480122, 0.008161556205281913, 0.008154210070083706, 0.008154210070083706, 0.008154210070083706, 0.0081468639348855, 0.0081468639348855, 0.0081468639348855, 0.0081468639348855, 0.0081468639348855, 0.0081468639348855, 0.008132171664489084, 0.008132171664489084, 0.008132171664489084, 0.008132171664489084, 0.00811747939409267, 0.00811747939409267, 0.008110133258894462, 0.008110133258894462, 0.008102787123696255, 0.00808809485329984, 0.008073402582903426, 0.008073402582903426, 0.008066056447705219, 0.008066056447705219, 0.00805871031250701, 0.008051364177308803, 0.008044018042110595, 0.008044018042110595, 0.008044018042110595, 0.008044018042110595]
[(11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b5f0>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (11.11, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c2e0>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (10.98, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bb6eb0>), (11.64, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15dd0>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05eb0>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ba0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (11.01, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15430>), (11.64, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15dd0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc270>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15f20>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bba0>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cd60>), (11.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc660>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c2e0>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc190>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7200>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcb30>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cd60>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05200>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12eb0>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c0b0>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c3c0>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.26, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b174a0>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c200>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7740>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4db30>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7200>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b057b0>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (10.99, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c190>), (11.59, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8cf0>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4db30>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c350>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bba0>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05660>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c200>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (11.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa510>), (11.03, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b040>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05660>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15d60>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b4a0>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc820>), (11.59, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8cf0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bba0>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c200>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7200>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b153c0>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05eb0>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (11.04, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b3c0>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c430>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c350>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c3c0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15350>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7200>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15eb0>), (10.95, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c5f0>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c200>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ac80>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c0b0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b5f0>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a5f0>), (11.59, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8cf0>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05660>), (11.26, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b174a0>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (10.98, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bb6eb0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7740>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc190>)]
Bin size: 100
===== for SMILES O=C1NCCCCN2C=C(C=N2)C2=CN=C3C=CC(=CC3=C2)CCN2N=C(C=CC2=O)C2=CC=C1C(C(F)(F)F)=C2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][N][=C][C][=C][C][=Branch1][Branch2][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][=C][Ring2][Ring2][C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][Ring2][Ring1][C][=C][Ring2][Ring1][=Branch1]
generated smiles O=C(O)C1=C2C=CC3=C1C=CC4=CC5=CC=C(N(C)C)C=C5N=C4C3=C2
added!
adding editted molecule!!!
===== for SMILES O=C1NCCCCN2C=C(C=N2)C2=CC3=CC(=CC=C3N=C2)CCN2N=C(C=CC2=O)C2=CC(C(O)(F)F)=C1C=C2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][C][=C][C][=Branch1][#Branch2][=C][C][=C][Ring1][=Branch1][N][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][Branch1][=Branch2][C][Branch1][C][O][Branch1][C][F][F][=C][Ring2][Ring2][=Branch1][C][=C][Ring1][#Branch2]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][Ring2][Ring1][C][=N][Ring2][Ring1][=Branch1]
generated smiles O=C(O)C1=C2C=CC3=C1C=CC4=CC5=CC=C(N(C)C)C=C5N=C4C3=N2
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CN(C)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][N][=C][Ring1][N][Ring1][#C]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Ring2][S][=C][C][=C][C][Branch2][Ring1][N][N][=N][C][=C][C][=C][Branch1][P][C][=C][N][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][Ring1][=C][C][=C][Ring1][S][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring2][Ring2][=Branch1]
generated smiles CC1=CC(F)=CC(=C1)C=NC=NC(=CC=CC(N=NC2=CC=C(C3=CN=C4C=CC=CC4=C32)C=C)=CC=CC5=CC)CC=C5
added!
adding editted molecule!!!
===== for SMILES CN1C=C(CN2C=C(C(=O)NC3=C(F)C=C(C4=CNC5=NC=NC(N)=C45)C(F)=C3)C(=O)C(C3=CC=C(F)C=C3)=C2)C=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=C][Branch2][=Branch1][Ring2][C][N][C][=C][Branch2][Ring2][#Branch1][C][=Branch1][C][=O][N][C][=C][Branch1][C][F][C][=C][Branch1][P][C][=C][N][C][=N][C][=N][C][Branch1][C][N][=C][Ring1][#Branch2][Ring1][#Branch1][C][Branch1][C][F][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][=C][Ring2][Ring2][Ring1][C][=N][Ring2][Ring2][=Branch2]<eom>
Output: 
output selfies [N][C][=C][C][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][Ring1][=N][C][=C][Ring2][Ring1][=Branch1][F]
generated smiles NC1=CC=C(C2=CC=C3C(=C2)C(F)(F)C4=CC(F)=CC=C43)C=C1F
added!
adding editted molecule!!!
===== for SMILES CCN1CC2=C(C=CC(F)=C2C#N)O[C@@H](C2=CC=CS2)CNC(=O)C2=C3N=C1C=CN3N=C2N =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][N][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][#N][O][C@@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][C][N][C][=Branch1][C][=O][C][=C][N][=C][Ring2][Ring1][#Branch2][C][=C][N][Ring1][=Branch1][N][=C][Ring1][=Branch2][N]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring2][=Branch1][N][C][=Branch1][C][=O][N][C][C][C][C@@H1][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][C][C][Ring2][Ring1][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][S][C]
generated smiles C1COC(=O)C2=CC=CC(NC(=O)NCCC[C@@H1]1NC3=CC=C(C(F)(F)F)C=C3CC)=C2C=CC
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=C][N][=C][Branch1][#Branch2][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=N][=C][Ring1][P][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][F]
generated smiles C12C=CC(F)=C(C3=CC=C4C=CN=C(NC5=CC=CC=C5)C4=C3C=C1)C=C2C6=CC=CC=C6F
added!
adding editted molecule!!!
===== for SMILES CC(=NF)C1=NN2C(CC3=C(F)C=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Ring1][=N][F][C][=N][N][C][Branch2][Ring1][Ring2][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][=C][N][=C][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch1][Ring1][C][#N][C][Ring1][Branch2][=N][Ring1][P]
generated smiles CC1=CC(F)=CC(=C1)C=NC(F)=C2C=CC=C(C#N)C2=N
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=NN(CCC3=CC=C4N=CC(C5=CN(CCO)N=C5)=CC4=C3)C(=O)C=C2)C=C1C(F)(F)F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][#C][C][=N][N][Branch2][Ring1][S][C][C][C][=C][C][=C][N][=C][C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][=C][C][Ring1][=C][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][P][C][Branch1][C][F][Branch1][C][F][F]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][C][=C][Branch2][Ring1][P][N][C][=Branch1][C][=O][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2][C][=C][Ring1][S][Ring2][Ring1][#Branch1][=C][C][=C][Ring2][Ring1][=N][Ring2][Ring1][P]
generated smiles CC(C)(C)C1=CC=CC2(C=CC=CN=CC3=CNC(=O)NC=CC=C3C=CC=CC(C(F)(F)F)=C)C=C21
added!
adding editted molecule!!!
===== for SMILES N#CC1=C(F)C=CC2=C1CN(CCCO)C1=NC3=C(C(=O)NC[C@H](C4=CC=CS4)O2)C(N)=NN3C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][#C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][C][N][Branch1][Branch1][C][C][C][O][C][=N][C][=C][Branch2][Ring1][Branch1][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][Ring2][Ring1][#Branch1][C][Branch1][C][N][=N][N][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][N][C][=N][C][=C][C][Branch2][Ring1][#Branch2][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2][Cl][=C][C][=C][Ring2][Ring1][#Branch1][N][Ring2][Ring1][#Branch2][C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1]
generated smiles CCOC(=O)NC1=NC=CC(OC2=CC=CC=C2C3=CC=C(F)C(F)=C3Cl)C=C1NCC4=CC=C(F)C=C4
added!
adding editted molecule!!!
===== for SMILES CC(=Nc1ccc2ncc(-c3cnn(C)c3)cc2c1)c1csc(-c2ccc3nnc(Cc4ccc5ncccc5c4)n3n2)c1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch2][Ring1][N][=N][C][=C][C][=C][N][=C][C][Branch1][O][C][C][=N][N][Branch1][C][C][C][=Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][S][C][=C][S][C][Branch2][Ring1][S][C][C][=C][C][=N][N][=C][Branch1][S][C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][N][Ring1][S][N][=Ring2][Ring1][Ring2][=C][Ring2][Ring1][=Branch2]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][C][=C][C][N-1][C][Branch2][Branch1][S][C][=C][N][=C][Branch2][Ring2][P][C][=C][N][=C][Branch2][Ring1][S][C][=C][C][=C][C][=Branch1][Ring2][=N][Ring1][=Branch1][C][=Branch1][C][=O][C][=N][C][Branch1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][Ring1][S][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][P][C][=C][Ring2][Ring2][=Branch1][C][=C][Ring2][Ring2][#Branch2][C][=C][Ring2][Ring2][=C][C]
generated smiles C1C2=CC(C)=CC3[N-1]C(C=CN=C(C=CN=C(C4=CC=C5C(=N4)C(=O)C=NCC6=CC=CC=C6C=C5)CC=C3)C=CC)=C2C=C1C
added!
adding editted molecule!!!
===== for SMILES CC(N=O)C1=NN2C(=NN=C2CC2=C(F)C=C3N=CC=CC3=C2F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch1][Ring1][N][=O][C][=N][N][C][=Branch2][Ring1][=Branch2][=N][N][=C][Ring1][Branch1][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch2][Ring2][C][C][=C][C][=C][C][Branch2][Ring1][=Branch1][N][C][=Branch1][C][=O][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][=C][Ring2][Ring1][Ring1][=C][C][=C][Ring2][Ring1][#Branch2][F]
generated smiles C1C(C)(C2)C=NC(C=CC=CC1(NC(=O)C3=NC4=CC=CC=C4C=C3F)C)C=C2F
added!
adding editted molecule!!!
===== for SMILES NC(=O)C1=CC=C(C2=CN=C3N=NN(C(F)C4=C(F)C5=CC(F)=CN=C5C=C4F)C3=N2)C=C1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][N][C][=C][N][=C][N][=N][N][Branch2][Ring1][#Branch2][C][Branch1][C][F][C][=C][Branch1][C][F][C][=C][C][Branch1][C][F][=C][N][=C][Ring1][#Branch1][C][=C][Ring1][N][F][C][Ring2][Ring1][Ring2][=N][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][=C][F]<eom>
Output: 
output selfies [N][C][=Branch1][C][=O][C][=C][C][Branch1][C][F][=C][C][Branch2][Ring2][=Branch1][N][C][=N][C][=C][C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][=N][C][=C][N][=C][Branch1][C][F][C][=C][Ring2][Ring1][C][Ring1][#Branch1][=C][Ring2][Ring1][O][F][=C][Ring2][Ring1][P]
generated smiles N1C(=O)C=CC(F)=CC1NC=NC=CC(C2=CC=CC=C2)=NC3=CN=C(F)C=C3
added!
adding editted molecule!!!
===== for SMILES NC(=O)c1ccc(-c2cnc3nnn(C(F)c4c(F)cc5ncc(F)cc5c4F)c3n2)cc1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][N][C][=C][N][=C][N][=N][N][Branch2][Ring1][#Branch2][C][Branch1][C][F][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][C][F][=C][C][Ring1][#Branch1][=C][Ring1][N][F][C][Ring2][Ring1][Ring2][=N][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][=C][F]<eom>
Output: 
output selfies [F][C][=C][C][=C][Branch2][Ring2][C][C][=C][C][=N][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][C][=C][Ring1][#Branch2][N][=C][Ring1][=C][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][=C][Ring2][Ring1][=N]
generated smiles FC1=CC=C(C=CC2=NC3=CC(C(F)(F)F)=CC=C3N=C2C4=CC=CCF)C4C=C1
added!
adding editted molecule!!!
===== for SMILES COC1=CC2=CC([C@H](C)N=C(C)C3=CN=C4N=NN(CC5=CC6=CC=CN=C6C=C5F)C4=N3)=CC=C2N=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=C][C][Branch2][Ring2][#Branch2][C@H1][Branch1][C][C][N][=C][Branch1][C][C][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1][=C][C][=C][Ring2][Ring1][S][N][=C][Ring2][Ring2][Ring2]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][N][=C][Branch2][Ring1][N][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][=C][Ring1][S][C][Ring2][Ring1][#Branch1][=C][Ring2][Ring1][O][=C][Ring2][Ring1][S]
generated smiles C1OC=CC=CC1C=CC2=CN=C3N=C(NC=CC4=C(C=CC5=CC=C6N=CC=CC6=C5)C=C4)C3=C2C
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=CC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=C][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Branch1][=Branch1][=C][C][=C][C][=C][Branch2][Ring2][=Branch1][N][C][=C][C][=C][Branch2][Ring1][Branch2][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][N][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][#C][C][=C][Ring2][Ring1][Branch1][C][=C][Ring2][Ring1][=N][C][=C][Ring2][Ring2][C][C][N][Ring2][Ring2][=Branch1]
generated smiles CC1=CC(F)=CC(=C1)C=NC=NC(=CC=CC=C2NC=CC=C(C3=CC=CC(F)=C3NC4=CC=CC=C4)C2C=C)CN
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Ring2][S][=C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][N][=C][Ring1][O][C][=C][C][=C][Branch1][S][N][C][C][N][Branch1][=Branch1][C][C][C][Ring1][Ring1][C][C][Ring1][=Branch2][C][=C][Ring1][#C][C][=C][Ring2][Ring1][P][C][=C][Ring2][Ring2][=Branch1][C]
generated smiles CC1=CC(F)=CC(=C12)C=NC=NC(=CC3=C(F)C=CC=C3N=CC4=CC=C(N5CCN(C6CC6)CC5)C=C4C=C2C)CC
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=CN3C(SC4=CC=C5N=CC6=C(OCC(=O)N6C)C5=C4)=NN=C3C(F)=C2)S1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][P][C][=C][N][C][Branch2][Ring1][N][S][C][=C][C][=C][N][=C][C][=C][Branch1][O][O][C][C][=Branch1][C][=O][N][Ring1][#Branch1][C][C][Ring1][N][=C][Ring1][S][=N][N][=C][Ring2][Ring1][=Branch1][C][Branch1][C][F][=C][Ring2][Ring1][O][S][Ring2][Ring1][S]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][=Branch1][C][=O][N][C][=N][C][=C][C][=C][Branch1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][C][N][=N][NH1][C][Ring1][=Branch2][=O][C][=C][Ring1][P][Ring2][Ring1][Branch1].[N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][#Branch1][=Branch1][C][=C][C][=C][C][=Branch2][=Branch1][=Branch1][=C][N][=C][Branch2][Branch1][O][C][=C][C][=C][Branch2][Ring2][P][N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring1][#C][C][=C][N][=C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][=C][C][=C][C][=C][Ring1][P][Ring1][=Branch1][C][=C][Ring2][Ring1][#Branch1][C][=C][Ring2][Ring1][S][C][=C][Ring2][Ring2][=Branch1][C][=C][Ring2][Ring2][=N][=C][Ring2][Branch1][Ring1]
generated smiles CC(C)C(=O)N1C=NC=C2C=C(C3=CC4=CC=C3CN=N[NH1]C4)OC=C21.NC(=O)C=CC=C5CC=CC=C6C(=CN=C(C=CC=C(NC(=O)C=CC=CC(C7=CN=C(C8=CC=C(F)C=C8)C9=CC=CC=C79)C=C)C)C6C)C5=C
added!
adding editted molecule!!!
===== for SMILES CC(=O)N1CCC2=CC=C(NC3=NC=C(Cl)C(NC4=CC=CC=C4C(=O)NN)=N3)C=C2C(C)C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][N][C][C][C][=C][C][=C][Branch2][Ring1][#C][N][C][=N][C][=C][Branch1][C][Cl][C][Branch1][S][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][N][N][=N][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch2][C][Branch1][C][C][C][Ring2][Ring1][#C]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][C][=C][Branch1][#C][N][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=Branch2][N][=C][N][Branch1][=N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1][Cl][C][=Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1]
generated smiles CC(C1)CC2=C(NC3=NC4=CC=CC=C4C3)N=CN(C5=CC=C(Cl)C=C5Cl)C2C(=O)N1C6=CC=C(Cl)C=C6
added!
adding editted molecule!!!
===== for SMILES O=C(NC1=CC=C(OC2=CC=NC(NC(=O)N3CCC3)=C2)C(F)=C1)C1=CN(CC2CC2)C(=O)N(C2=CC=C(F)C=C2)C1=O =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][Branch2][Ring2][#Branch1][N][C][=C][C][=C][Branch2][Ring1][#Branch1][O][C][=C][C][=N][C][Branch1][N][N][C][=Branch1][C][=O][N][C][C][C][Ring1][Ring2][=C][Ring1][=N][C][Branch1][C][F][=C][Ring2][Ring1][Branch1][C][=C][N][Branch1][#Branch1][C][C][C][C][Ring1][Ring1][C][=Branch1][C][=O][N][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][Ring2][Ring1][C][=O]<eom>
Output: 
output selfies [C][C][C][C][=N][C][Branch2][Ring2][=Branch1][C][=C][C][=C][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][Cl][C][=C][Ring2][Ring1][C][=C][C][=C][Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][C][C][N][C][C][C][C][C][Ring1][=Branch1]
generated smiles C1CC2C=NC3(C=CC=C(NC4=CC=C(C(F)(F)F)C=C4Cl)C3=CC=C2)C(=O)N1CCCN5CCCCC5
added!
adding editted molecule!!!
===== for SMILES NC1=NN2C=CC3=NC2=C1C(=O)NC[C@H](C1=CC=CS1)OC1=C(CN3CCCO)C(N=O)=C(F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=N][N][C][=C][C][=N][C][Ring1][=Branch1][=C][Ring1][=Branch2][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][C][=C][Branch1][#Branch2][C][N][Ring2][Ring1][Ring1][C][C][C][O][C][Branch1][Ring1][N][=O][=C][Branch1][C][F][C][=C][Ring1][#C]<eom>
Output: 
output selfies [C][C][=C][Branch1][=Branch1][C][=Branch1][C][=O][O][C][=Branch1][C][=O][C][=C][N][Ring1][#Branch2][C][=C][C][=C][Branch1][S][N][C][C][N][Branch1][=Branch1][C][Branch1][C][C][C][C][C][Ring1][=Branch2][C][=C][Ring1][#C]
generated smiles CC1=C(C(=O)O)C(=O)C=CN1C2=CC=C(N3CCN(C(C)C)CC3)C=C2
added!
adding editted molecule!!!
===== for SMILES C[C@@H](C1=CC2=CC(C3=CN(C)N=C3)=CN=C2C=C1)C1=NN=C2C(F)=CC(C3=CN(C)C=N3)=CN21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C@@H1][Branch2][Ring1][O][C][=C][C][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][N][=C][Ring1][N][C][=C][Ring1][S][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][N][Branch1][C][C][C][=N][Ring1][=Branch1][=C][N][Ring1][=N][Ring1][S]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][Ring1][=C][C][=C][Ring2][Ring1][Branch2][N][C][=N][C][=C][Branch1][=Branch2][C][Branch1][C][C][Branch1][C][C][C][C][=C][Ring1][#Branch2]
generated smiles C1C=CC(F)=C(C2=CC3=CC(=C2)C(F)(F)C4=CC(F)=CC=C43)C=C1NC5=NC=C(C(C)(C)C)C=C5
added!
adding editted molecule!!!
===== for SMILES CC(=NN)C1=CN=C2N=NN(CC3=CC4=CC=CN=C4C=C3F)C2=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Ring1][=N][N][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][Branch1][N][C][=N][C][=C][C][=C][Branch1][C][F][C][=C][C][Ring1][#Branch1][=N][Ring1][O][C][=C][Ring2][Ring1][Ring1].[C][C][=C][C][=C][Branch2][Ring1][#Branch1][C][=C][C][=N][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][N][=C][Ring1][O][C][=C][Ring2][Ring1][Ring2]
generated smiles C1C=CC(F)=C1NC2=NC=C3C=C(F)C=CC3=N2.C4C=CC=CC=CC5=NC6=CC(F)=CC=C6N=C5C=C4
added!
adding editted molecule!!!
===== for SMILES CC(=O)C(F)(F)C1=CC2=CC=C1C(=O)NCCCCN1C=C(C=N1)C1=CN=C3C=CC(=CC3=C1)CCN1N=C2C=CC1=O =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][C][Branch1][C][F][Branch1][C][F][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][N][=C][C][=C][C][=Branch1][Branch2][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][C][N][N][=C][Ring2][Ring1][#C][C][=C][C][Ring1][=Branch1][=O]<eom>
Output: 
output selfies [C][C][=Branch1][C][=O][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][=C][Ring1][P][N].[O][=C][Branch1][C][O][C][Branch1][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2]
generated smiles CC(=O)C1=CC2=CC3=CC=C(N(C)C)C=C3N=C2C=C1N.O=C(O)C(O)C(=O)C4=CC=C5C=CC=CC5=C4
added!
adding editted molecule!!!
===== for SMILES CC(=NNC(N)=O)C1=CN=C2N=NN(CC3=CC4=CC=CN=C4C=C3F)C2=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Branch2][=N][N][C][Branch1][C][N][=O][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch1][=C][N][C][=C][C][=C][Branch1][C][N][C][=C][Ring1][#Branch1][F][=N][C][=C][Ring1][#C][C][=C][C][=C][N][=C][N][=C][Branch1][C][N][N][=C][Ring1][#Branch1][Ring1][#Branch2]
generated smiles CC(C)(C)C1=NC(NC2=CC=C(N)C=C2F)=NC=C1C=C3C=CN=CN=C(N)N=C3
added!
adding editted molecule!!!
===== for SMILES CC(=O)C1=C(F)C=CC2=C1CN(CCCO)C1=NC3=C(C(=O)NC[C@H](C4=CC=CS4)O2)C(N)=NN3C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][C][N][Branch1][Branch1][C][C][C][O][C][=N][C][=C][Branch2][Ring1][Branch1][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][Ring2][Ring1][#Branch1][C][Branch1][C][N][=N][N][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring2][S][N][C][=Branch1][C][=O][N][Branch1][=N][C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][C][C][N][Branch2][Ring1][Branch1][C][C][C][N][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][C][C][Ring1][N][C][C][Ring2][Ring1][C][=C][Ring2][Ring2][C]
generated smiles C1C(C)C(=O)C=CC2=CC1(NC(=O)N(CC3=CC=C(F)C=C3)CCCNC4CCN(C5=CC=CC=C5)CC4CC)C2
added!
adding editted molecule!!!
===== for SMILES CC1=NOC(C2=CN3C(=NN=C3[C@@H](F)C3=CC4=CC(ON)=CN=C4C=C3)C(N)=C2)=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=N][O][C][Branch2][Ring2][O][C][=C][N][C][=Branch2][Ring1][N][=N][N][=C][Ring1][Branch1][C@@H1][Branch1][C][F][C][=C][C][=C][C][Branch1][Ring1][O][N][=C][N][=C][Ring1][Branch2][C][=C][Ring1][N][C][Branch1][C][N][=C][Ring2][Ring1][Branch2][=C][Ring2][Ring1][=N]<eom>
Output: 
output selfies [N][C][=N][C][=C][C][=C][Branch1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][NH1][Ring1][#Branch2][C][=C][Ring1][P][C][=C][Ring2][Ring1][Branch1][C][=C][C][=C][Branch1][C][N][C][=C][Ring1][#Branch1]
generated smiles N1C2=NC=CC=C(C3=CC=CC=C3C(=O)[NH1])C=C2C=C1C4=CC=C(N)C=C4
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C2=CC(F)=CN=C2C=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][=Branch1][C][=C][Branch1][C][F][C][=C][C][Branch1][C][F][=C][N][=C][Ring1][#Branch1][C][=C][Ring1][N][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [N][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch2][Ring1][=Branch1][N][=C][C][=C][C][=C][Branch1][C][F][C][Branch1][=Branch1][C][=Branch1][C][=O][O][=C][Ring1][#Branch2][F][C][=C][Ring2][Ring1][Ring1][Ring2][Ring1][Branch2]
generated smiles NC1=NC(F)=CC2=CC=C(N=CC3=CC=C(F)C(C(=O)O)=C3F)C=C21
added!
adding editted molecule!!!
===== for SMILES CC(C1=NN=C2C(F)=CC(C3=CN(C)N=C3)=CN21)C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][=N][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][N][Ring1][=N][Ring1][S][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][=N][C][Branch2][Ring2][C][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][C][Ring1][#Branch1][=N][C][Ring1][O][=C][Ring1][#C][C][=C][C][=C][Branch1][C][N][C][=C][N][=C][Ring1][#Branch1][Ring2][Ring1][S]
generated smiles CC(C1)C=NC(C2=CC=CC(F)=C2N3C=C4C=C(F)C=CC4=NC3=CC=C)C5=C(N)C=CN=C51
added!
adding editted molecule!!!
===== for SMILES COC1=CC=C2C(=C1)N=CC=C2OCC1=NN=C2C=CC(C3=CC=C(C(=O)C#N)S3)=CN21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][N][=C][C][=C][Ring1][#Branch1][O][C][C][=N][N][=C][C][=C][C][Branch1][S][C][=C][C][=C][Branch1][#Branch1][C][=Branch1][C][=O][C][#N][S][Ring1][=Branch2][=C][N][Ring1][#C][Ring2][Ring1][C]<eom>
Output: 
output selfies [N][#C][C][=C][C][=C][C][Branch2][Ring1][S][C][=C][C][=C][N][=C][C][=C][Branch1][P][C][=C][C][=C][Branch1][Ring1][C][#N][C][Branch1][Ring1][C][#N][=C][Ring1][#Branch2][C][Ring1][S][=C][Ring2][Ring1][Ring2][=C][Ring2][Ring1][=Branch2]
generated smiles N#CC=C1C=CC(C2=CC=C3N=CC=C(C4=CC=C(C#N)C(C#N)=C4)C3=C2)=C1
added!
adding editted molecule!!!
===== for SMILES O=C1C=CC(N2C=CC3=CC=C(F)C=C32)=NN1CCOC1=CC=NC2=CC(OCCCN3CCOCC3)=CC=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][C][=C][C][Branch1][P][N][C][=C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][Ring1][#Branch2][=N][N][Ring1][S][C][C][O][C][=C][C][=N][C][=C][C][Branch1][=N][O][C][C][C][N][C][C][O][C][C][Ring1][=Branch1][=C][C][=C][Ring1][S][Ring2][Ring1][Ring2]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][Branch2][Ring2][N][N][C][=C][C][=C][Branch2][Ring1][S][N][C][=Branch1][C][=O][C][=C][C][=C][Branch1][P][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2][F][C][=C][Ring1][S][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][#C][N][C][C][C][N][C][C][O][C][C][Ring1][=Branch1]
generated smiles COC=CC=C(NC=CC=C(NC(=O)C=CC=C(C1=CC=C(F)C(F)=C1F)CC)C)C=CNCCCN2CCOCC2
added!
adding editted molecule!!!
fp_scores_to_top [0.21341463414634146, 0.25, 0.19886363636363635, 0.18023255813953487, 0.1450381679389313, 0.1417910447761194, 0.058394160583941604, 0.18562874251497005, 0.14285714285714285, 0.08108108108108109, 0.08609271523178808, 0.21019108280254778, 0.2569832402234637, 0.1793103448275862, 0.2484472049689441, 0.09395973154362416, 0.26627218934911245, 0.28901734104046245, 0.13138686131386862, 0.16666666666666666, 0.12903225806451613, 0.2122905027932961, 0.17073170731707318, 0.075, 0.045454545454545456, 0.05714285714285714, 0.1337579617834395, 0.25287356321839083, 0.045454545454545456, 0.15527950310559005, 0.12883435582822086, 0.1746031746031746, 0.1878453038674033, 0.26519337016574585, 0.09375, 0.1878453038674033, 0.23295454545454544, 0.14935064935064934, 0.12244897959183673, 0.29411764705882354, 0.2471264367816092, 0.07547169811320754, 0.15083798882681565, 0.21518987341772153, 0.19444444444444445, 0.20855614973262032, 0.17647058823529413, 0.1724137931034483, 0.2684563758389262, 0.21893491124260356, 0.14285714285714285, 0.27848101265822783, 0.19879518072289157, 0.33116883116883117, 0.07547169811320754, 0.20634920634920634, 0.27485380116959063, 0.15384615384615385, 0.2634730538922156, 0.045454545454545456, 0.16853932584269662, 0.11764705882352941, 0.09248554913294797, 0.09090909090909091, 0.24242424242424243, 0.17834394904458598, 0.007518796992481203, 0.08875739644970414, 0.17365269461077845, 0.211340206185567, 0.19254658385093168, 0.18518518518518517, 0.17703349282296652, 0.23333333333333334, 0.2413793103448276, 0.1978021978021978, 0.1069182389937107, 0.1218274111675127, 0.18324607329842932, 0.17209302325581396, 0.16, 0.16091954022988506, 0.1871345029239766, 0.1875, 0.15458937198067632, 0.22959183673469388, 0.16382252559726962, 0.2074468085106383, 0.23369565217391305, 0.1656441717791411, 0.2413793103448276, 0.22459893048128343, 0.1989247311827957, 0.14772727272727273, 0.1691542288557214, 0.20245398773006135, 0.16875, 0.1878453038674033, 0.21341463414634146, 0.0871559633027523]
top 70 [53 39 17 51 56 48 16 33 58 12 27  1 14 40 64 74 90 88 73 36 85 91 49 43
 98  0 21 69 11 45 87 55 95 92  2 52 75 44 70 32 97 35 83 82  7 71 78  3
 13 65 72 46 31 68 47 79 22 94 96 60 19 89 86 81 80 29 84 57 42 37]
len offspring_mol 70
190
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
CCN1CCC(n2cc(-c3cnc4ccc5ccc(F)cc5c(=O)c4c3)cn2)CC1

Boltz running on GPU 1
10.49
Already in buffer
Cc1ccc(-c2cnc3nnn(C(C)c4c(F)cc5ncc(-c6cnn(C)c6)cc5c4F)c3n2)cc1F

Boltz running on GPU 2
11.14
COc1cnc2ccc(Sc3nnc4c(F)cc(-c5cnn(C)c5)cn34)cc2c1

Boltz running on GPU 1
10.43
600/1000 | avg_top1: 12.050 | avg_top10: 11.874 | avg_top100: 11.395 | avg_sa: 3.515 | div: 0.809
{'avg_top1': 12.05, 'avg_top10': 11.873999999999999, 'avg_top100': 11.394599999999999, 'auc_top1': 7.1469499999999995, 'auc_top10': 6.995799999999995, 'auc_top100': 6.59315030952381, 'avg_sa': 3.5153359958145973, 'diversity_top100': 0.8085017634719267, 'n_oracle': 600}
Cn1cc(-c2ccc3c(OCCn4c(=O)oc5cc(C6=CCC=[SH]6)ccc54)ccnc3c2)cn1

Boltz running on GPU 1
10.95
CNC(=O)c1ccc(-c2ccc(=O)n(CCCCO)n2)cc1C(F)(F)F

Boltz running on GPU 1
8.23
Fc1cc2ncccc2c(I)c1Cc1cnc2ccc(-c3cc(Cl)c4ncccc4c3)nn12

Boltz running on GPU 1
10.39
NC(=O)c1ccc(-c2cnc3nnn(C(F)c4c(N)cc5ncc(F)cc5c4F)c3n2)cc1-c1ccncc1

Boltz running on GPU 2
10.37
Cn1cc(-c2cnc3nnc(C(F)(F)C4CCc5cc6cccnc6cc5C4)n3n2)cn1

Boltz running on GPU 2
10.23
CC(=O)n1cc(-c2cnc3cc(F)c(C(C)c4nnc5c(F)cc(-c6cnn(C)c6)cn45)c(F)c3c2)cn1

Boltz running on GPU 1
11.28
COc1ccc2c(OCc3nnc4ccc(-c5cc(Cl)c6ncccc6c5)cn34)ccnc2c1

Boltz running on GPU 1
11.41
CC(=O)C(F)(F)c1ccc(-c2cnc3nnn(C(F)c4c(F)cc5ncc(F)cc5c4F)c3n2)cc1F

Boltz running on GPU 2
11.07
Cc1cc(-c2cnc3ccc([C@H](F)c4nnc5c(N)cc(N)cn45)cc3c2)on1

Boltz running on GPU 2
11.61
O=c1ccc(-n2ccc3ccc(F)cc32)nn1CCOc1ccnc2cc(OCCF)ccc12

Boltz running on GPU 2
10.85
610/1000 | avg_top1: 12.050 | avg_top10: 11.874 | avg_top100: 11.406 | avg_sa: 3.522 | div: 0.810
{'avg_top1': 12.05, 'avg_top10': 11.873999999999999, 'avg_top100': 11.406199999999998, 'auc_top1': 7.26745, 'auc_top10': 7.1145399999999945, 'auc_top100': 6.707154309523809, 'avg_sa': 3.5215362671379484, 'diversity_top100': 0.8096658889309114, 'n_oracle': 610}
CC(c1c(F)cc2ncc(F)cc2c1F)c1nnc2c(F)cc(-c3cnn(C)c3)cn12

Boltz running on GPU 2
10.85
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Nc1ncnc2[nH]cc(-c3cc(F)c(NC(=O)C4=CCC=C(c5ccc(F)cc5)C4=O)cc3F)c12

Boltz running on GPU 2
10.66
Already in buffer
Already in buffer
Already in buffer
CN1CCC(Nc2cnc3ccc(SC4=CCOCC4)cc3c2)CC1

Boltz running on GPU 1
7.5
N#CC=C1C=CC(c2ccc3nccc(-c4ccc(C#N)c(C#N)c4)c3c2)=C1

Boltz running on GPU 1
9.08
Cn1cc(-c2cnc3nnc(C(F)(F)C4CCC5=CC=C[SH]=C5C4)n3n2)cn1

Boltz running on GPU 1
10.05
CO/N=C(\C)c1ccc2ncc(Cc3cn(CC4CCOCC4)cc3-c3ccc(F)cc3)n2n1

Boltz running on GPU 2
8.27
CCN1Cc2c(ccc(O)c2C#N)O[C@@H](C)CNC(=O)c2c(Cc3cc(Cl)c4ncccc4c3)nn3ccc1nc23

Boltz running on GPU 1
10.82
NC(=O)c1ccc(-c2cnc3nnn(Cl)c3n2)cc1-c1ccncc1

Boltz running on GPU 1
7.57
[C-]#[N+]C1=CN=C2N=NN(C(C)c3ccc(Nc4ncc(Cl)c(Cc5ccc6ncccc6c5)n4)cc3)C12

Boltz running on GPU 2
10.24
Already in buffer
Cc1cc(C2=CN3Nc4ccc([C@H](C)c5nnc6c(F)cc(-c7c[nH]cn7)cn56)cc4C=C3C(F)=C2)on1

Boltz running on GPU 1
10.84
620/1000 | avg_top1: 12.050 | avg_top10: 11.874 | avg_top100: 11.406 | avg_sa: 3.522 | div: 0.810
{'avg_top1': 12.05, 'avg_top10': 11.873999999999999, 'avg_top100': 11.406199999999998, 'auc_top1': 7.38795, 'auc_top10': 7.233279999999994, 'auc_top100': 6.821216309523809, 'avg_sa': 3.5215362671379484, 'diversity_top100': 0.8096658889309114, 'n_oracle': 620}
Already in buffer
Already in buffer
CC(=O)NN=C(C)C(F)n1nnc2ncc(-c3ccc(C(N)=O)c(-c4ccncc4)c3)nc21

Boltz running on GPU 2
9.38
Cc1cc(-c2cc(F)c3nnc(Cc4cc5cccnc5cc4F)n3c2)on1

Boltz running on GPU 1
10.91
Already in buffer
N#Cc1c(F)ccc2c1CN(CF)c1ccn3nc(N)c(c3n1)C(=O)NC[C@H](c1cccs1)O2

Boltz running on GPU 2
12.16
Already in buffer
Already in buffer
C=CC=C1N=c2ccc(F)cc2=CN1c1c(F)cccc1C1N=CC(C)Cc2nccc(N)c21

Boltz running on GPU 2
9.46
N#Cc1c(F)ccc2c1CN(CN)c1ccn3nc(N)c(c3n1)C(=O)NC[C@H](c1cccs1)O2

Boltz running on GPU 2
11.25
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
CC(c1c(F)cc2c(c1F)CC(C#N)=N2)n1nnc2ncc(-c3cnn(C)c3)nc21

Boltz running on GPU 2
11.32
Cn1cc(-c2cnc3nnc(C(C)(F)F)n3n2)cn1

Boltz running on GPU 2
7.24
Cn1cc(-c2cc(F)c3nnc(SC4C=CC=CC4)n3c2)cn1

Boltz running on GPU 2
7.9
Already in buffer
Clc1cc(C2=NN3CC=CN=C3C=C2)cc2cccnc12

Boltz running on GPU 1
7.89
CC(c1ccc(Nc2ncc(Cl)c(Nc3ccccc3C(=O)NN)n2)cc1)N1N=NC2=NC=CCC21

Boltz running on GPU 1
11.58
630/1000 | avg_top1: 12.160 | avg_top10: 11.911 | avg_top100: 11.426 | avg_sa: 3.569 | div: 0.813
{'avg_top1': 12.16, 'avg_top10': 11.911000000000001, 'avg_top100': 11.426499999999997, 'auc_top1': 7.509, 'auc_top10': 7.352204999999994, 'auc_top100': 6.935379809523809, 'avg_sa': 3.5687193122414644, 'diversity_top100': 0.8131755881750042, 'n_oracle': 630}
COCCOc1cnc2ccc([C@H](C)N3NNC4=CCC(C)C=C43)cc2c1

Boltz running on GPU 2
10.52
Fc1cc2ncccc2c(F)c1-c1ccncc1

Boltz running on GPU 2
7.12
CC=CC1=NC=CC2=C3C=C(C)CC3=CC(C)=CC(C=CCC(c3ccc4c(n3)C(=O)C=NCc3ccccc3C=C4)=NC=C1)[N-]2

Boltz running on GPU 1
7.89
NNC(=O)c1ccccc1Nc1nc(Nc2ccc(F)cc2)ncc1Cl

Boltz running on GPU 2
10.46
Already in buffer
Already in buffer
Nc1nn2ccc3nc2c1C(=O)NC[C@H](Cl)Oc1ccc(F)c(N=O)c1CN3CCCO

Boltz running on GPU 1
11.5
CCc1cnc2c(F)cc(-c3cccc(C#N)c3)cn12

Boltz running on GPU 2
7.48
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Cc1cnc2ncn(C(C)c3c(F)cc4ncccc4c3F)c2n1

Boltz running on GPU 2
10.25
Already in buffer
Already in buffer
[C-]#[N+]C1=CN=C2N=NN(C(C)c3ccc(Nc4ncc(Cl)c(Nc5nc5=O)n4)cc3)C12

Boltz running on GPU 2
9.4
Fc1ccc(C2=CN(CC3CCOCC3)C=NC2)cc1

Boltz running on GPU 2
6.89
[(12.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be37b0>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (11.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c120>), (11.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15350>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afce40>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12eb0>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b350>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4db30>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c74a0>), (11.73, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa270>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c0b0>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c200>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc80>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b057b0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7200>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (11.64, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15dd0>), (11.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15040>), (11.59, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8cf0>), (11.58, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bc80>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ac0>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc820>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a200>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c3c0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7740>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15d60>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc5f0>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b154a0>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b050b0>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ccf0>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa350>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcdd0>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7a50>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c430>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15f20>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bc10>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc740>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b4a0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15ba0>), (11.26, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b174a0>), (11.25, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc040>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa510>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba89e0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b153c0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c80>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa040>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bcf0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a4a0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bba0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a5f0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b5f0>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c740>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ac80>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ba0>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05eb0>), (11.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dcf0>), (11.15, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bf90>), (11.14, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17900>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c890>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b580>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65eb4f20>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f90>), (11.11, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c2e0>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05200>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcb30>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17970>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c190>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c350>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc660>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a6d0>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c200>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7970>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17040>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05660>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc190>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15eb0>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a040>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15f90>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05510>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c2e0>)]
[0.008892919305528308, 0.008812473489442776, 0.008739340929365019, 0.008710087905333917, 0.008702774649326141, 0.00868814813731059, 0.00868814813731059, 0.008673521625295038, 0.00863695534525616, 0.008629642089248385, 0.008622328833240609, 0.008622328833240609, 0.008622328833240609, 0.008585762553201731, 0.008585762553201731, 0.008585762553201731, 0.008578449297193955, 0.00857113604118618, 0.008563822785178405, 0.008563822785178405, 0.008563822785178405, 0.008556509529170628, 0.008556509529170628, 0.008549196273162852, 0.008549196273162852, 0.008534569761147302, 0.008534569761147302, 0.008534569761147302, 0.008527256505139526, 0.008512629993123974, 0.008490690225100647, 0.008476063713085097, 0.008468750457077321, 0.008461437201069545, 0.008446810689053993, 0.008446810689053993, 0.008424870921030666, 0.008410244409015116, 0.008410244409015116, 0.00836636487296846, 0.00836636487296846, 0.00835173836095291, 0.00835173836095291, 0.00835173836095291, 0.00835173836095291, 0.00835173836095291, 0.00835173836095291, 0.00835173836095291, 0.008344425104945135, 0.008344425104945135, 0.008337111848937359, 0.008329798592929583, 0.008329798592929583, 0.00832248533692181, 0.00832248533692181, 0.00832248533692181, 0.008315172080914032, 0.008307858824906256, 0.008293232312890706, 0.00828591905688293, 0.00828591905688293, 0.008278605800875154, 0.008278605800875154, 0.008278605800875154, 0.008278605800875154, 0.008271292544867378, 0.008271292544867378, 0.008263979288859604, 0.008256666032851826, 0.00824935277684405, 0.00824935277684405, 0.00824935277684405, 0.0082347262648285, 0.008227413008820725, 0.008205473240797399, 0.008205473240797399, 0.008198159984789623, 0.008198159984789623, 0.008190846728781846, 0.008190846728781846, 0.008190846728781846, 0.008190846728781846, 0.008190846728781846, 0.00818353347277407, 0.00818353347277407, 0.00818353347277407, 0.00818353347277407, 0.00818353347277407, 0.00818353347277407, 0.008176220216766296, 0.008176220216766296, 0.008176220216766296, 0.00816890696075852, 0.00816890696075852, 0.008161593704750744, 0.008154280448742968, 0.008146967192735194, 0.00813234068071964, 0.00813234068071964, 0.00813234068071964, 0.00813234068071964, 0.00813234068071964, 0.008125027424711865, 0.00811771416870409, 0.00811771416870409, 0.00811771416870409, 0.008110400912696315, 0.008110400912696315, 0.008110400912696315, 0.008110400912696315, 0.008110400912696315, 0.008110400912696315, 0.008110400912696315, 0.008095774400680763, 0.008095774400680763, 0.008095774400680763, 0.008095774400680763, 0.008095774400680763, 0.008081147888665213, 0.008081147888665213]
[(11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15f90>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (12.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be37b0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a4a0>), (11.15, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bf90>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15350>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c350>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b050b0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b057b0>), (11.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b153c0>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b580>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ac0>), (11.26, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b174a0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (11.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c120>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c80>), (11.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c2e0>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c200>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b350>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (11.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c120>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bba0>), (11.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dcf0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc5f0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b5f0>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65eb4f20>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b154a0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b4a0>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ba0>), (11.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b153c0>), (11.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15040>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15f20>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (11.14, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17900>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c430>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ac80>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a040>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b154a0>), (11.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15040>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c430>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15d60>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (11.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcdd0>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ac0>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15f90>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b154a0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17970>), (11.26, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b174a0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa510>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa350>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a5f0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b580>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b580>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65eb4f20>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc660>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc190>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ba0>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ba0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bcf0>), (11.25, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc040>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ac80>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ba0>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b350>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c350>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7200>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c430>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4db30>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7a50>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c0b0>), (11.07, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a040>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.64, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15dd0>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c890>), (11.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ac0>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b4a0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7200>), (11.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dcf0>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05200>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15f20>), (11.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dcf0>)]
Bin size: 100
===== for SMILES N#CC1=C(F)C=CC2=C1CN(CF)C1=NC3=C(C(=O)NC[C@H](C4=CC=CS4)O2)C(N)=NN3C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][#C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][C][N][Branch1][Ring1][C][F][C][=N][C][=C][Branch2][Ring1][Branch1][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][Ring2][Ring1][Branch1][C][Branch1][C][N][=N][N][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][N][C][=N][C][=C][C][Branch2][Ring1][S][N][C][C][=C][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][C][F][C][Branch1][=Branch1][C][=Branch1][C][=O][O][=C][Ring1][#Branch2][C][=C][Ring1][S][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][=N][C]
generated smiles CCOC(=O)N1C=NC=CC(NCC2=CC=C(C3=CC=C(F)C(C(=O)O)=C3)C=C2)=C1C=CC
added!
adding editted molecule!!!
===== for SMILES O=C1NCCCCN2C=C(C=N2)C2=CN=C3C=CC(=CC3=C2)CCN2N=C(C=CC2=O)C2=CC=C1C(C(F)(F)F)=C2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][N][=C][C][=C][C][=Branch1][Branch2][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][=C][Ring2][Ring2][C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][Ring2][Ring1][C][=C][Ring2][Ring1][=Branch1]
generated smiles O=C(O)C1=C2C=CC3=C1C=CC4=CC5=CC=C(N(C)C)C=C5N=C4C3=C2
added!
adding editted molecule!!!
===== for SMILES O=C1NCCCCN2C=C(C=N2)C2=CC3=CC(=CC=C3N=C2)CCN2N=C(C=CC2=O)C2=CC(C(O)(F)F)=C1C=C2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][C][=C][C][=Branch1][#Branch2][=C][C][=C][Ring1][=Branch1][N][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][Branch1][=Branch2][C][Branch1][C][O][Branch1][C][F][F][=C][Ring2][Ring2][=Branch1][C][=C][Ring1][#Branch2]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][Ring2][Ring1][C][=N][Ring2][Ring1][=Branch1]
generated smiles O=C(O)C1=C2C=CC3=C1C=CC4=CC5=CC=C(N(C)C)C=C5N=C4C3=N2
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CN(C)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][N][=C][Ring1][N][Ring1][#C]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Ring2][S][=C][C][=C][C][Branch2][Ring1][N][N][=N][C][=C][C][=C][Branch1][P][C][=C][N][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][Ring1][=C][C][=C][Ring1][S][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring2][Ring2][=Branch1]
generated smiles CC1=CC(F)=CC(=C1)C=NC=NC(=CC=CC(N=NC2=CC=C(C3=CN=C4C=CC=CC4=C32)C=C)=CC=CC5=CC)CC=C5
added!
adding editted molecule!!!
===== for SMILES CN1C=C(CN2C=C(C(=O)NC3=C(F)C=C(C4=CNC5=NC=NC(N)=C45)C(F)=C3)C(=O)C(C3=CC=C(F)C=C3)=C2)C=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=C][Branch2][=Branch1][Ring2][C][N][C][=C][Branch2][Ring2][#Branch1][C][=Branch1][C][=O][N][C][=C][Branch1][C][F][C][=C][Branch1][P][C][=C][N][C][=N][C][=N][C][Branch1][C][N][=C][Ring1][#Branch2][Ring1][#Branch1][C][Branch1][C][F][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][=C][Ring2][Ring2][Ring1][C][=N][Ring2][Ring2][=Branch2]<eom>
Output: 
output selfies [N][C][=C][C][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][Ring1][=N][C][=C][Ring2][Ring1][=Branch1][F]
generated smiles NC1=CC=C(C2=CC=C3C(=C2)C(F)(F)C4=CC(F)=CC=C43)C=C1F
added!
adding editted molecule!!!
===== for SMILES CCN1Cc2c(ccc(F)c2C#N)O[C@@H](c2cccs2)CNC(=O)c2c(N)nn3ccc1nc23 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][N][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][#N][O][C@@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][C][N][C][=Branch1][C][=O][C][C][Branch1][C][N][=N][N][C][=C][C][Ring2][Ring1][=C][=N][C][=Ring1][#Branch2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][N][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][Branch2][Ring2][Ring1][O][C][C@H1][C][C][C@][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][C][C@@H1][Ring2][Ring1][C][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring2][Ring1][=C][=C][Ring2][Ring2][=Branch1]
generated smiles CCOC(=O)NC=C1C=CC(C=CC=C(OC[C@H1]2CC[C@](C3=CC=CC=C3)(C4=CC=CC=C4)C[C@@H1]2NC5=C)C=CC=C5)C=CC1
added!
adding editted molecule!!!
===== for SMILES CCN1CC2=C(C=CC(F)=C2C#N)O[C@@H](C2=CC=CS2)CNC(=O)C2=C3N=C1C=CN3N=C2N =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][N][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][#N][O][C@@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][C][N][C][=Branch1][C][=O][C][=C][N][=C][Ring2][Ring1][#Branch2][C][=C][N][Ring1][=Branch1][N][=C][Ring1][=Branch2][N]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring2][=Branch1][N][C][=Branch1][C][=O][N][C][C][C][C@@H1][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][C][C][Ring2][Ring1][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][S][C]
generated smiles C1COC(=O)C2=CC=CC(NC(=O)NCCC[C@@H1]1NC3=CC=C(C(F)(F)F)C=C3CC)=C2C=CC
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=C][N][=C][Branch1][#Branch2][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=N][=C][Ring1][P][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][F]
generated smiles C12C=CC(F)=C(C3=CC=C4C=CN=C(NC5=CC=CC=C5)C4=C3C=C1)C=C2C6=CC=CC=C6F
added!
adding editted molecule!!!
===== for SMILES CC(=NF)C1=NN2C(CC3=C(F)C=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Ring1][=N][F][C][=N][N][C][Branch2][Ring1][Ring2][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][=C][N][=C][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch1][Ring1][C][#N][C][Ring1][Branch2][=N][Ring1][P]
generated smiles CC1=CC(F)=CC(=C1)C=NC(F)=C2C=CC=C(C#N)C2=N
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=NN(CCC3=CC=C4N=CC(C5=CN(CCO)N=C5)=CC4=C3)C(=O)C=C2)C=C1C(F)(F)F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][#C][C][=N][N][Branch2][Ring1][S][C][C][C][=C][C][=C][N][=C][C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][=C][C][Ring1][=C][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][P][C][Branch1][C][F][Branch1][C][F][F]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][C][=C][Branch2][Ring1][P][N][C][=Branch1][C][=O][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2][C][=C][Ring1][S][Ring2][Ring1][#Branch1][=C][C][=C][Ring2][Ring1][=N][Ring2][Ring1][P]
generated smiles CC(C)(C)C1=CC=CC2(C=CC=CN=CC3=CNC(=O)NC=CC=C3C=CC=CC(C(F)(F)F)=C)C=C21
added!
adding editted molecule!!!
===== for SMILES CC(N=O)C1=NN2C(=NN=C2CC2=C(F)C=C3N=CC=CC3=C2F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch1][Ring1][N][=O][C][=N][N][C][=Branch2][Ring1][=Branch2][=N][N][=C][Ring1][Branch1][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch2][Ring2][C][C][=C][C][=C][C][Branch2][Ring1][=Branch1][N][C][=Branch1][C][=O][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][=C][Ring2][Ring1][Ring1][=C][C][=C][Ring2][Ring1][#Branch2][F]
generated smiles C1C(C)(C2)C=NC(C=CC=CC1(NC(=O)C3=NC4=CC=CC=C4C=C3F)C)C=C2F
added!
adding editted molecule!!!
===== for SMILES N#CC1=C(F)C=CC2=C1CN(CCCO)C1=NC3=C(C(=O)NC[C@H](C4=CC=CS4)O2)C(N)=NN3C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][#C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][C][N][Branch1][Branch1][C][C][C][O][C][=N][C][=C][Branch2][Ring1][Branch1][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][Ring2][Ring1][#Branch1][C][Branch1][C][N][=N][N][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][N][C][=N][C][=C][C][Branch2][Ring1][#Branch2][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2][Cl][=C][C][=C][Ring2][Ring1][#Branch1][N][Ring2][Ring1][#Branch2][C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1]
generated smiles CCOC(=O)NC1=NC=CC(OC2=CC=CC=C2C3=CC=C(F)C(F)=C3Cl)C=C1NCC4=CC=C(F)C=C4
added!
adding editted molecule!!!
===== for SMILES CC(=Nc1ccc2ncc(-c3cnn(C)c3)cc2c1)c1csc(-c2ccc3nnc(Cc4ccc5ncccc5c4)n3n2)c1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch2][Ring1][N][=N][C][=C][C][=C][N][=C][C][Branch1][O][C][C][=N][N][Branch1][C][C][C][=Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][S][C][=C][S][C][Branch2][Ring1][S][C][C][=C][C][=N][N][=C][Branch1][S][C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][N][Ring1][S][N][=Ring2][Ring1][Ring2][=C][Ring2][Ring1][=Branch2]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][C][=C][C][N-1][C][Branch2][Branch1][S][C][=C][N][=C][Branch2][Ring2][P][C][=C][N][=C][Branch2][Ring1][S][C][=C][C][=C][C][=Branch1][Ring2][=N][Ring1][=Branch1][C][=Branch1][C][=O][C][=N][C][Branch1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][Ring1][S][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][P][C][=C][Ring2][Ring2][=Branch1][C][=C][Ring2][Ring2][#Branch2][C][=C][Ring2][Ring2][=C][C]
generated smiles C1C2=CC(C)=CC3[N-1]C(C=CN=C(C=CN=C(C4=CC=C5C(=N4)C(=O)C=NCC6=CC=CC=C6C=C5)CC=C3)C=CC)=C2C=C1C
added!
adding editted molecule!!!
===== for SMILES NC(=O)c1ccc(-c2cnc3nnn(C(F)c4c(F)cc5ncc(F)cc5c4F)c3n2)cc1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][N][C][=C][N][=C][N][=N][N][Branch2][Ring1][#Branch2][C][Branch1][C][F][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][C][F][=C][C][Ring1][#Branch1][=C][Ring1][N][F][C][Ring2][Ring1][Ring2][=N][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][=C][F]<eom>
Output: 
output selfies [F][C][=C][C][=C][Branch2][Ring2][C][C][=C][C][=N][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][C][=C][Ring1][#Branch2][N][=C][Ring1][=C][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][=C][Ring2][Ring1][=N]
generated smiles FC1=CC=C(C=CC2=NC3=CC(C(F)(F)F)=CC=C3N=C2C4=CC=CCF)C4C=C1
added!
adding editted molecule!!!
===== for SMILES COC1=CC2=CC([C@H](C)N=C(C)C3=CN=C4N=NN(CC5=CC6=CC=CN=C6C=C5F)C4=N3)=CC=C2N=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=C][C][Branch2][Ring2][#Branch2][C@H1][Branch1][C][C][N][=C][Branch1][C][C][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1][=C][C][=C][Ring2][Ring1][S][N][=C][Ring2][Ring2][Ring2]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][N][=C][Branch2][Ring1][N][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][=C][Ring1][S][C][Ring2][Ring1][#Branch1][=C][Ring2][Ring1][O][=C][Ring2][Ring1][S]
generated smiles C1OC=CC=CC1C=CC2=CN=C3N=C(NC=CC4=C(C=CC5=CC=C6N=CC=CC6=C5)C=C4)C3=C2C
added!
adding editted molecule!!!
===== for SMILES NC(=O)C1=CC=C(C2=CN=C3N=NN(C(F)C4=C(F)C5=CC(F)=CN=C5C=C4F)C3=N2)C=C1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][N][C][=C][N][=C][N][=N][N][Branch2][Ring1][#Branch2][C][Branch1][C][F][C][=C][Branch1][C][F][C][=C][C][Branch1][C][F][=C][N][=C][Ring1][#Branch1][C][=C][Ring1][N][F][C][Ring2][Ring1][Ring2][=N][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][=C][F]<eom>
Output: 
output selfies [N][C][=Branch1][C][=O][C][=C][C][Branch1][C][F][=C][C][Branch2][Ring2][=Branch1][N][C][=N][C][=C][C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][=N][C][=C][N][=C][Branch1][C][F][C][=C][Ring2][Ring1][C][Ring1][#Branch1][=C][Ring2][Ring1][O][F][=C][Ring2][Ring1][P]
generated smiles N1C(=O)C=CC(F)=CC1NC=NC=CC(C2=CC=CC=C2)=NC3=CN=C(F)C=C3
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=CC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=C][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Branch1][=Branch1][=C][C][=C][C][=C][Branch2][Ring2][=Branch1][N][C][=C][C][=C][Branch2][Ring1][Branch2][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][N][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][#C][C][=C][Ring2][Ring1][Branch1][C][=C][Ring2][Ring1][=N][C][=C][Ring2][Ring2][C][C][N][Ring2][Ring2][=Branch1]
generated smiles CC1=CC(F)=CC(=C1)C=NC=NC(=CC=CC=C2NC=CC=C(C3=CC=CC(F)=C3NC4=CC=CC=C4)C2C=C)CN
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Ring2][S][=C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][N][=C][Ring1][O][C][=C][C][=C][Branch1][S][N][C][C][N][Branch1][=Branch1][C][C][C][Ring1][Ring1][C][C][Ring1][=Branch2][C][=C][Ring1][#C][C][=C][Ring2][Ring1][P][C][=C][Ring2][Ring2][=Branch1][C]
generated smiles CC1=CC(F)=CC(=C12)C=NC=NC(=CC3=C(F)C=CC=C3N=CC4=CC=C(N5CCN(C6CC6)CC5)C=C4C=C2C)CC
added!
adding editted molecule!!!
===== for SMILES O=C(NC1=CC=C(OC2=CC=NC(NC(=O)N3CCC3)=C2)C(F)=C1)C1=CN(CC2CC2)C(=O)N(C2=CC=C(F)C=C2)C1=O =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][Branch2][Ring2][#Branch1][N][C][=C][C][=C][Branch2][Ring1][#Branch1][O][C][=C][C][=N][C][Branch1][N][N][C][=Branch1][C][=O][N][C][C][C][Ring1][Ring2][=C][Ring1][=N][C][Branch1][C][F][=C][Ring2][Ring1][Branch1][C][=C][N][Branch1][#Branch1][C][C][C][C][Ring1][Ring1][C][=Branch1][C][=O][N][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][Ring2][Ring1][C][=O]<eom>
Output: 
output selfies [C][C][C][C][=N][C][Branch2][Ring2][=Branch1][C][=C][C][=C][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][Cl][C][=C][Ring2][Ring1][C][=C][C][=C][Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][C][C][N][C][C][C][C][C][Ring1][=Branch1]
generated smiles C1CC2C=NC3(C=CC=C(NC4=CC=C(C(F)(F)F)C=C4Cl)C3=CC=C2)C(=O)N1CCCN5CCCCC5
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=CN3C(SC4=CC=C5N=CC6=C(OCC(=O)N6C)C5=C4)=NN=C3C(F)=C2)S1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][P][C][=C][N][C][Branch2][Ring1][N][S][C][=C][C][=C][N][=C][C][=C][Branch1][O][O][C][C][=Branch1][C][=O][N][Ring1][#Branch1][C][C][Ring1][N][=C][Ring1][S][=N][N][=C][Ring2][Ring1][=Branch1][C][Branch1][C][F][=C][Ring2][Ring1][O][S][Ring2][Ring1][S]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][=Branch1][C][=O][N][C][=N][C][=C][C][=C][Branch1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][C][N][=N][NH1][C][Ring1][=Branch2][=O][C][=C][Ring1][P][Ring2][Ring1][Branch1].[N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][#Branch1][=Branch1][C][=C][C][=C][C][=Branch2][=Branch1][=Branch1][=C][N][=C][Branch2][Branch1][O][C][=C][C][=C][Branch2][Ring2][P][N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring1][#C][C][=C][N][=C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][=C][C][=C][C][=C][Ring1][P][Ring1][=Branch1][C][=C][Ring2][Ring1][#Branch1][C][=C][Ring2][Ring1][S][C][=C][Ring2][Ring2][=Branch1][C][=C][Ring2][Ring2][=N][=C][Ring2][Branch1][Ring1]
generated smiles CC(C)C(=O)N1C=NC=C2C=C(C3=CC4=CC=C3CN=N[NH1]C4)OC=C21.NC(=O)C=CC=C5CC=CC=C6C(=CN=C(C=CC=C(NC(=O)C=CC=CC(C7=CN=C(C8=CC=C(F)C=C8)C9=CC=CC=C79)C=C)C)C6C)C5=C
added!
adding editted molecule!!!
===== for SMILES CC(=O)N1CCC2=CC=C(NC3=NC=C(Cl)C(NC4=CC=CC=C4C(=O)NN)=N3)C=C2C(C)C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][N][C][C][C][=C][C][=C][Branch2][Ring1][#C][N][C][=N][C][=C][Branch1][C][Cl][C][Branch1][S][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][N][N][=N][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch2][C][Branch1][C][C][C][Ring2][Ring1][#C]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][C][=C][Branch1][#C][N][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=Branch2][N][=C][N][Branch1][=N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1][Cl][C][=Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1]
generated smiles CC(C1)CC2=C(NC3=NC4=CC=CC=C4C3)N=CN(C5=CC=C(Cl)C=C5Cl)C2C(=O)N1C6=CC=C(Cl)C=C6
added!
adding editted molecule!!!
===== for SMILES NC1=NN2C=CC3=NC2=C1C(=O)NC[C@H](C1=CC=CS1)OC1=C(CN3CCCO)C(N=O)=C(F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=N][N][C][=C][C][=N][C][Ring1][=Branch1][=C][Ring1][=Branch2][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][C][=C][Branch1][#Branch2][C][N][Ring2][Ring1][Ring1][C][C][C][O][C][Branch1][Ring1][N][=O][=C][Branch1][C][F][C][=C][Ring1][#C]<eom>
Output: 
output selfies [C][C][=C][Branch1][=Branch1][C][=Branch1][C][=O][O][C][=Branch1][C][=O][C][=C][N][Ring1][#Branch2][C][=C][C][=C][Branch1][S][N][C][C][N][Branch1][=Branch1][C][Branch1][C][C][C][C][C][Ring1][=Branch2][C][=C][Ring1][#C]
generated smiles CC1=C(C(=O)O)C(=O)C=CN1C2=CC=C(N3CCN(C(C)C)CC3)C=C2
added!
adding editted molecule!!!
===== for SMILES C[C@@H](C1=CC2=CC(C3=CN(C)N=C3)=CN=C2C=C1)C1=NN=C2C(F)=CC(C3=CN(C)C=N3)=CN21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C@@H1][Branch2][Ring1][O][C][=C][C][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][N][=C][Ring1][N][C][=C][Ring1][S][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][N][Branch1][C][C][C][=N][Ring1][=Branch1][=C][N][Ring1][=N][Ring1][S]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][Ring1][=C][C][=C][Ring2][Ring1][Branch2][N][C][=N][C][=C][Branch1][=Branch2][C][Branch1][C][C][Branch1][C][C][C][C][=C][Ring1][#Branch2]
generated smiles C1C=CC(F)=C(C2=CC3=CC(=C2)C(F)(F)C4=CC(F)=CC=C43)C=C1NC5=NC=C(C(C)(C)C)C=C5
added!
adding editted molecule!!!
===== for SMILES CC(=O)C(F)(F)C1=CC2=CC=C1C(=O)NCCCCN1C=C(C=N1)C1=CN=C3C=CC(=CC3=C1)CCN1N=C2C=CC1=O =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][C][Branch1][C][F][Branch1][C][F][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][N][=C][C][=C][C][=Branch1][Branch2][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][C][N][N][=C][Ring2][Ring1][#C][C][=C][C][Ring1][=Branch1][=O]<eom>
Output: 
output selfies [C][C][=Branch1][C][=O][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][=C][Ring1][P][N].[O][=C][Branch1][C][O][C][Branch1][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2]
generated smiles CC(=O)C1=CC2=CC3=CC=C(N(C)C)C=C3N=C2C=C1N.O=C(O)C(O)C(=O)C4=CC=C5C=CC=CC5=C4
added!
adding editted molecule!!!
===== for SMILES CC(=NN)C1=CN=C2N=NN(CC3=CC4=CC=CN=C4C=C3F)C2=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Ring1][=N][N][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][Branch1][N][C][=N][C][=C][C][=C][Branch1][C][F][C][=C][C][Ring1][#Branch1][=N][Ring1][O][C][=C][Ring2][Ring1][Ring1].[C][C][=C][C][=C][Branch2][Ring1][#Branch1][C][=C][C][=N][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][N][=C][Ring1][O][C][=C][Ring2][Ring1][Ring2]
generated smiles C1C=CC(F)=C1NC2=NC=C3C=C(F)C=CC3=N2.C4C=CC=CC=CC5=NC6=CC(F)=CC=C6N=C5C=C4
added!
adding editted molecule!!!
===== for SMILES CC1=NOC(C2=CN3C(=NN=C3[C@@H](F)C3=CC4=CC(ON)=CN=C4C=C3)C(N)=C2)=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=N][O][C][Branch2][Ring2][O][C][=C][N][C][=Branch2][Ring1][N][=N][N][=C][Ring1][Branch1][C@@H1][Branch1][C][F][C][=C][C][=C][C][Branch1][Ring1][O][N][=C][N][=C][Ring1][Branch2][C][=C][Ring1][N][C][Branch1][C][N][=C][Ring2][Ring1][Branch2][=C][Ring2][Ring1][=N]<eom>
Output: 
output selfies [N][C][=N][C][=C][C][=C][Branch1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][NH1][Ring1][#Branch2][C][=C][Ring1][P][C][=C][Ring2][Ring1][Branch1][C][=C][C][=C][Branch1][C][N][C][=C][Ring1][#Branch1]
generated smiles N1C2=NC=CC=C(C3=CC=CC=C3C(=O)[NH1])C=C2C=C1C4=CC=C(N)C=C4
added!
adding editted molecule!!!
===== for SMILES CC(=NNC(N)=O)C1=CN=C2N=NN(CC3=CC4=CC=CN=C4C=C3F)C2=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Branch2][=N][N][C][Branch1][C][N][=O][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch1][=C][N][C][=C][C][=C][Branch1][C][N][C][=C][Ring1][#Branch1][F][=N][C][=C][Ring1][#C][C][=C][C][=C][N][=C][N][=C][Branch1][C][N][N][=C][Ring1][#Branch1][Ring1][#Branch2]
generated smiles CC(C)(C)C1=NC(NC2=CC=C(N)C=C2F)=NC=C1C=C3C=CN=CN=C(N)N=C3
added!
adding editted molecule!!!
===== for SMILES CC(=O)C1=C(F)C=CC2=C1CN(CCCO)C1=NC3=C(C(=O)NC[C@H](C4=CC=CS4)O2)C(N)=NN3C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][C][N][Branch1][Branch1][C][C][C][O][C][=N][C][=C][Branch2][Ring1][Branch1][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][Ring2][Ring1][#Branch1][C][Branch1][C][N][=N][N][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring2][S][N][C][=Branch1][C][=O][N][Branch1][=N][C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][C][C][N][Branch2][Ring1][Branch1][C][C][C][N][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][C][C][Ring1][N][C][C][Ring2][Ring1][C][=C][Ring2][Ring2][C]
generated smiles C1C(C)C(=O)C=CC2=CC1(NC(=O)N(CC3=CC=C(F)C=C3)CCCNC4CCN(C5=CC=CC=C5)CC4CC)C2
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C2=CC(F)=CN=C2C=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][=Branch1][C][=C][Branch1][C][F][C][=C][C][Branch1][C][F][=C][N][=C][Ring1][#Branch1][C][=C][Ring1][N][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [N][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch2][Ring1][=Branch1][N][=C][C][=C][C][=C][Branch1][C][F][C][Branch1][=Branch1][C][=Branch1][C][=O][O][=C][Ring1][#Branch2][F][C][=C][Ring2][Ring1][Ring1][Ring2][Ring1][Branch2]
generated smiles NC1=NC(F)=CC2=CC=C(N=CC3=CC=C(F)C(C(=O)O)=C3F)C=C21
added!
adding editted molecule!!!
===== for SMILES CC(C1=NN=C2C(F)=CC(C3=CN(C)N=C3)=CN21)C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][=N][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][N][Ring1][=N][Ring1][S][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][=N][C][Branch2][Ring2][C][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][C][Ring1][#Branch1][=N][C][Ring1][O][=C][Ring1][#C][C][=C][C][=C][Branch1][C][N][C][=C][N][=C][Ring1][#Branch1][Ring2][Ring1][S]
generated smiles CC(C1)C=NC(C2=CC=CC(F)=C2N3C=C4C=C(F)C=CC4=NC3=CC=C)C5=C(N)C=CN=C51
added!
adding editted molecule!!!
fp_scores_to_top [0.15172413793103448, 0.1746987951807229, 0.6481481481481481, 0.1476510067114094, 0.1678832116788321, 0.16265060240963855, 0.17142857142857143, 0.06666666666666667, 0.18791946308724833, 0.19444444444444445, 0.1588235294117647, 0.16981132075471697, 0.16393442622950818, 0.17117117117117117, 0.1079136690647482, 0.18309859154929578, 0.1870967741935484, 0.2064516129032258, 0.17307692307692307, 0.10256410256410256, 0.11450381679389313, 0.13432835820895522, 0.09836065573770492, 0.16766467065868262, 0.10084033613445378, 0.10317460317460317, 0.1417910447761194, 0.14492753623188406, 0.15789473684210525, 0.1625, 0.16201117318435754, 0.12686567164179105, 0.09836065573770492, 0.017857142857142856, 0.19736842105263158, 0.16129032258064516, 0.15702479338842976, 0.12666666666666668, 0.08396946564885496, 0.18072289156626506, 0.6194690265486725, 0.15625, 0.0851063829787234, 0.12698412698412698, 0.18064516129032257, 0.16, 0.18064516129032257, 0.14728682170542637, 0.2138364779874214, 0.12987012987012986, 0.10743801652892562, 0.09448818897637795, 0.13736263736263737, 0.18181818181818182, 0.05, 0.14772727272727273, 0.1310344827586207, 0.1328125, 0.12037037037037036, 0.16058394160583941, 0.058333333333333334, 0.18181818181818182, 0.1282051282051282, 0.14666666666666667, 0.17791411042944785, 0.15517241379310345, 0.17647058823529413, 0.16546762589928057, 0.17058823529411765, 0.1592356687898089, 0.15853658536585366, 0.16326530612244897, 0.17123287671232876, 0.1306532663316583, 0.18840579710144928, 0.11707317073170732, 0.18181818181818182, 0.16568047337278108, 0.13970588235294118, 0.10497237569060773, 0.16666666666666666, 0.1781609195402299, 0.14925373134328357, 0.16666666666666666, 0.15, 0.16025641025641027, 0.15343915343915343, 0.1891891891891892, 0.15083798882681565, 0.11888111888111888, 0.17714285714285713, 0.14965986394557823, 0.15384615384615385, 0.15428571428571428, 0.16201117318435754, 0.16666666666666666, 0.16025641025641027, 0.13829787234042554, 0.22058823529411764, 0.20496894409937888]
top 70 [ 2 40 98 48 17 99 34  9 87 74  8 16 15 76 53 61 39 46 44 81 64 90 66  1
 18  6 72 13 68 11  4 23 80 95 83 77 67 12 71  5 29 94 30 35 59 85 96 45
 69 10 70 28 36 41 65 93 92 86  0 88 84 91 82 55  3 47 63 27 26 78]
len offspring_mol 70
187
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
CC(=O)N1Cc2c(ccc(F)c2C#N)O[C@@H](F)CNC(=O)c2c(N)nn3ccc1nc23

Boltz running on GPU 1
10.77
640/1000 | avg_top1: 12.160 | avg_top10: 11.911 | avg_top100: 11.431 | avg_sa: 3.586 | div: 0.814
{'avg_top1': 12.16, 'avg_top10': 11.911000000000001, 'avg_top100': 11.430599999999997, 'auc_top1': 7.6306, 'auc_top10': 7.471314999999994, 'auc_top100': 7.049665309523809, 'avg_sa': 3.586372421862161, 'diversity_top100': 0.8143135216163863, 'n_oracle': 640}
Already in buffer
Already in buffer
CO/N=C(\F)c1csc(-c2ccc3cc(F)c(Cc4ccc5ncccc5c4)n3n2)c1

Boltz running on GPU 2
11.32
Already in buffer
C[C@H](c1c(F)cc2ncccc2c1F)c1nnc2ccc(-c3cn(C)cc3F)nn12

Boltz running on GPU 2
11.09
N#Cn1nnc2ncc(-c3ccc(C(N)=O)c(-c4ccncc4)c3)nc21

Boltz running on GPU 1
7.68
Already in buffer
Already in buffer
Fc1cc2ncccc2cc1Cn1nnc2ncc(-c3ccncc3)nc21

Boltz running on GPU 1
10.49
COCCOc1cnc2ccn(C(F)c3c(F)cc4ncc(F)cc4c3F)c(=O)c2c1

Boltz running on GPU 1
10.23
NOc1cnc2ccc([C@H](F)c3nnc4c(N)cc(F)cn34)cc2c1

Boltz running on GPU 2
10.61
Already in buffer
COc1cnc2cc(F)c(C(C)n3nnc4ncc(-c5ccc(C(N)=O)c(F)c5)nc43)c(F)c2c1

Boltz running on GPU 1
11.6
Cn1cc(-c2cccc(NC(=O)c3c(I)ccn(-c4ccc(F)cc4)c3=O)c2)cn1

Boltz running on GPU 2
8.71
Cc1cc(-c2cc(F)c3nnc([C@@H](C)c4ccc5ncc(C(F)=NNC(N)=O)cc5c4)n3c2)on1

Boltz running on GPU 2
11.22
COc1cnc2ccc([C@H](C)c3nnc4c(F)cc(-c5cc(C)cs5)cn34)cc2c1

Boltz running on GPU 1
10.96
650/1000 | avg_top1: 12.160 | avg_top10: 11.911 | avg_top100: 11.439 | avg_sa: 3.606 | div: 0.813
{'avg_top1': 12.16, 'avg_top10': 11.911000000000001, 'avg_top100': 11.439299999999996, 'auc_top1': 7.752200000000001, 'auc_top10': 7.5904249999999935, 'auc_top100': 7.164014809523809, 'avg_sa': 3.6063136764926607, 'diversity_top100': 0.8125331255424671, 'n_oracle': 650}
COc1cnc2ccc([C@H](C)c3nnc4c(F)cc(-c5cc(F)no5)cn34)cc2c1

Boltz running on GPU 2
11.11
Already in buffer
COc1cc2nccc(Oc3ccc(NC(=O)c4c(I)ccn(C)c4=O)cc3F)c2cc1OC

Boltz running on GPU 2
9.24
Already in buffer
COC1=c2cc([C@H](C)c3nnc4c(F)cc(-c5cc(C)no5)cn34)ccc2=NC1

Boltz running on GPU 2
9.81
Cn1cnc(-c2cc(F)c3nnc([C@@H](F)c4ccc5ncc(C6=C(F)CN=C6)cc5c4)n3c2)c1

Boltz running on GPU 1
11.06
CN1C=NOC(c2cnc3ccc([C@H](F)c4nnc5c(N)cc(N)cn45)cc3c2)=C1

Boltz running on GPU 2
11.7
Cn1cc(-c2cc(F)c3nnc(-c4cnc5nnn(Cc6cc7cccnc7cc6F)c5n4)n3c2)cn1

Boltz running on GPU 1
11.9
Already in buffer
C1=CS[C@@H](c2cccs2)C=C1

Boltz running on GPU 1
6.64
COOc1cnc2ccc([C@H](C)c3nnc4c(F)cc(-c5cc(C)no5)cn34)cc2c1

Boltz running on GPU 2
11.22
C/C(=N\OCl)c1ccc2ncc(Cc3ccc(F)cc3)n2n1

Boltz running on GPU 2
8.78
C[C@@H](c1ccc2ncc(-c3cnn(C)c3)cc2c1)c1nnc2c(F)cc(-c3cn(N)cn3)cn12

Boltz running on GPU 2
12.16
660/1000 | avg_top1: 12.160 | avg_top10: 11.958 | avg_top100: 11.465 | avg_sa: 3.618 | div: 0.810
{'avg_top1': 12.16, 'avg_top10': 11.958, 'avg_top100': 11.464999999999998, 'auc_top1': 7.873800000000001, 'auc_top10': 7.7097699999999945, 'auc_top100': 7.278536309523809, 'avg_sa': 3.617955527073455, 'diversity_top100': 0.8096253388997218, 'n_oracle': 660}
Already in buffer
Already in buffer
Already in buffer
Already in buffer
C[C@@H](Oc1cc(C(=O)NCO)nnc1N)c1c(Cl)ccc(F)c1Cl

Boltz running on GPU 2
9.74
COc1cnc2ccc([C@H](C)c3nnc4c(F)cc(C5=NN=C6C=CC(c7cc(C)cs7)=NN6N5)cn34)cc2c1

Boltz running on GPU 2
9.86
Already in buffer
C[C@@H](Oc1cc(C(=O)Nc2ccc(C(=O)N3CCN(C)CC3)cc2)nnc1N)C1=CCN(C)C1

Boltz running on GPU 2
8.2
OCCCN1N=CC=C(c2ccc3nnc(Cc4ccc5ncccc5c4)n3n2)S1

Boltz running on GPU 2
10.8
Already in buffer
Cn1cc(-c2cc(F)c3nnc(Sc4cnc5ncc(Cc6cc(Cl)c7ncccc7c6)n5n4)n3c2)cn1

Boltz running on GPU 2
10.43
CN1CCC(Nc2cnc3ccc(-c4ccc5ncccc5c4)cc3c2)CC1

Boltz running on GPU 2
8.68
CNC(=O)c1cc(O[C@H](C)c2c(Cl)ccc(F)c2Cl)c(N)nn1

Boltz running on GPU 2
9.29
Already in buffer
Already in buffer
[C-]#[N+]C1=NCC2N=NN(C(C)c3ccc(Nc4ncc(Cl)c(Nc5ccccc5C(=O)NN)n4)cc3)C12

Boltz running on GPU 2
10.89
Already in buffer
COc1cnc2ccc([C@H](C)c3ccc4nnc(Cc5ccc6ncccc6c5)n4n3)cc2c1

Boltz running on GPU 2
10.91
CC=CC1=C(NCc2ccc(-c3ccc(F)c(C(=O)O)c3)cc2)C=CN=CN1C(=O)OCC

Boltz running on GPU 2
8.76
670/1000 | avg_top1: 12.160 | avg_top10: 11.958 | avg_top100: 11.465 | avg_sa: 3.618 | div: 0.810
{'avg_top1': 12.16, 'avg_top10': 11.958, 'avg_top100': 11.464999999999998, 'auc_top1': 7.995400000000002, 'auc_top10': 7.829349999999994, 'auc_top100': 7.393186309523808, 'avg_sa': 3.617955527073455, 'diversity_top100': 0.8096253388997218, 'n_oracle': 670}
CC(=O)C(F)(F)c1ccc(C2=C(F)C3N=NN(C(F)c4c(F)cc5ncc(F)cc5c4F)C3=N2)cc1F

Boltz running on GPU 2
9.58
CN1C=CC(c2cccc(C#N)c2)C=N1

Boltz running on GPU 1
6.13
Cc1ccc(-c2cnc3nnn(C)c3n2)cc1F

Boltz running on GPU 2
6.96
FCc1cc2cccnc2cc1F

Boltz running on GPU 1
7.13
Already in buffer
Already in buffer
Already in buffer
Fc1cnc2cc(F)c(C(F)n3nnc4ncc(F)nc43)c(F)c2c1

Boltz running on GPU 1
10.57
Already in buffer
Already in buffer
Already in buffer
Already in buffer
c1cnc2ccc(-c3cnc4ccc(Sc5nnc6ccc(-c7cn[nH]c7)cn56)cc4c3)cc2c1

Boltz running on GPU 2
10.3
COc1ccc2c(OCCc3ccc4ncccc4c3)ccnc2c1

Boltz running on GPU 2
8.71
CN1C(=O)COc2c1cnc1ccc(SF)cc21

Boltz running on GPU 1
8.67
CCc1cc2ncccc2cc1Cn1nnc2ncc(C(C)=NF)nc21

Boltz running on GPU 1
9.76
NC(=O)c1ccc(-c2cnccn2)cc1-c1ccncc1

Boltz running on GPU 2
6.15
680/1000 | avg_top1: 12.160 | avg_top10: 11.958 | avg_top100: 11.465 | avg_sa: 3.618 | div: 0.810
{'avg_top1': 12.16, 'avg_top10': 11.958, 'avg_top100': 11.464999999999998, 'auc_top1': 8.117000000000003, 'auc_top10': 7.948929999999994, 'auc_top100': 7.5078363095238085, 'avg_sa': 3.617955527073455, 'diversity_top100': 0.8096253388997218, 'n_oracle': 680}
NNC(=O)c1ccccc1Nc1nc(NF)ncc1Cl

Boltz running on GPU 2
9.18
Cc1cc(F)cc(C=NC(F)=C2C=CC=C(C#N)C2=N)c1

Boltz running on GPU 2
7.14
[(12.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be37b0>), (12.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a270>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (11.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c120>), (11.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b270>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15350>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afce40>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12eb0>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b350>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4db30>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c74a0>), (11.73, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa270>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c0b0>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c200>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3890>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc80>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b057b0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7200>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (11.64, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15dd0>), (11.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15040>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c970>), (11.59, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8cf0>), (11.58, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bc80>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ac0>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc820>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a200>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c3c0>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15b30>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7740>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc5f0>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b154a0>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b050b0>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ccf0>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa350>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bac5f0>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcdd0>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7a50>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c430>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15f20>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bc10>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15890>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc740>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8dd0>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b4a0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15ba0>), (11.26, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b174a0>), (11.25, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc040>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa510>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ca50>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ad60>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba89e0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b153c0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa040>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bcf0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a4a0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bba0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a5f0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b5f0>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c740>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ac80>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ba0>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05eb0>), (11.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dcf0>), (11.15, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bf90>), (11.14, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17900>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c890>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b580>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65eb4f20>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f90>), (11.11, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c2e0>), (11.11, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c900>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05200>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcb30>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17970>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c190>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c350>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc660>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a6d0>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c200>)]
[0.008866398827530757, 0.008866398827530757, 0.008786192917085003, 0.008713278453043408, 0.008684112667426771, 0.008676821221022611, 0.008676821221022611, 0.008662238328214293, 0.008662238328214293, 0.008647655435405974, 0.008611198203385177, 0.008603906756981018, 0.008596615310576858, 0.008596615310576858, 0.008596615310576858, 0.008560158078556061, 0.008560158078556061, 0.008560158078556061, 0.008552866632151901, 0.008545575185747743, 0.008538283739343584, 0.008538283739343584, 0.008538283739343584, 0.008530992292939422, 0.008530992292939422, 0.008530992292939422, 0.008523700846535264, 0.008523700846535264, 0.008509117953726945, 0.008509117953726945, 0.008509117953726945, 0.008501826507322785, 0.008487243614514467, 0.008465369275301988, 0.008458077828897828, 0.00845078638249367, 0.00844349493608951, 0.008436203489685351, 0.008421620596877033, 0.008421620596877033, 0.008399746257664554, 0.008385163364856235, 0.008385163364856235, 0.008341414686431278, 0.008341414686431278, 0.008341414686431278, 0.00832683179362296, 0.00832683179362296, 0.00832683179362296, 0.00832683179362296, 0.00832683179362296, 0.00832683179362296, 0.0083195403472188, 0.0083195403472188, 0.008312248900814641, 0.008304957454410481, 0.008304957454410481, 0.008297666008006323, 0.008297666008006323, 0.008297666008006323, 0.008290374561602162, 0.008290374561602162, 0.008283083115198002, 0.008268500222389685, 0.008261208775985525, 0.008261208775985525, 0.008253917329581365, 0.008253917329581365, 0.008253917329581365, 0.008253917329581365, 0.008253917329581365, 0.008246625883177207, 0.008246625883177207, 0.008239334436773047, 0.008239334436773047, 0.008232042990368888, 0.008224751543964728, 0.008224751543964728, 0.008224751543964728, 0.008210168651156409, 0.00820287720475225, 0.008181002865539772, 0.008181002865539772, 0.008181002865539772, 0.008181002865539772, 0.008173711419135614, 0.008173711419135614, 0.008166419972731452, 0.008166419972731452, 0.008166419972731452, 0.008166419972731452, 0.008159128526327292, 0.008159128526327292, 0.008159128526327292, 0.008159128526327292, 0.008159128526327292, 0.008159128526327292, 0.008151837079923134, 0.008151837079923134, 0.008151837079923134, 0.008144545633518975, 0.008144545633518975, 0.008137254187114815, 0.008129962740710655, 0.008122671294306497, 0.008108088401498178, 0.008108088401498178, 0.008108088401498178, 0.008108088401498178, 0.008108088401498178, 0.008100796955094018, 0.008100796955094018, 0.008093505508689858, 0.008093505508689858, 0.008093505508689858, 0.008086214062285699, 0.008086214062285699, 0.008086214062285699, 0.008086214062285699, 0.008086214062285699]
[(11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bac5f0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15890>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ba0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (11.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c120>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcb30>), (11.26, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b174a0>), (12.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be37b0>), (11.14, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17900>), (11.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c120>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bba0>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15350>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15890>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcb30>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c970>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bcf0>), (11.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15040>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c0b0>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f90>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ba0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15f20>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ad60>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b057b0>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b154a0>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc80>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b580>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b270>), (12.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a270>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b050b0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bc10>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c190>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bba0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ad60>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a4a0>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc80>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (11.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcdd0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c430>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a5f0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (12.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be37b0>), (12.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be37b0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7740>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3890>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15890>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7740>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a6d0>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc660>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c200>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05eb0>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc740>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a4a0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15f20>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7740>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c190>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f90>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c200>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa510>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05200>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4db30>), (12.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be37b0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.11, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c900>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (11.15, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bf90>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c970>), (11.25, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc040>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b154a0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a5f0>), (11.15, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bf90>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b580>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b5f0>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c350>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12eb0>), (11.09, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c200>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c890>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7200>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7a50>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05eb0>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b350>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b350>), (11.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcdd0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15ba0>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc740>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa040>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7200>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a200>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c740>), (11.26, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b174a0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>)]
Bin size: 100
===== for SMILES C[C@@H](c1ccc2ncc(-c3cnn(C)c3)cc2c1)c1nnc2c(F)cc(-c3cn(N)cn3)cn12 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C@@H1][Branch2][Ring1][O][C][=C][C][=C][N][=C][C][Branch1][O][C][C][=N][N][Branch1][C][C][C][=Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][S][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][N][Branch1][C][N][C][=N][Ring1][=Branch1][=C][N][Ring1][S][Ring1][=N]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][Branch2][Ring1][S][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][N][N][C][=N][N][Branch1][C][C][C][=N][Ring1][#Branch1][=C][C][=C][C][=C][C][Ring1][=Branch1][=N][Ring2][Ring1][Ring1][=C][Ring2][Ring1][#Branch2]
generated smiles CC(C)(C)C=CC=CC(C1=CC2=CC(=C1)C(N3C=NN(C)C=N3)=C4C=CC=CC4)=N2
added!
adding editted molecule!!!
===== for SMILES N#CC1=C(F)C=CC2=C1CN(CF)C1=NC3=C(C(=O)NC[C@H](C4=CC=CS4)O2)C(N)=NN3C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][#C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][C][N][Branch1][Ring1][C][F][C][=N][C][=C][Branch2][Ring1][Branch1][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][Ring2][Ring1][Branch1][C][Branch1][C][N][=N][N][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][N][C][=N][C][=C][C][Branch2][Ring1][S][N][C][C][=C][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][C][F][C][Branch1][=Branch1][C][=Branch1][C][=O][O][=C][Ring1][#Branch2][C][=C][Ring1][S][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][=N][C]
generated smiles CCOC(=O)N1C=NC=CC(NCC2=CC=C(C3=CC=C(F)C(C(=O)O)=C3)C=C2)=C1C=CC
added!
adding editted molecule!!!
===== for SMILES O=C1NCCCCN2C=C(C=N2)C2=CN=C3C=CC(=CC3=C2)CCN2N=C(C=CC2=O)C2=CC=C1C(C(F)(F)F)=C2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][N][=C][C][=C][C][=Branch1][Branch2][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][=C][Ring2][Ring2][C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][Ring2][Ring1][C][=C][Ring2][Ring1][=Branch1]
generated smiles O=C(O)C1=C2C=CC3=C1C=CC4=CC5=CC=C(N(C)C)C=C5N=C4C3=C2
added!
adding editted molecule!!!
===== for SMILES O=C1NCCCCN2C=C(C=N2)C2=CC3=CC(=CC=C3N=C2)CCN2N=C(C=CC2=O)C2=CC(C(O)(F)F)=C1C=C2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][C][=C][C][=Branch1][#Branch2][=C][C][=C][Ring1][=Branch1][N][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][Branch1][=Branch2][C][Branch1][C][O][Branch1][C][F][F][=C][Ring2][Ring2][=Branch1][C][=C][Ring1][#Branch2]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][Ring2][Ring1][C][=N][Ring2][Ring1][=Branch1]
generated smiles O=C(O)C1=C2C=CC3=C1C=CC4=CC5=CC=C(N(C)C)C=C5N=C4C3=N2
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CN(C)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][N][=C][Ring1][N][Ring1][#C]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Ring2][S][=C][C][=C][C][Branch2][Ring1][N][N][=N][C][=C][C][=C][Branch1][P][C][=C][N][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][Ring1][=C][C][=C][Ring1][S][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring2][Ring2][=Branch1]
generated smiles CC1=CC(F)=CC(=C1)C=NC=NC(=CC=CC(N=NC2=CC=C(C3=CN=C4C=CC=CC4=C32)C=C)=CC=CC5=CC)CC=C5
added!
adding editted molecule!!!
===== for SMILES CN1C=C(C2=CN3C(=NN=C3C3=CN=C4N=NN(CC5=CC6=CC=CN=C6C=C5F)C4=N3)C(F)=C2)C=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=C][Branch2][Branch1][Branch1][C][=C][N][C][=Branch2][Ring2][=Branch1][=N][N][=C][Ring1][Branch1][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1][C][Branch1][C][F][=C][Ring2][Ring1][#C][C][=N][Ring2][Ring2][Ring2]<eom>
Output: 
output selfies [F][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][=N][C][Branch1][C][F][=C][C][=C][C][Branch1][#C][N][C][=C][N][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][=N][N][Ring2][Ring1][C][Ring1][S]
generated smiles FC1=CC=CC(F)=C1C=NC(F)=CC2=CC(NC3=CN=C4C=CC=CC4=C3)=NN2
added!
adding editted molecule!!!
===== for SMILES CN1C=C(CN2C=C(C(=O)NC3=C(F)C=C(C4=CNC5=NC=NC(N)=C45)C(F)=C3)C(=O)C(C3=CC=C(F)C=C3)=C2)C=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=C][Branch2][=Branch1][Ring2][C][N][C][=C][Branch2][Ring2][#Branch1][C][=Branch1][C][=O][N][C][=C][Branch1][C][F][C][=C][Branch1][P][C][=C][N][C][=N][C][=N][C][Branch1][C][N][=C][Ring1][#Branch2][Ring1][#Branch1][C][Branch1][C][F][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][=C][Ring2][Ring2][Ring1][C][=N][Ring2][Ring2][=Branch2]<eom>
Output: 
output selfies [N][C][=C][C][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][Ring1][=N][C][=C][Ring2][Ring1][=Branch1][F]
generated smiles NC1=CC=C(C2=CC=C3C(=C2)C(F)(F)C4=CC(F)=CC=C43)C=C1F
added!
adding editted molecule!!!
===== for SMILES CCN1CC2=C(C=CC(F)=C2C#N)O[C@@H](C2=CC=CS2)CNC(=O)C2=C3N=C1C=CN3N=C2N =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][N][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][#N][O][C@@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][C][N][C][=Branch1][C][=O][C][=C][N][=C][Ring2][Ring1][#Branch2][C][=C][N][Ring1][=Branch1][N][=C][Ring1][=Branch2][N]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring2][=Branch1][N][C][=Branch1][C][=O][N][C][C][C][C@@H1][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][C][C][Ring2][Ring1][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][S][C]
generated smiles C1COC(=O)C2=CC=CC(NC(=O)NCCC[C@@H1]1NC3=CC=C(C(F)(F)F)C=C3CC)=C2C=CC
added!
adding editted molecule!!!
===== for SMILES CCN1Cc2c(ccc(F)c2C#N)O[C@@H](c2cccs2)CNC(=O)c2c(N)nn3ccc1nc23 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][N][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][#N][O][C@@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][C][N][C][=Branch1][C][=O][C][C][Branch1][C][N][=N][N][C][=C][C][Ring2][Ring1][=C][=N][C][=Ring1][#Branch2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][N][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][Branch2][Ring2][Ring1][O][C][C@H1][C][C][C@][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][C][C@@H1][Ring2][Ring1][C][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring2][Ring1][=C][=C][Ring2][Ring2][=Branch1]
generated smiles CCOC(=O)NC=C1C=CC(C=CC=C(OC[C@H1]2CC[C@](C3=CC=CC=C3)(C4=CC=CC=C4)C[C@@H1]2NC5=C)C=CC=C5)C=CC1
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=C][N][=C][Branch1][#Branch2][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=N][=C][Ring1][P][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][F]
generated smiles C12C=CC(F)=C(C3=CC=C4C=CN=C(NC5=CC=CC=C5)C4=C3C=C1)C=C2C6=CC=CC=C6F
added!
adding editted molecule!!!
===== for SMILES CC(=NF)C1=NN2C(CC3=C(F)C=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Ring1][=N][F][C][=N][N][C][Branch2][Ring1][Ring2][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][=C][N][=C][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch1][Ring1][C][#N][C][Ring1][Branch2][=N][Ring1][P]
generated smiles CC1=CC(F)=CC(=C1)C=NC(F)=C2C=CC=C(C#N)C2=N
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=NN(CCC3=CC=C4N=CC(C5=CN(CCO)N=C5)=CC4=C3)C(=O)C=C2)C=C1C(F)(F)F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][#C][C][=N][N][Branch2][Ring1][S][C][C][C][=C][C][=C][N][=C][C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][=C][C][Ring1][=C][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][P][C][Branch1][C][F][Branch1][C][F][F]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][C][=C][Branch2][Ring1][P][N][C][=Branch1][C][=O][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2][C][=C][Ring1][S][Ring2][Ring1][#Branch1][=C][C][=C][Ring2][Ring1][=N][Ring2][Ring1][P]
generated smiles CC(C)(C)C1=CC=CC2(C=CC=CN=CC3=CNC(=O)NC=CC=C3C=CC=CC(C(F)(F)F)=C)C=C21
added!
adding editted molecule!!!
===== for SMILES CC(N=O)C1=NN2C(=NN=C2CC2=C(F)C=C3N=CC=CC3=C2F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch1][Ring1][N][=O][C][=N][N][C][=Branch2][Ring1][=Branch2][=N][N][=C][Ring1][Branch1][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch2][Ring2][C][C][=C][C][=C][C][Branch2][Ring1][=Branch1][N][C][=Branch1][C][=O][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][=C][Ring2][Ring1][Ring1][=C][C][=C][Ring2][Ring1][#Branch2][F]
generated smiles C1C(C)(C2)C=NC(C=CC=CC1(NC(=O)C3=NC4=CC=CC=C4C=C3F)C)C=C2F
added!
adding editted molecule!!!
===== for SMILES CC(=NC1=CC2=CC(C3=CN(C)N=C3)=CN=C2C=C1)C1=CSC(C2=NN3C(=NN=C3CC3=CC=C4N=CC=CC4=C3)C=C2)=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch2][Ring1][N][=N][C][=C][C][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][N][=C][Ring1][N][C][=C][Ring1][S][C][=C][S][C][Branch2][Ring1][P][C][=N][N][C][=Branch2][Ring1][Branch1][=N][N][=C][Ring1][Branch1][C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][=C][Ring2][Ring1][Ring2][=C][Ring2][Ring1][=Branch2]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][C][=C][C][=N][C][=N][C][=Branch2][=Branch1][Branch1][=C][C][=C][C][=C][Branch2][Ring2][S][N][=C][N][=C][Branch2][Ring1][Ring2][N][C][=C][C][=C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring1][N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1][Ring2][Ring1][=Branch1][C][=C][Ring2][Ring1][S][C][=C][Ring2][Ring2][=Branch1][C][Ring2][Ring2][#Branch2][=C][Ring2][Ring2][=C]
generated smiles C1C=CC(C)=CC=NC=NC=CC=CC=C1N=CN=C(NC2=CC=C(C3=CC=CC=C3)C=C2)C4=CC=C(Cl)C=C4
added!
adding editted molecule!!!
===== for SMILES N#CC1=C(F)C=CC2=C1CN(CCCO)C1=NC3=C(C(=O)NC[C@H](C4=CC=CS4)O2)C(N)=NN3C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][#C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][C][N][Branch1][Branch1][C][C][C][O][C][=N][C][=C][Branch2][Ring1][Branch1][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][Ring2][Ring1][#Branch1][C][Branch1][C][N][=N][N][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][N][C][=N][C][=C][C][Branch2][Ring1][#Branch2][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2][Cl][=C][C][=C][Ring2][Ring1][#Branch1][N][Ring2][Ring1][#Branch2][C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1]
generated smiles CCOC(=O)NC1=NC=CC(OC2=CC=CC=C2C3=CC=C(F)C(F)=C3Cl)C=C1NCC4=CC=C(F)C=C4
added!
adding editted molecule!!!
===== for SMILES COC1=CC2=CC([C@H](C)N=C(C)C3=CN=C4N=NN(CC5=CC6=CC=CN=C6C=C5F)C4=N3)=CC=C2N=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=C][C][Branch2][Ring2][#Branch2][C@H1][Branch1][C][C][N][=C][Branch1][C][C][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1][=C][C][=C][Ring2][Ring1][S][N][=C][Ring2][Ring2][Ring2]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][N][=C][Branch2][Ring1][N][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][=C][Ring1][S][C][Ring2][Ring1][#Branch1][=C][Ring2][Ring1][O][=C][Ring2][Ring1][S]
generated smiles C1OC=CC=CC1C=CC2=CN=C3N=C(NC=CC4=C(C=CC5=CC=C6N=CC=CC6=C5)C=C4)C3=C2C
added!
adding editted molecule!!!
===== for SMILES NC(=O)C1=CC=C(C2=CN=C3N=NN(C(F)C4=C(F)C5=CC(F)=CN=C5C=C4F)C3=N2)C=C1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][N][C][=C][N][=C][N][=N][N][Branch2][Ring1][#Branch2][C][Branch1][C][F][C][=C][Branch1][C][F][C][=C][C][Branch1][C][F][=C][N][=C][Ring1][#Branch1][C][=C][Ring1][N][F][C][Ring2][Ring1][Ring2][=N][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][=C][F]<eom>
Output: 
output selfies [N][C][=Branch1][C][=O][C][=C][C][Branch1][C][F][=C][C][Branch2][Ring2][=Branch1][N][C][=N][C][=C][C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][=N][C][=C][N][=C][Branch1][C][F][C][=C][Ring2][Ring1][C][Ring1][#Branch1][=C][Ring2][Ring1][O][F][=C][Ring2][Ring1][P]
generated smiles N1C(=O)C=CC(F)=CC1NC=NC=CC(C2=CC=CC=C2)=NC3=CN=C(F)C=C3
added!
adding editted molecule!!!
===== for SMILES NC(=O)c1ccc(-c2cnc3nnn(C(F)c4c(F)cc5ncc(F)cc5c4F)c3n2)cc1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][N][C][=C][N][=C][N][=N][N][Branch2][Ring1][#Branch2][C][Branch1][C][F][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][C][F][=C][C][Ring1][#Branch1][=C][Ring1][N][F][C][Ring2][Ring1][Ring2][=N][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][=C][F]<eom>
Output: 
output selfies [F][C][=C][C][=C][Branch2][Ring2][C][C][=C][C][=N][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][C][=C][Ring1][#Branch2][N][=C][Ring1][=C][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][=C][Ring2][Ring1][=N]
generated smiles FC1=CC=C(C=CC2=NC3=CC(C(F)(F)F)=CC=C3N=C2C4=CC=CCF)C4C=C1
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=CC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=C][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Branch1][=Branch1][=C][C][=C][C][=C][Branch2][Ring2][=Branch1][N][C][=C][C][=C][Branch2][Ring1][Branch2][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][N][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][#C][C][=C][Ring2][Ring1][Branch1][C][=C][Ring2][Ring1][=N][C][=C][Ring2][Ring2][C][C][N][Ring2][Ring2][=Branch1]
generated smiles CC1=CC(F)=CC(=C1)C=NC=NC(=CC=CC=C2NC=CC=C(C3=CC=CC(F)=C3NC4=CC=CC=C4)C2C=C)CN
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Ring2][S][=C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][N][=C][Ring1][O][C][=C][C][=C][Branch1][S][N][C][C][N][Branch1][=Branch1][C][C][C][Ring1][Ring1][C][C][Ring1][=Branch2][C][=C][Ring1][#C][C][=C][Ring2][Ring1][P][C][=C][Ring2][Ring2][=Branch1][C]
generated smiles CC1=CC(F)=CC(=C12)C=NC=NC(=CC3=C(F)C=CC=C3N=CC4=CC=C(N5CCN(C6CC6)CC5)C=C4C=C2C)CC
added!
adding editted molecule!!!
===== for SMILES O=C(NC1=CC=C(OC2=CC=NC(NC(=O)N3CCC3)=C2)C(F)=C1)C1=CN(CC2CC2)C(=O)N(C2=CC=C(F)C=C2)C1=O =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][Branch2][Ring2][#Branch1][N][C][=C][C][=C][Branch2][Ring1][#Branch1][O][C][=C][C][=N][C][Branch1][N][N][C][=Branch1][C][=O][N][C][C][C][Ring1][Ring2][=C][Ring1][=N][C][Branch1][C][F][=C][Ring2][Ring1][Branch1][C][=C][N][Branch1][#Branch1][C][C][C][C][Ring1][Ring1][C][=Branch1][C][=O][N][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][Ring2][Ring1][C][=O]<eom>
Output: 
output selfies [C][C][C][C][=N][C][Branch2][Ring2][=Branch1][C][=C][C][=C][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][Cl][C][=C][Ring2][Ring1][C][=C][C][=C][Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][C][C][N][C][C][C][C][C][Ring1][=Branch1]
generated smiles C1CC2C=NC3(C=CC=C(NC4=CC=C(C(F)(F)F)C=C4Cl)C3=CC=C2)C(=O)N1CCCN5CCCCC5
added!
adding editted molecule!!!
===== for SMILES CC(=O)N1CCC2=CC=C(NC3=NC=C(Cl)C(NC4=CC=CC=C4C(=O)NN)=N3)C=C2C(C)C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][N][C][C][C][=C][C][=C][Branch2][Ring1][#C][N][C][=N][C][=C][Branch1][C][Cl][C][Branch1][S][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][N][N][=N][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch2][C][Branch1][C][C][C][Ring2][Ring1][#C]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][C][=C][Branch1][#C][N][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=Branch2][N][=C][N][Branch1][=N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1][Cl][C][=Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1]
generated smiles CC(C1)CC2=C(NC3=NC4=CC=CC=C4C3)N=CN(C5=CC=C(Cl)C=C5Cl)C2C(=O)N1C6=CC=C(Cl)C=C6
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=CN3C(SC4=CC=C5N=CC6=C(OCC(=O)N6C)C5=C4)=NN=C3C(F)=C2)S1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][P][C][=C][N][C][Branch2][Ring1][N][S][C][=C][C][=C][N][=C][C][=C][Branch1][O][O][C][C][=Branch1][C][=O][N][Ring1][#Branch1][C][C][Ring1][N][=C][Ring1][S][=N][N][=C][Ring2][Ring1][=Branch1][C][Branch1][C][F][=C][Ring2][Ring1][O][S][Ring2][Ring1][S]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][=Branch1][C][=O][N][C][=N][C][=C][C][=C][Branch1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][C][N][=N][NH1][C][Ring1][=Branch2][=O][C][=C][Ring1][P][Ring2][Ring1][Branch1].[N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][#Branch1][=Branch1][C][=C][C][=C][C][=Branch2][=Branch1][=Branch1][=C][N][=C][Branch2][Branch1][O][C][=C][C][=C][Branch2][Ring2][P][N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring1][#C][C][=C][N][=C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][=C][C][=C][C][=C][Ring1][P][Ring1][=Branch1][C][=C][Ring2][Ring1][#Branch1][C][=C][Ring2][Ring1][S][C][=C][Ring2][Ring2][=Branch1][C][=C][Ring2][Ring2][=N][=C][Ring2][Branch1][Ring1]
generated smiles CC(C)C(=O)N1C=NC=C2C=C(C3=CC4=CC=C3CN=N[NH1]C4)OC=C21.NC(=O)C=CC=C5CC=CC=C6C(=CN=C(C=CC=C(NC(=O)C=CC=CC(C7=CN=C(C8=CC=C(F)C=C8)C9=CC=CC=C79)C=C)C)C6C)C5=C
added!
adding editted molecule!!!
===== for SMILES C[C@@H](C1=CC2=CC(C3=CN(C)N=C3)=CN=C2C=C1)C1=NN=C2C(F)=CC(C3=CN(C)C=N3)=CN21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C@@H1][Branch2][Ring1][O][C][=C][C][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][N][=C][Ring1][N][C][=C][Ring1][S][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][N][Branch1][C][C][C][=N][Ring1][=Branch1][=C][N][Ring1][=N][Ring1][S]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][Ring1][=C][C][=C][Ring2][Ring1][Branch2][N][C][=N][C][=C][Branch1][=Branch2][C][Branch1][C][C][Branch1][C][C][C][C][=C][Ring1][#Branch2]
generated smiles C1C=CC(F)=C(C2=CC3=CC(=C2)C(F)(F)C4=CC(F)=CC=C43)C=C1NC5=NC=C(C(C)(C)C)C=C5
added!
adding editted molecule!!!
===== for SMILES NC1=NN2C=CC3=NC2=C1C(=O)NC[C@H](C1=CC=CS1)OC1=C(CN3CCCO)C(N=O)=C(F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=N][N][C][=C][C][=N][C][Ring1][=Branch1][=C][Ring1][=Branch2][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][C][=C][Branch1][#Branch2][C][N][Ring2][Ring1][Ring1][C][C][C][O][C][Branch1][Ring1][N][=O][=C][Branch1][C][F][C][=C][Ring1][#C]<eom>
Output: 
output selfies [C][C][=C][Branch1][=Branch1][C][=Branch1][C][=O][O][C][=Branch1][C][=O][C][=C][N][Ring1][#Branch2][C][=C][C][=C][Branch1][S][N][C][C][N][Branch1][=Branch1][C][Branch1][C][C][C][C][C][Ring1][=Branch2][C][=C][Ring1][#C]
generated smiles CC1=C(C(=O)O)C(=O)C=CN1C2=CC=C(N3CCN(C(C)C)CC3)C=C2
added!
adding editted molecule!!!
===== for SMILES CN1C=NOC(C2=CN=C3C=CC([C@H](F)C4=NN=C5C(N)=CC(N)=CN54)=CC3=C2)=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=N][O][C][Branch2][Ring2][O][C][=C][N][=C][C][=C][C][Branch2][Ring1][Branch2][C@H1][Branch1][C][F][C][=N][N][=C][C][Branch1][C][N][=C][C][Branch1][C][N][=C][N][Ring1][Branch2][Ring1][O][=C][C][Ring2][Ring1][Ring1][=C][Ring2][Ring1][#Branch1][=C][Ring2][Ring1][=N]<eom>
Output: 
output selfies [N][C][=N][C][=N][C][=C][Ring1][=Branch1][C][Branch1][=Branch1][C][=Branch1][C][=O][O][=C][C][=C][C][Branch1][C][N][=C][C][=C][Ring1][#Branch1][Ring1][S]
generated smiles NC1=NC2=NC=C1C(C(=O)O)=CC3=CC(N)=CC=C32
added!
adding editted molecule!!!
===== for SMILES CC(=NN)C1=CN=C2N=NN(CC3=CC4=CC=CN=C4C=C3F)C2=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Ring1][=N][N][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][Branch1][N][C][=N][C][=C][C][=C][Branch1][C][F][C][=C][C][Ring1][#Branch1][=N][Ring1][O][C][=C][Ring2][Ring1][Ring1].[C][C][=C][C][=C][Branch2][Ring1][#Branch1][C][=C][C][=N][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][N][=C][Ring1][O][C][=C][Ring2][Ring1][Ring2]
generated smiles C1C=CC(F)=C1NC2=NC=C3C=C(F)C=CC3=N2.C4C=CC=CC=CC5=NC6=CC(F)=CC=C6N=C5C=C4
added!
adding editted molecule!!!
===== for SMILES CC(=O)C(F)(F)C1=CC2=CC=C1C(=O)NCCCCN1C=C(C=N1)C1=CN=C3C=CC(=CC3=C1)CCN1N=C2C=CC1=O =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][C][Branch1][C][F][Branch1][C][F][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][N][=C][C][=C][C][=Branch1][Branch2][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][C][N][N][=C][Ring2][Ring1][#C][C][=C][C][Ring1][=Branch1][=O]<eom>
Output: 
output selfies [C][C][=Branch1][C][=O][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][=C][Ring1][P][N].[O][=C][Branch1][C][O][C][Branch1][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2]
generated smiles CC(=O)C1=CC2=CC3=CC=C(N(C)C)C=C3N=C2C=C1N.O=C(O)C(O)C(=O)C4=CC=C5C=CC=CC5=C4
added!
adding editted molecule!!!
===== for SMILES CC(=NNC(N)=O)C1=CN=C2N=NN(CC3=CC4=CC=CN=C4C=C3F)C2=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Branch2][=N][N][C][Branch1][C][N][=O][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch1][=C][N][C][=C][C][=C][Branch1][C][N][C][=C][Ring1][#Branch1][F][=N][C][=C][Ring1][#C][C][=C][C][=C][N][=C][N][=C][Branch1][C][N][N][=C][Ring1][#Branch1][Ring1][#Branch2]
generated smiles CC(C)(C)C1=NC(NC2=CC=C(N)C=C2F)=NC=C1C=C3C=CN=CN=C(N)N=C3
added!
adding editted molecule!!!
===== for SMILES CC(=O)C1=C(F)C=CC2=C1CN(CCCO)C1=NC3=C(C(=O)NC[C@H](C4=CC=CS4)O2)C(N)=NN3C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][C][N][Branch1][Branch1][C][C][C][O][C][=N][C][=C][Branch2][Ring1][Branch1][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][Ring2][Ring1][#Branch1][C][Branch1][C][N][=N][N][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring2][S][N][C][=Branch1][C][=O][N][Branch1][=N][C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][C][C][N][Branch2][Ring1][Branch1][C][C][C][N][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][C][C][Ring1][N][C][C][Ring2][Ring1][C][=C][Ring2][Ring2][C]
generated smiles C1C(C)C(=O)C=CC2=CC1(NC(=O)N(CC3=CC=C(F)C=C3)CCCNC4CCN(C5=CC=CC=C5)CC4CC)C2
added!
adding editted molecule!!!
fp_scores_to_top [0.9019607843137255, 0.1891891891891892, 0.17964071856287425, 0.13675213675213677, 0.19135802469135801, 0.19540229885057472, 0.17307692307692307, 0.18, 0.18831168831168832, 0.18125, 0.1676300578034682, 0.16666666666666666, 0.07964601769911504, 0.16176470588235295, 0.1736111111111111, 0.4676258992805755, 0.041666666666666664, 0.17088607594936708, 0.20833333333333334, 0.18120805369127516, 0.1794871794871795, 0.1935483870967742, 0.25625, 0.13043478260869565, 0.48412698412698413, 0.21014492753623187, 0.125, 0.1640625, 0.17006802721088435, 0.1450381679389313, 0.1736111111111111, 0.13821138211382114, 0.18674698795180722, 0.14743589743589744, 0.13008130081300814, 0.1111111111111111, 0.13855421686746988, 0.1951219512195122, 0.10084033613445378, 0.5603448275862069, 0.07017543859649122, 0.12244897959183673, 0.11194029850746269, 0.03508771929824561, 0.14285714285714285, 0.1927710843373494, 0.1375, 0.06481481481481481, 0.1695906432748538, 0.43410852713178294, 0.1328125, 0.08943089430894309, 0.11864406779661017, 0.21951219512195122, 0.05172413793103448, 0.10869565217391304, 0.01818181818181818, 0.045454545454545456, 0.08527131782945736, 0.152, 0.1510791366906475, 0.1736111111111111, 0.16535433070866143, 0.12179487179487179, 0.08888888888888889, 0.18571428571428572, 0.7685185185185185, 0.5234375, 0.043859649122807015, 0.07017543859649122, 0.10240963855421686, 0.15853658536585366, 0.16326530612244897, 0.17123287671232876, 0.1306532663316583, 0.17532467532467533, 0.18840579710144928, 0.18181818181818182, 0.11707317073170732, 0.16568047337278108, 0.13970588235294118, 0.10497237569060773, 0.16666666666666666, 0.11398963730569948, 0.1781609195402299, 0.15, 0.16025641025641027, 0.16666666666666666, 0.15343915343915343, 0.1891891891891892, 0.15083798882681565, 0.17714285714285713, 0.11888111888111888, 0.15384615384615385, 0.14965986394557823, 0.16279069767441862, 0.16201117318435754, 0.15428571428571428, 0.16025641025641027, 0.13829787234042554]
top 70 [ 0 66 39 67 24 15 49 22 53 25 18  5 37 21 45  4  1 89 76  8 32 65 77  9
 19  7  2 20 84 91 75 61 30 14  6 73 17 28 48 10 82 87 11 79 62 27 72 95
 96 13 86 98 71 97 93 88 59 60 90 85 94 33 29 44 80 36 99 31 46  3]
len offspring_mol 70
186
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Cc1c(F)ccc2c1CN(CN)c1ccn3nc(N)c(c3n1)C(=O)NC[C@H](c1cccs1)O2

Boltz running on GPU 2
10.77
C[C@H]1CNC(=O)c2c(N)nn3ccc(nc23)N(F)Cc2c(ccc(CO)c2C#N)O1

Boltz running on GPU 1
10.74
CC(=O)N1Cc2c(ccc(F)c2F)O[C@@H](c2cnn(C)c2)CNC(=O)c2c(N)nn3ccc1nc23

Boltz running on GPU 1
10.83
CC(=O)N1Cc2c(ccc(F)c2C(O)(F)F)O[C@@H](C)CNC(=O)c2c(N)nn3ccc1nc23

Boltz running on GPU 2
11.02
CC(=O)N1Cc2c(ccc(F)c2C2=CC=NN(CCO)S2)O[C@@H](C)CNC(=O)c2c(N)nn3ccc1nc23

Boltz running on GPU 2
10.42
CC(=O)N1Cc2c(ccc(F)c2F)O[C@@H](C)CNC(=O)c2c(C(N)=O)nn3ccc1nc23

Boltz running on GPU 2
10.24
Cn1cc(C2CNc3c(c(-c4cccs4)nc4c3nnn4Cc3ccc4ncccc4c3)C2)cn1

Boltz running on GPU 2
8.94
F/C(=N\Oc1cccs1)c1csc(-c2ccc3cc(F)c(Cc4ccc5ncccc5c4)n3n2)c1

Boltz running on GPU 2
10.1
690/1000 | avg_top1: 12.160 | avg_top10: 11.958 | avg_top100: 11.465 | avg_sa: 3.618 | div: 0.810
{'avg_top1': 12.16, 'avg_top10': 11.958, 'avg_top100': 11.464999999999998, 'auc_top1': 8.238600000000002, 'auc_top10': 8.068509999999995, 'auc_top100': 7.622486309523808, 'avg_sa': 3.617955527073455, 'diversity_top100': 0.8096253388997218, 'n_oracle': 690}
O=c1ccc(-n2ccc3ccc(F)cc32)nn1CC1C=CC=CC1

Boltz running on GPU 2
6.75
Fc1cc2ccc(C3CC=CS3)nn2c1Cc1ccc2ncccc2c1

Boltz running on GPU 2
10.89
C/C(=N\OF)c1ccc2ncc(-c3cccc(-c4ncc5c(n4)NC(c4cnn(CCO)c4)CN5)c3)n2n1

Boltz running on GPU 2
9.96
CC(N=O)c1ccc2nnc(-c3ccc4cc(F)c(Cc5ccc6ncccc6c5)n4n3)n2n1

Boltz running on GPU 2
11.49
CC(c1c(F)cc2c(c1F)=CNCN=2)n1nnc2ncc(-c3ccc(F)c(F)c3)nc21

Boltz running on GPU 2
10.56
C[C@@H](Oc1cc(N)c2nnc([C@@H](F)c3ccc4ncc(ON)cc4c3)n2c1)c1c(Cl)ccc(F)c1Cl

Boltz running on GPU 1
10.73
Fc1cc2ncccc2cc1Cn1nnc2ncc(-c3c(F)cc4ncccc4c3F)nc21

Boltz running on GPU 1
11.56
Cn1cc(-c2cc(F)c3nnc(Sc4ccc5c(c4)C=CCN5)n3c2)cn1

Boltz running on GPU 1
9.82
Already in buffer
Already in buffer
COc1cnc2ccc([C@H](C)c3nnc4c(F)cc(-c5cc(N)no5)cn34)cc2c1

Boltz running on GPU 2
11.63
COc1ccc2c(OCc3nnc4ccc(C5=CNc6ncnc(N)c6C5)cn34)ccnc2c1

Boltz running on GPU 1
9.37
700/1000 | avg_top1: 12.160 | avg_top10: 11.958 | avg_top100: 11.478 | avg_sa: 3.622 | div: 0.810
{'avg_top1': 12.16, 'avg_top10': 11.958, 'avg_top100': 11.478200000000005, 'auc_top1': 8.360200000000003, 'auc_top10': 8.188089999999994, 'auc_top100': 7.737202309523808, 'avg_sa': 3.6216193615604335, 'diversity_top100': 0.8097911457204571, 'n_oracle': 700}
COc1cnc2ccc([C@H](C)c3nnc4c(F)cccn34)cc2c1

Boltz running on GPU 2
9.75
Already in buffer
CC(=O)C(F)(F)N1N=CC=C(c2ccc3nnc(Cc4ccc5ncccc5c4)n3n2)S1

Boltz running on GPU 2
10.45
Fc1cnc2cc(F)c(C(F)n3nnc4ncc(N5CCC5)nc43)c(F)c2c1

Boltz running on GPU 2
11.3
N#Cc1cnc2ccc(Sc3nnc4ccc(-c5cn[nH]c5)cn34)cc2c1

Boltz running on GPU 2
9.8
CC(c1c(F)cc2ncccc2c1F)n1cnc2ncc(-c3ccc4ncc(F)cc4c3F)nc21

Boltz running on GPU 2
10.98
Cc1cc(F)c2nnc(Sc3ccc4ncc(NC5CCN(C)CC5)cc4c3)n2c1

Boltz running on GPU 2
10.41
Already in buffer
Already in buffer
FC(=Cc1cc(Nc2cnc3ccccc3c2)n[nH]1)N=Cc1c(F)cccc1F

Boltz running on GPU 2
8.7
Already in buffer
Cc1cc(-c2cnc3ccc([C@H](F)c4ccc(F)cc4)cc3c2)on1

Boltz running on GPU 2
9.63
FN=C(F)c1cnc2nnn(Cc3cc4cccnc4cc3F)c2n1

Boltz running on GPU 1
10.73
Cc1cc(-c2cc(N)c3nnc([C@@H](F)c4ccc5ncc(OO)cc5c4)n3c2)on1

Boltz running on GPU 2
11.37
710/1000 | avg_top1: 12.160 | avg_top10: 11.958 | avg_top100: 11.482 | avg_sa: 3.623 | div: 0.811
{'avg_top1': 12.16, 'avg_top10': 11.958, 'avg_top100': 11.482000000000003, 'auc_top1': 8.481800000000003, 'auc_top10': 8.307669999999995, 'auc_top100': 7.852003309523808, 'avg_sa': 3.6229527798123473, 'diversity_top100': 0.8107172883258751, 'n_oracle': 710}
Already in buffer
COCCOc1cnc2ccn([C@H](C)c3nnc4c(F)cc(CCO)cn34)c(=O)c2c1

Boltz running on GPU 1
10.52
C1=[SH]C(c2cnc3nnn(Cc4ccc5ncccc5c4)c3n2)=CC1

Boltz running on GPU 2
11.33
Cc1cc(-c2ccnc3ccc(Cc4nnc5ccc(C6=CC=NN(CCO)S6)nn45)cc23)on1

Boltz running on GPU 2
10.92
Already in buffer
Already in buffer
Already in buffer
CC(=O)n1cc(-c2cnc3cc(F)c(C(C)c4nc4=O)c(F)c3c2)cn1

Boltz running on GPU 2
9.23
Already in buffer
Cc1ccc(-c2cnc3nnn(F)c3n2)cc1F

Boltz running on GPU 2
7.35
Cn1cnc(Cc2cc3cccnc3cc2F)c1

Boltz running on GPU 2
8.09
Already in buffer
Nc1ccc2c(c1)C=C(C(=O)O)c1cnc-2nc1N

Boltz running on GPU 2
[Errno 2] No such file or directory: '/data/boltz/results/boltz_results_c-met_Nc1ccc2c(c1)C=C(C(=O)O)c1cnc-2nc1N/predictions/c-met_Nc1ccc2c(c1)C=C(C(=O)O)c1cnc-2nc1N/affinity_c-met_Nc1ccc2c(c1)C=C(C(=O)O)c1cnc-2nc1N.json'
-0.0
Already in buffer
CNC(=S)c1cc(F)c(-c2c[nH]c3ncnc(N)c23)cc1F

Boltz running on GPU 2
9.22
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Cc1cc(-c2cccc3ncccc23)on1

Boltz running on GPU 2
6.21
Cc1cc(-c2nnc3c(F)cc(-c4cn(C)cn4)cn23)on1

Boltz running on GPU 2
7.43
720/1000 | avg_top1: 12.160 | avg_top10: 11.958 | avg_top100: 11.484 | avg_sa: 3.622 | div: 0.811
{'avg_top1': 12.16, 'avg_top10': 11.958, 'avg_top100': 11.483700000000004, 'auc_top1': 8.603400000000004, 'auc_top10': 8.427249999999994, 'auc_top100': 7.966831809523808, 'avg_sa': 3.621852441566877, 'diversity_top100': 0.8113143737932677, 'n_oracle': 720}
Already in buffer
Already in buffer
Already in buffer
COc1cnc2ccc(-c3ccc4ncc(-c5cnn(C)c5)cc4c3)cc2c1

Boltz running on GPU 2
9.47
CC(C)c1nnc2c(F)cc(-c3cc(N)no3)cn12

Boltz running on GPU 2
6.96
NC(=O)c1cc2cccnc2cc1F

Boltz running on GPU 2
6.14
Already in buffer
COc1cnc2ccc([C@H](C)N=C(C)c3cnc4c(n3)CC(c3cn(C)cn3)=N4)cc2c1

Boltz running on GPU 2
9.64
Already in buffer
Cn1cnc(-c2cc(F)c3n[nH]n3c2)c1

Boltz running on GPU 2
6.37
CC(=O)C(=NNC(N)=O)C1=CC=C(Sc2nnc3ccc(-c4cnn(C)c4)cn23)C1

Boltz running on GPU 2
8.64
Cc1c(F)cc2ncccc2c1F

Boltz running on GPU 1
6.58
[(12.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be37b0>), (12.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a270>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (11.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c120>), (11.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b270>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15350>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afce40>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12eb0>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b350>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4db30>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c74a0>), (11.73, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa270>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c0b0>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c200>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3890>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc80>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b510>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b057b0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7200>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (11.64, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15dd0>), (11.63, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba85f0>), (11.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15040>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c970>), (11.59, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8cf0>), (11.58, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bc80>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (11.56, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3b30>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ac0>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc820>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a200>), (11.49, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b172e0>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c3c0>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15b30>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc5f0>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b154a0>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b050b0>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ccf0>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa350>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b900>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcdd0>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7a50>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b3c0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c430>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15f20>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bc10>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15890>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc740>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8dd0>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba83c0>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b4a0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15ba0>), (11.26, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b174a0>), (11.25, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc040>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa510>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ca50>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ad60>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba89e0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b153c0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa040>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bcf0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a4a0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bba0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a5f0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b5f0>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c740>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ac80>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ba0>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05eb0>), (11.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dcf0>), (11.15, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bf90>), (11.14, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17900>), (11.14, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b740>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c890>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b580>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65eb4f20>), (11.11, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c2e0>), (11.11, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c900>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05200>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcb30>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17970>)]
[0.008852521075693252, 0.008852521075693252, 0.008772440704121028, 0.008699640366328096, 0.008670520231210925, 0.008663240197431631, 0.008663240197431631, 0.008648680129873045, 0.008648680129873045, 0.008634120062314458, 0.008597719893417993, 0.0085904398596387, 0.008583159825859407, 0.008583159825859407, 0.008583159825859407, 0.008546759656962942, 0.008546759656962942, 0.008546759656962942, 0.008539479623183648, 0.008532199589404356, 0.008524919555625062, 0.008524919555625062, 0.008524919555625062, 0.008517639521845768, 0.008517639521845768, 0.008517639521845768, 0.008510359488066475, 0.008510359488066475, 0.008510359488066475, 0.008495799420507889, 0.008495799420507889, 0.008495799420507889, 0.008488519386728595, 0.00847395931917001, 0.008466679285390718, 0.00845211921783213, 0.008444839184052836, 0.008437559150273544, 0.00843027911649425, 0.008422999082714959, 0.008415719048935665, 0.008408439015156371, 0.008408439015156371, 0.008386598913818492, 0.008372038846259906, 0.008372038846259906, 0.008364758812480612, 0.008328358643584147, 0.008328358643584147, 0.008328358643584147, 0.008313798576025561, 0.008313798576025561, 0.008313798576025561, 0.008313798576025561, 0.008313798576025561, 0.008306518542246268, 0.008306518542246268, 0.008299238508466976, 0.008291958474687682, 0.008291958474687682, 0.008284678440908388, 0.008284678440908388, 0.008284678440908388, 0.008277398407129094, 0.008277398407129094, 0.0082701183733498, 0.008255558305791215, 0.008248278272011923, 0.008248278272011923, 0.008248278272011923, 0.00824099823823263, 0.00824099823823263, 0.00824099823823263, 0.00824099823823263, 0.00824099823823263, 0.008233718204453337, 0.008233718204453337, 0.008226438170674043, 0.008226438170674043, 0.008226438170674043, 0.00821915813689475, 0.008211878103115456, 0.008211878103115456, 0.008211878103115456, 0.00819731803555687, 0.008190038001777578, 0.008168197900439699, 0.008168197900439699, 0.008168197900439699, 0.008168197900439699, 0.008160917866660405, 0.008160917866660405, 0.008153637832881111, 0.008153637832881111, 0.008153637832881111, 0.008153637832881111, 0.008146357799101818, 0.008146357799101818, 0.008146357799101818, 0.008146357799101818, 0.008146357799101818, 0.008146357799101818, 0.008139077765322526, 0.008139077765322526, 0.008139077765322526, 0.008131797731543232, 0.008131797731543232, 0.00812451769776394, 0.008117237663984646, 0.008109957630205354, 0.008109957630205354, 0.008095397562646767, 0.008095397562646767, 0.008095397562646767, 0.008095397562646767, 0.008088117528867473, 0.008088117528867473, 0.008080837495088181, 0.008080837495088181, 0.008080837495088181]
[(11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.25, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc040>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b3c0>), (11.49, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b172e0>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b153c0>), (11.56, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3b30>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (11.64, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15dd0>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c74a0>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17970>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bcf0>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcb30>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa040>), (11.59, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8cf0>), (11.59, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8cf0>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b154a0>), (11.58, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bc80>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c430>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afce40>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (11.11, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c900>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65eb4f20>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa350>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bc10>), (11.15, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bf90>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05eb0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b5f0>), (11.11, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c900>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (11.58, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bc80>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b510>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17970>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa510>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bba0>), (11.14, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17900>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65eb4f20>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15890>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b5f0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c200>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05eb0>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b510>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b5f0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc5f0>), (11.11, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c2e0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c74a0>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b900>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b580>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ac80>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c0b0>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65eb4f20>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (11.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15ba0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b4a0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a4a0>), (11.25, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc040>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b4a0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c74a0>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b580>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba83c0>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.15, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bf90>), (11.73, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa270>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa040>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a4a0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3d65eb4f20>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15350>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.63, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba85f0>), (11.11, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c900>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7a50>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc5f0>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (11.59, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8cf0>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b4a0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15f20>), (11.73, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa270>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b4a0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15ba0>), (11.14, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17900>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b4a0>), (11.1, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcb30>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba83c0>)]
Bin size: 100
===== for SMILES C[C@@H](c1ccc2ncc(-c3cnn(C)c3)cc2c1)c1nnc2c(F)cc(-c3cn(N)cn3)cn12 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C@@H1][Branch2][Ring1][O][C][=C][C][=C][N][=C][C][Branch1][O][C][C][=N][N][Branch1][C][C][C][=Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][S][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][N][Branch1][C][N][C][=N][Ring1][=Branch1][=C][N][Ring1][S][Ring1][=N]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][Branch2][Ring1][S][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][N][N][C][=N][N][Branch1][C][C][C][=N][Ring1][#Branch1][=C][C][=C][C][=C][C][Ring1][=Branch1][=N][Ring2][Ring1][Ring1][=C][Ring2][Ring1][#Branch2]
generated smiles CC(C)(C)C=CC=CC(C1=CC2=CC(=C1)C(N3C=NN(C)C=N3)=C4C=CC=CC4)=N2
added!
adding editted molecule!!!
===== for SMILES N#CC1=C(F)C=CC2=C1CN(CF)C1=NC3=C(C(=O)NC[C@H](C4=CC=CS4)O2)C(N)=NN3C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][#C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][C][N][Branch1][Ring1][C][F][C][=N][C][=C][Branch2][Ring1][Branch1][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][Ring2][Ring1][Branch1][C][Branch1][C][N][=N][N][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][N][C][=N][C][=C][C][Branch2][Ring1][S][N][C][C][=C][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][C][F][C][Branch1][=Branch1][C][=Branch1][C][=O][O][=C][Ring1][#Branch2][C][=C][Ring1][S][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][=N][C]
generated smiles CCOC(=O)N1C=NC=CC(NCC2=CC=C(C3=CC=C(F)C(C(=O)O)=C3)C=C2)=C1C=CC
added!
adding editted molecule!!!
===== for SMILES O=C1NCCCCN2C=C(C=N2)C2=CN=C3C=CC(=CC3=C2)CCN2N=C(C=CC2=O)C2=CC=C1C(C(F)(F)F)=C2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][N][=C][C][=C][C][=Branch1][Branch2][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][=C][Ring2][Ring2][C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][Ring2][Ring1][C][=C][Ring2][Ring1][=Branch1]
generated smiles O=C(O)C1=C2C=CC3=C1C=CC4=CC5=CC=C(N(C)C)C=C5N=C4C3=C2
added!
adding editted molecule!!!
===== for SMILES O=C1NCCCCN2C=C(C=N2)C2=CC3=CC(=CC=C3N=C2)CCN2N=C(C=CC2=O)C2=CC(C(O)(F)F)=C1C=C2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][C][=C][C][=Branch1][#Branch2][=C][C][=C][Ring1][=Branch1][N][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][Branch1][=Branch2][C][Branch1][C][O][Branch1][C][F][F][=C][Ring2][Ring2][=Branch1][C][=C][Ring1][#Branch2]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][Ring2][Ring1][C][=N][Ring2][Ring1][=Branch1]
generated smiles O=C(O)C1=C2C=CC3=C1C=CC4=CC5=CC=C(N(C)C)C=C5N=C4C3=N2
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CN(C)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][N][=C][Ring1][N][Ring1][#C]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Ring2][S][=C][C][=C][C][Branch2][Ring1][N][N][=N][C][=C][C][=C][Branch1][P][C][=C][N][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][Ring1][=C][C][=C][Ring1][S][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring2][Ring2][=Branch1]
generated smiles CC1=CC(F)=CC(=C1)C=NC=NC(=CC=CC(N=NC2=CC=C(C3=CN=C4C=CC=CC4=C32)C=C)=CC=CC5=CC)CC=C5
added!
adding editted molecule!!!
===== for SMILES CN1C=C(C2=CN3C(=NN=C3C3=CN=C4N=NN(CC5=CC6=CC=CN=C6C=C5F)C4=N3)C(F)=C2)C=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=C][Branch2][Branch1][Branch1][C][=C][N][C][=Branch2][Ring2][=Branch1][=N][N][=C][Ring1][Branch1][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1][C][Branch1][C][F][=C][Ring2][Ring1][#C][C][=N][Ring2][Ring2][Ring2]<eom>
Output: 
output selfies [F][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][=N][C][Branch1][C][F][=C][C][=C][C][Branch1][#C][N][C][=C][N][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][=N][N][Ring2][Ring1][C][Ring1][S]
generated smiles FC1=CC=CC(F)=C1C=NC(F)=CC2=CC(NC3=CN=C4C=CC=CC4=C3)=NN2
added!
adding editted molecule!!!
===== for SMILES CN1C=C(CN2C=C(C(=O)NC3=C(F)C=C(C4=CNC5=NC=NC(N)=C45)C(F)=C3)C(=O)C(C3=CC=C(F)C=C3)=C2)C=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=C][Branch2][=Branch1][Ring2][C][N][C][=C][Branch2][Ring2][#Branch1][C][=Branch1][C][=O][N][C][=C][Branch1][C][F][C][=C][Branch1][P][C][=C][N][C][=N][C][=N][C][Branch1][C][N][=C][Ring1][#Branch2][Ring1][#Branch1][C][Branch1][C][F][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][=C][Ring2][Ring2][Ring1][C][=N][Ring2][Ring2][=Branch2]<eom>
Output: 
output selfies [N][C][=C][C][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][Ring1][=N][C][=C][Ring2][Ring1][=Branch1][F]
generated smiles NC1=CC=C(C2=CC=C3C(=C2)C(F)(F)C4=CC(F)=CC=C43)C=C1F
added!
adding editted molecule!!!
===== for SMILES CCN1CC2=C(C=CC(F)=C2C#N)O[C@@H](C2=CC=CS2)CNC(=O)C2=C3N=C1C=CN3N=C2N =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][N][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][#N][O][C@@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][C][N][C][=Branch1][C][=O][C][=C][N][=C][Ring2][Ring1][#Branch2][C][=C][N][Ring1][=Branch1][N][=C][Ring1][=Branch2][N]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring2][=Branch1][N][C][=Branch1][C][=O][N][C][C][C][C@@H1][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][C][C][Ring2][Ring1][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][S][C]
generated smiles C1COC(=O)C2=CC=CC(NC(=O)NCCC[C@@H1]1NC3=CC=C(C(F)(F)F)C=C3CC)=C2C=CC
added!
adding editted molecule!!!
===== for SMILES CCN1CC2=C(C#N)C(F)=CC=C2O[C@@H](C2=CC=CS2)CNC(=O)C2=C3N=C1C=CN3N=C2N =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][Ring1][C][#N][C][Branch1][C][F][=C][C][=C][Ring1][=Branch2][O][C@@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][C][N][C][=Branch1][C][=O][C][=C][N][=C][Ring2][Ring1][#Branch2][C][=C][N][Ring1][=Branch1][N][=C][Ring1][=Branch2][N]<eom>
Output: 
output selfies [C][C][C][=C][Branch1][C][C][C][=C][Branch2][Ring1][O][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][C][=C][C][Branch1][C][C][=C][C][Ring1][=Branch2][=N][Ring1][=N][C][=C][Ring2][Ring1][=Branch1][N][C][C][N][Branch2][Ring1][O][C][=C][C][=C][C][Branch1][P][C][=Branch1][C][=O][N][C][C][N][Branch1][Ring1][C][C][C][C][Ring1][#Branch1][=C][Ring1][S][C][C][Ring2][Ring1][=Branch1]
generated smiles CC1C=C(C)C=C(C2=C3C=CC(=C2)C(C)=CC(C)=CC=N3)C=C1N4CCN(C5=CC=CC(C(=O)NC6CN(CC)CC6)=C5)CC4
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=C][N][=C][Branch1][#Branch2][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=N][=C][Ring1][P][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][F]
generated smiles C12C=CC(F)=C(C3=CC=C4C=CN=C(NC5=CC=CC=C5)C4=C3C=C1)C=C2C6=CC=CC=C6F
added!
adding editted molecule!!!
===== for SMILES CC(=NF)C1=NN2C(CC3=C(F)C=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Ring1][=N][F][C][=N][N][C][Branch2][Ring1][Ring2][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][=C][N][=C][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch1][Ring1][C][#N][C][Ring1][Branch2][=N][Ring1][P]
generated smiles CC1=CC(F)=CC(=C1)C=NC(F)=C2C=CC=C(C#N)C2=N
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=NN(CCC3=CC=C4N=CC(C5=CN(CCO)N=C5)=CC4=C3)C(=O)C=C2)C=C1C(F)(F)F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][#C][C][=N][N][Branch2][Ring1][S][C][C][C][=C][C][=C][N][=C][C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][=C][C][Ring1][=C][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][P][C][Branch1][C][F][Branch1][C][F][F]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][C][=C][Branch2][Ring1][P][N][C][=Branch1][C][=O][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2][C][=C][Ring1][S][Ring2][Ring1][#Branch1][=C][C][=C][Ring2][Ring1][=N][Ring2][Ring1][P]
generated smiles CC(C)(C)C1=CC=CC2(C=CC=CN=CC3=CNC(=O)NC=CC=C3C=CC=CC(C(F)(F)F)=C)C=C21
added!
adding editted molecule!!!
===== for SMILES CC(N=O)C1=NN2C(=NN=C2CC2=C(F)C=C3N=CC=CC3=C2F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch1][Ring1][N][=O][C][=N][N][C][=Branch2][Ring1][=Branch2][=N][N][=C][Ring1][Branch1][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch2][Ring2][C][C][=C][C][=C][C][Branch2][Ring1][=Branch1][N][C][=Branch1][C][=O][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][=C][Ring2][Ring1][Ring1][=C][C][=C][Ring2][Ring1][#Branch2][F]
generated smiles C1C(C)(C2)C=NC(C=CC=CC1(NC(=O)C3=NC4=CC=CC=C4C=C3F)C)C=C2F
added!
adding editted molecule!!!
===== for SMILES CC(=NC1=CC2=CC(C3=CN(C)N=C3)=CN=C2C=C1)C1=CSC(C2=NN3C(=NN=C3CC3=CC=C4N=CC=CC4=C3)C=C2)=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch2][Ring1][N][=N][C][=C][C][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][N][=C][Ring1][N][C][=C][Ring1][S][C][=C][S][C][Branch2][Ring1][P][C][=N][N][C][=Branch2][Ring1][Branch1][=N][N][=C][Ring1][Branch1][C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][=C][Ring2][Ring1][Ring2][=C][Ring2][Ring1][=Branch2]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][C][=C][C][=N][C][=N][C][=Branch2][=Branch1][Branch1][=C][C][=C][C][=C][Branch2][Ring2][S][N][=C][N][=C][Branch2][Ring1][Ring2][N][C][=C][C][=C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring1][N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1][Ring2][Ring1][=Branch1][C][=C][Ring2][Ring1][S][C][=C][Ring2][Ring2][=Branch1][C][Ring2][Ring2][#Branch2][=C][Ring2][Ring2][=C]
generated smiles C1C=CC(C)=CC=NC=NC=CC=CC=C1N=CN=C(NC2=CC=C(C3=CC=CC=C3)C=C2)C4=CC=C(Cl)C=C4
added!
adding editted molecule!!!
===== for SMILES N#CC1=C(F)C=CC2=C1CN(CCCO)C1=NC3=C(C(=O)NC[C@H](C4=CC=CS4)O2)C(N)=NN3C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][#C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][C][N][Branch1][Branch1][C][C][C][O][C][=N][C][=C][Branch2][Ring1][Branch1][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][Ring2][Ring1][#Branch1][C][Branch1][C][N][=N][N][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][N][C][=N][C][=C][C][Branch2][Ring1][#Branch2][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2][Cl][=C][C][=C][Ring2][Ring1][#Branch1][N][Ring2][Ring1][#Branch2][C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1]
generated smiles CCOC(=O)NC1=NC=CC(OC2=CC=CC=C2C3=CC=C(F)C(F)=C3Cl)C=C1NCC4=CC=C(F)C=C4
added!
adding editted molecule!!!
===== for SMILES COC1=CC2=CC([C@H](C)N=C(C)C3=CN=C4N=NN(CC5=CC6=CC=CN=C6C=C5F)C4=N3)=CC=C2N=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=C][C][Branch2][Ring2][#Branch2][C@H1][Branch1][C][C][N][=C][Branch1][C][C][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1][=C][C][=C][Ring2][Ring1][S][N][=C][Ring2][Ring2][Ring2]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][N][=C][Branch2][Ring1][N][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][=C][Ring1][S][C][Ring2][Ring1][#Branch1][=C][Ring2][Ring1][O][=C][Ring2][Ring1][S]
generated smiles C1OC=CC=CC1C=CC2=CN=C3N=C(NC=CC4=C(C=CC5=CC=C6N=CC=CC6=C5)C=C4)C3=C2C
added!
adding editted molecule!!!
===== for SMILES NC(=O)C1=CC=C(C2=CN=C3N=NN(C(F)C4=C(F)C5=CC(F)=CN=C5C=C4F)C3=N2)C=C1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][N][C][=C][N][=C][N][=N][N][Branch2][Ring1][#Branch2][C][Branch1][C][F][C][=C][Branch1][C][F][C][=C][C][Branch1][C][F][=C][N][=C][Ring1][#Branch1][C][=C][Ring1][N][F][C][Ring2][Ring1][Ring2][=N][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][=C][F]<eom>
Output: 
output selfies [N][C][=Branch1][C][=O][C][=C][C][Branch1][C][F][=C][C][Branch2][Ring2][=Branch1][N][C][=N][C][=C][C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][=N][C][=C][N][=C][Branch1][C][F][C][=C][Ring2][Ring1][C][Ring1][#Branch1][=C][Ring2][Ring1][O][F][=C][Ring2][Ring1][P]
generated smiles N1C(=O)C=CC(F)=CC1NC=NC=CC(C2=CC=CC=C2)=NC3=CN=C(F)C=C3
added!
adding editted molecule!!!
===== for SMILES NC(=O)C1=CC=C(C2=CN=C3N=NN(C(F)C4=C(F)C=C5N=CC(F)=CC5=C4F)C3=N2)C=C1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][N][C][=C][N][=C][N][=N][N][Branch2][Ring1][#Branch2][C][Branch1][C][F][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][C][F][=C][C][Ring1][#Branch1][=C][Ring1][N][F][C][Ring2][Ring1][Ring2][=N][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][=C][F]<eom>
Output: 
output selfies [F][C][=C][C][=C][Branch2][Ring2][C][C][=C][C][=N][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][C][=C][Ring1][#Branch2][N][=C][Ring1][=C][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][=C][Ring2][Ring1][=N]
generated smiles FC1=CC=C(C=CC2=NC3=CC(C(F)(F)F)=CC=C3N=C2C4=CC=CCF)C4C=C1
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=CC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=C][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Branch1][=Branch1][=C][C][=C][C][=C][Branch2][Ring2][=Branch1][N][C][=C][C][=C][Branch2][Ring1][Branch2][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][N][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][#C][C][=C][Ring2][Ring1][Branch1][C][=C][Ring2][Ring1][=N][C][=C][Ring2][Ring2][C][C][N][Ring2][Ring2][=Branch1]
generated smiles CC1=CC(F)=CC(=C1)C=NC=NC(=CC=CC=C2NC=CC=C(C3=CC=CC(F)=C3NC4=CC=CC=C4)C2C=C)CN
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Ring2][S][=C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][N][=C][Ring1][O][C][=C][C][=C][Branch1][S][N][C][C][N][Branch1][=Branch1][C][C][C][Ring1][Ring1][C][C][Ring1][=Branch2][C][=C][Ring1][#C][C][=C][Ring2][Ring1][P][C][=C][Ring2][Ring2][=Branch1][C]
generated smiles CC1=CC(F)=CC(=C12)C=NC=NC(=CC3=C(F)C=CC=C3N=CC4=CC=C(N5CCN(C6CC6)CC5)C=C4C=C2C)CC
added!
adding editted molecule!!!
===== for SMILES O=C(NC1=CC=C(OC2=CC=NC(NC(=O)N3CCC3)=C2)C(F)=C1)C1=CN(CC2CC2)C(=O)N(C2=CC=C(F)C=C2)C1=O =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][Branch2][Ring2][#Branch1][N][C][=C][C][=C][Branch2][Ring1][#Branch1][O][C][=C][C][=N][C][Branch1][N][N][C][=Branch1][C][=O][N][C][C][C][Ring1][Ring2][=C][Ring1][=N][C][Branch1][C][F][=C][Ring2][Ring1][Branch1][C][=C][N][Branch1][#Branch1][C][C][C][C][Ring1][Ring1][C][=Branch1][C][=O][N][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][Ring2][Ring1][C][=O]<eom>
Output: 
output selfies [C][C][C][C][=N][C][Branch2][Ring2][=Branch1][C][=C][C][=C][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][Cl][C][=C][Ring2][Ring1][C][=C][C][=C][Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][C][C][N][C][C][C][C][C][Ring1][=Branch1]
generated smiles C1CC2C=NC3(C=CC=C(NC4=CC=C(C(F)(F)F)C=C4Cl)C3=CC=C2)C(=O)N1CCCN5CCCCC5
added!
adding editted molecule!!!
===== for SMILES CC(=O)N1CCC2=CC=C(NC3=NC=C(Cl)C(NC4=CC=CC=C4C(=O)NN)=N3)C=C2C(C)C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][N][C][C][C][=C][C][=C][Branch2][Ring1][#C][N][C][=N][C][=C][Branch1][C][Cl][C][Branch1][S][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][N][N][=N][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch2][C][Branch1][C][C][C][Ring2][Ring1][#C]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][C][=C][Branch1][#C][N][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=Branch2][N][=C][N][Branch1][=N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1][Cl][C][=Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1]
generated smiles CC(C1)CC2=C(NC3=NC4=CC=CC=C4C3)N=CN(C5=CC=C(Cl)C=C5Cl)C2C(=O)N1C6=CC=C(Cl)C=C6
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=CN3C(SC4=CC=C5N=CC6=C(OCC(=O)N6C)C5=C4)=NN=C3C(F)=C2)S1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][P][C][=C][N][C][Branch2][Ring1][N][S][C][=C][C][=C][N][=C][C][=C][Branch1][O][O][C][C][=Branch1][C][=O][N][Ring1][#Branch1][C][C][Ring1][N][=C][Ring1][S][=N][N][=C][Ring2][Ring1][=Branch1][C][Branch1][C][F][=C][Ring2][Ring1][O][S][Ring2][Ring1][S]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][=Branch1][C][=O][N][C][=N][C][=C][C][=C][Branch1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][C][N][=N][NH1][C][Ring1][=Branch2][=O][C][=C][Ring1][P][Ring2][Ring1][Branch1].[N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][#Branch1][=Branch1][C][=C][C][=C][C][=Branch2][=Branch1][=Branch1][=C][N][=C][Branch2][Branch1][O][C][=C][C][=C][Branch2][Ring2][P][N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring1][#C][C][=C][N][=C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][=C][C][=C][C][=C][Ring1][P][Ring1][=Branch1][C][=C][Ring2][Ring1][#Branch1][C][=C][Ring2][Ring1][S][C][=C][Ring2][Ring2][=Branch1][C][=C][Ring2][Ring2][=N][=C][Ring2][Branch1][Ring1]
generated smiles CC(C)C(=O)N1C=NC=C2C=C(C3=CC4=CC=C3CN=N[NH1]C4)OC=C21.NC(=O)C=CC=C5CC=CC=C6C(=CN=C(C=CC=C(NC(=O)C=CC=CC(C7=CN=C(C8=CC=C(F)C=C8)C9=CC=CC=C79)C=C)C)C6C)C5=C
added!
adding editted molecule!!!
===== for SMILES C[C@@H](C1=CC2=CC(C3=CN(C)N=C3)=CN=C2C=C1)C1=NN=C2C(F)=CC(C3=CN(C)C=N3)=CN21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C@@H1][Branch2][Ring1][O][C][=C][C][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][N][=C][Ring1][N][C][=C][Ring1][S][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][N][Branch1][C][C][C][=N][Ring1][=Branch1][=C][N][Ring1][=N][Ring1][S]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][Ring1][=C][C][=C][Ring2][Ring1][Branch2][N][C][=N][C][=C][Branch1][=Branch2][C][Branch1][C][C][Branch1][C][C][C][C][=C][Ring1][#Branch2]
generated smiles C1C=CC(F)=C(C2=CC3=CC(=C2)C(F)(F)C4=CC(F)=CC=C43)C=C1NC5=NC=C(C(C)(C)C)C=C5
added!
adding editted molecule!!!
===== for SMILES NC1=NN2C=CC3=NC2=C1C(=O)NC[C@H](C1=CC=CS1)OC1=C(CN3CCCO)C(N=O)=C(F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=N][N][C][=C][C][=N][C][Ring1][=Branch1][=C][Ring1][=Branch2][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][C][=C][Branch1][#Branch2][C][N][Ring2][Ring1][Ring1][C][C][C][O][C][Branch1][Ring1][N][=O][=C][Branch1][C][F][C][=C][Ring1][#C]<eom>
Output: 
output selfies [C][C][=C][Branch1][=Branch1][C][=Branch1][C][=O][O][C][=Branch1][C][=O][C][=C][N][Ring1][#Branch2][C][=C][C][=C][Branch1][S][N][C][C][N][Branch1][=Branch1][C][Branch1][C][C][C][C][C][Ring1][=Branch2][C][=C][Ring1][#C]
generated smiles CC1=C(C(=O)O)C(=O)C=CN1C2=CC=C(N3CCN(C(C)C)CC3)C=C2
added!
adding editted molecule!!!
===== for SMILES CN1C=NOC(C2=CN=C3C=CC([C@H](F)C4=NN=C5C(N)=CC(N)=CN54)=CC3=C2)=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=N][O][C][Branch2][Ring2][O][C][=C][N][=C][C][=C][C][Branch2][Ring1][Branch2][C@H1][Branch1][C][F][C][=N][N][=C][C][Branch1][C][N][=C][C][Branch1][C][N][=C][N][Ring1][Branch2][Ring1][O][=C][C][Ring2][Ring1][Ring1][=C][Ring2][Ring1][#Branch1][=C][Ring2][Ring1][=N]<eom>
Output: 
output selfies [N][C][=N][C][=N][C][=C][Ring1][=Branch1][C][Branch1][=Branch1][C][=Branch1][C][=O][O][=C][C][=C][C][Branch1][C][N][=C][C][=C][Ring1][#Branch1][Ring1][S]
generated smiles NC1=NC2=NC=C1C(C(=O)O)=CC3=CC(N)=CC=C32
added!
adding editted molecule!!!
===== for SMILES CC(=NN)C1=CN=C2N=NN(CC3=CC4=CC=CN=C4C=C3F)C2=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Ring1][=N][N][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][Branch1][N][C][=N][C][=C][C][=C][Branch1][C][F][C][=C][C][Ring1][#Branch1][=N][Ring1][O][C][=C][Ring2][Ring1][Ring1].[C][C][=C][C][=C][Branch2][Ring1][#Branch1][C][=C][C][=N][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][N][=C][Ring1][O][C][=C][Ring2][Ring1][Ring2]
generated smiles C1C=CC(F)=C1NC2=NC=C3C=C(F)C=CC3=N2.C4C=CC=CC=CC5=NC6=CC(F)=CC=C6N=C5C=C4
added!
adding editted molecule!!!
===== for SMILES CC(=O)C(F)(F)C1=CC2=CC=C1C(=O)NCCCCN1C=C(C=N1)C1=CN=C3C=CC(=CC3=C1)CCN1N=C2C=CC1=O =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][C][Branch1][C][F][Branch1][C][F][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][N][=C][C][=C][C][=Branch1][Branch2][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][C][N][N][=C][Ring2][Ring1][#C][C][=C][C][Ring1][=Branch1][=O]<eom>
Output: 
output selfies [C][C][=Branch1][C][=O][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][=C][Ring1][P][N].[O][=C][Branch1][C][O][C][Branch1][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2]
generated smiles CC(=O)C1=CC2=CC3=CC=C(N(C)C)C=C3N=C2C=C1N.O=C(O)C(O)C(=O)C4=CC=C5C=CC=CC5=C4
added!
adding editted molecule!!!
===== for SMILES CC(=NN)C1=CN=C2N=NN(CC3=CC4=CC=CN=C4C=C3F)C2=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Ring1][=N][N][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][Branch1][N][C][=N][C][=C][C][=C][Branch1][C][F][C][=C][C][Ring1][#Branch1][=N][Ring1][O][C][=C][Ring2][Ring1][Ring1].[C][C][=C][C][=C][Branch2][Ring1][#Branch1][C][=C][C][=N][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][N][=C][Ring1][O][C][=C][Ring2][Ring1][Ring2]
generated smiles C1C=CC(F)=C1NC2=NC=C3C=C(F)C=CC3=N2.C4C=CC=CC=CC5=NC6=CC(F)=CC=C6N=C5C=C4
added!
adding editted molecule!!!
===== for SMILES CC(=NNC(N)=O)C1=CN=C2N=NN(CC3=CC4=CC=CN=C4C=C3F)C2=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Branch2][=N][N][C][Branch1][C][N][=O][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch1][=C][N][C][=C][C][=C][Branch1][C][N][C][=C][Ring1][#Branch1][F][=N][C][=C][Ring1][#C][C][=C][C][=C][N][=C][N][=C][Branch1][C][N][N][=C][Ring1][#Branch1][Ring1][#Branch2]
generated smiles CC(C)(C)C1=NC(NC2=CC=C(N)C=C2F)=NC=C1C=C3C=CN=CN=C(N)N=C3
added!
adding editted molecule!!!
fp_scores_to_top [0.16883116883116883, 0.15441176470588236, 0.11538461538461539, 0.1079136690647482, 0.1391304347826087, 0.05504587155963303, 0.16447368421052633, 0.11510791366906475, 0.08196721311475409, 0.15753424657534246, 0.18548387096774194, 0.1780821917808219, 0.1736111111111111, 0.07207207207207207, 0.11564625850340136, 0.17058823529411765, 0.13636363636363635, 0.18243243243243243, 0.1554054054054054, 0.06306306306306306, 0.125, 0.07017543859649122, 0.12307692307692308, 0.09302325581395349, 0.2080536912751678, 0.17307692307692307, 0.18181818181818182, 0.17857142857142858, 0.1610738255033557, 0.17901234567901234, 0.10084033613445378, 0.15294117647058825, 0.08208955223880597, 0.05405405405405406, 0.17006802721088435, 0.18497109826589594, 0.10526315789473684, 0.1987179487179487, 0.16025641025641027, 0.1858974358974359, 0.09322033898305085, 0.1917808219178082, 0.1509433962264151, 0.17006802721088435, 0.18452380952380953, 0.16101694915254236, 0.184, 0.11851851851851852, 0.20958083832335328, 0.1437908496732026, 0.1830065359477124, 0.19736842105263158, 0.048, 0.12408759124087591, 0.14393939393939395, 0.16153846153846155, 0.12605042016806722, 0.19375, 0.21212121212121213, 0.15079365079365079, 0.017857142857142856, 0.08771929824561403, 0.20481927710843373, 0.11564625850340136, 0.04201680672268908, 0.12213740458015267, 0.14492753623188406, 0.20481927710843373, 0.1048951048951049, 0.15254237288135594, 0.10240963855421686, 0.15853658536585366, 0.16326530612244897, 0.17123287671232876, 0.1306532663316583, 0.17532467532467533, 0.18840579710144928, 0.18181818181818182, 0.15306122448979592, 0.16568047337278108, 0.13970588235294118, 0.10497237569060773, 0.16666666666666666, 0.11398963730569948, 0.1781609195402299, 0.15, 0.16025641025641027, 0.16666666666666666, 0.15343915343915343, 0.1891891891891892, 0.15083798882681565, 0.17714285714285713, 0.11888111888111888, 0.15384615384615385, 0.14965986394557823, 0.16279069767441862, 0.16201117318435754, 0.15428571428571428, 0.16201117318435754, 0.16025641025641027]
top 70 [58 48 24 62 67 37 51 57 41 89 76 39 10 35 44 46 50 17 26 77 29 27 84 11
 91 75 12 25 73 15 34 43  0 87 82 79  6 72 95 98 96 55 28 45 86 38 99 71
  9 18  1 97 93 88 78 31 69 42 90 59 85 94 66 54 49 80  4 16 74 56]
len offspring_mol 70
186
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
CN1C(=O)COc2c1cnc1ccc(Sc3nnc4c(F)cc(-c5ccc(C(=O)NF)s5)cn34)cc21

Boltz running on GPU 2
11.65
CN1C(=O)COc2c1cnc1ccc(Sc3nnc4c(F)cc(-c5ccc(C(=O)C(N)=O)s5)cn34)cc21

Boltz running on GPU 2
11.16
C/C(=N\OCl)c1ccc2ncc(CC3=C(c4cccc(C#N)c4)C=CC3=O)n2n1

Boltz running on GPU 1
8.89
730/1000 | avg_top1: 12.160 | avg_top10: 11.958 | avg_top100: 11.489 | avg_sa: 3.618 | div: 0.811
{'avg_top1': 12.16, 'avg_top10': 11.958, 'avg_top100': 11.488500000000002, 'auc_top1': 8.725000000000003, 'auc_top10': 8.546829999999995, 'auc_top100': 8.081692809523808, 'avg_sa': 3.6179666543245252, 'diversity_top100': 0.8111834447459855, 'n_oracle': 730}
Already in buffer
CC(=NNC(N)=O)c1ccc2nnc([C@@H](C)C3=C(c4cccc(C#N)c4)C=CC3=O)n2n1

Boltz running on GPU 1
8.48
CC(=NN)c1ccsc1-c1ccc(Oc2ccnc(NC(=O)N3CCC3)c2)c(F)c1

Boltz running on GPU 2
8.48
Fc1cc2ncccc2c(F)c1Cc1cnc2n1N=C(Cc1ccc3ncccc3c1)C2

Boltz running on GPU 1
10.19
Already in buffer
Already in buffer
Already in buffer
N#CC(=O)c1ccc(-c2ccc3nnc(COc4ccnc5ccccc45)n3c2)s1

Boltz running on GPU 1
9.81
Fc1cc[nH]c1Cc1ccc2ncccc2c1

Boltz running on GPU 2
8.07
CC(=NN)c1ccsc1-c1cnc2cc(F)c(C(C)n3nnc4ncc(-c5cnn(C)c5)nc43)c(F)c2c1

Boltz running on GPU 1
10.93
CC(=O)n1cc(-c2cnc3cc(F)c(C(C)c4nnc5c(F)c6c(cn45)NCCC6)c(F)c3c2)cn1

Boltz running on GPU 2
10.85
Cc1csc(-c2ccc3c(c2)oc(=O)n3CF)c1

Boltz running on GPU 2
7.16
C[C@H](c1c(F)cc2ncccc2c1F)c1nnc2ccc(C(F)=NOC(N)=O)nn12

Boltz running on GPU 2
11.75
COCCOc1ccc2nnc(Cc3c(F)cc4ncccc4c3F)n2n1

Boltz running on GPU 2
10.53
740/1000 | avg_top1: 12.160 | avg_top10: 11.958 | avg_top100: 11.494 | avg_sa: 3.625 | div: 0.810
{'avg_top1': 12.16, 'avg_top10': 11.958, 'avg_top100': 11.4943, 'auc_top1': 8.846600000000004, 'auc_top10': 8.666409999999994, 'auc_top100': 8.196606809523807, 'avg_sa': 3.6253653527102445, 'diversity_top100': 0.8095266184720586, 'n_oracle': 740}
CN=C(C)c1ccsc1-c1ccc2nnc(Cc3ccc4ncccc4c3)n2n1

Boltz running on GPU 1
10.54
Already in buffer
Cn1cc(-c2cc3ncc(F)cc3c(F)c2C(F)n2nnc3ncc(N4CCC4)nc32)cn1

Boltz running on GPU 1
9.59
CC(c1c(F)cc2nc3ncccc3cc2c1F)n1nnc2ncc(-c3cnn(CCO)c3)nc21

Boltz running on GPU 2
11.25
Already in buffer
c1c[nH]c(-c2cnc3nnn(Cc4ccc5ncccc5c4)c3n2)c1

Boltz running on GPU 2
10.55
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Fc1cnc2cc(F)c(C(F)n3nnc4ncc(-c5c(F)cc6ncccc6c5F)nc43)c(F)c2c1

Boltz running on GPU 2
11.5
Fc1cnc2cc(F)c(C(F)c3c(F)cc4ncccc4c3F)c(F)c2c1

Boltz running on GPU 2
9.33
FNN=C(F)c1cnc2nnn(Cc3cc4cccnc4cc3F)c2n1

Boltz running on GPU 1
10.94
Cc1cc(F)c2nnc([C@@H](C)c3ccc4ncc(-c5cnn(C)c5)cc4c3)n2c1

Boltz running on GPU 1
11.63
Already in buffer
Already in buffer
Already in buffer
CC(=NNC(N)=O)c1ccc2nnc([C@@H](F)c3ccc4ncccc4c3)n2n1

Boltz running on GPU 2
11.51
Already in buffer
Already in buffer
Already in buffer
C[C@@H](c1cn[nH]c1)c1c(F)cc2ncccc2c1F

Boltz running on GPU 2
8.79
750/1000 | avg_top1: 12.160 | avg_top10: 11.958 | avg_top100: 11.506 | avg_sa: 3.637 | div: 0.807
{'avg_top1': 12.16, 'avg_top10': 11.958, 'avg_top100': 11.505900000000002, 'auc_top1': 8.968200000000005, 'auc_top10': 8.785989999999995, 'auc_top100': 8.311607809523808, 'avg_sa': 3.6371162034726274, 'diversity_top100': 0.8067108336763702, 'n_oracle': 750}
FCCc1cnc2nnn(C(F)c3c(F)cc4ncc(F)cc4c3F)c2n1

Boltz running on GPU 2
11.06
N#CCc1cc2cccnc2cc1F

Boltz running on GPU 2
6.79
Already in buffer
O=C(NC1=CCC(F)C=C1)C1(C(=O)Nc2ccc(Oc3cc(F)no3)c(F)c2)CC1

Boltz running on GPU 1
8.71
Already in buffer
Already in buffer
CC(=NF)c1ccc2nnc([C@@H](C)c3ccc4ncccc4c3)n2n1

Boltz running on GPU 1
10.95
CC(=NN)c1cnc2nnn(Cc3cc4c(cc3F)=NCN(C)C=4)c2n1

Boltz running on GPU 1
10.66
CC(=NN)c1ccsc1-c1ccc2nnc(CCO)n2n1

Boltz running on GPU 1
8.26
Already in buffer
Already in buffer
Already in buffer
CCN1CCC(NC(=O)c2cccc(N3CCN(C4=CC(c5cc6ccc5nccc(C)cc6C)=CC(C)=CC4C)CC3)c2)C1

Boltz running on GPU 2
9.76
[C-]#[N+]C1=CN=C2N=NN(C(F)c3ccc4ncc(-c5ccnc6cc(OC)ccc56)cc4c3)C12

Boltz running on GPU 1
10.65
CC(=O)n1cc(-c2cnc3cc(F)c(C(C)c4nnc5c(F)cc(-c6cnn(F)c6)cn45)c(F)c3c2)cn1

Boltz running on GPU 1
11.18
COc1cnc2ccc([C@H](C)c3nnc4c(Cl)cc(-c5cc(C)no5)cn34)cc2c1

Boltz running on GPU 1
10.89
760/1000 | avg_top1: 12.160 | avg_top10: 11.958 | avg_top100: 11.506 | avg_sa: 3.637 | div: 0.807
{'avg_top1': 12.16, 'avg_top10': 11.958, 'avg_top100': 11.505900000000002, 'auc_top1': 9.089800000000004, 'auc_top10': 8.905569999999994, 'auc_top100': 8.426666809523807, 'avg_sa': 3.6371162034726274, 'diversity_top100': 0.8067108336763702, 'n_oracle': 760}
Already in buffer
Cn1cc(-c2cc(F)c3nnc(N)n3c2)cn1

Boltz running on GPU 2
6.73
Already in buffer
Already in buffer
C[C@@H](OC(N)=O)c1nnc2c(F)cc(-c3cc(N)no3)cn12

Boltz running on GPU 1
8.13
Cn1cc(-c2cnc3ccc(C(F)F)cc3c2)cn1

Boltz running on GPU 1
9.48
CONN=C(C)c1ccc2nnc([C@@H](C)c3ccc4ncccc4c3)n2n1

Boltz running on GPU 2
9.59
Already in buffer
Cc1ccc2ncccc2c1F

Boltz running on GPU 1
5.23
COc1cnc2ccc([C@H](C)c3ncc(-c4cnn(CCO)c4)[nH]3)cc2c1

Boltz running on GPU 2
9.81
Already in buffer
C[C@H](F)c1ccc2ncccc2c1

Boltz running on GPU 1
6.48
[(12.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be37b0>), (12.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a270>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (11.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c120>), (11.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b270>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15350>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afce40>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12eb0>), (11.75, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8ac0>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b350>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4db30>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c74a0>), (11.73, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa270>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17120>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c0b0>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c200>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3890>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc80>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b057b0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7200>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (11.65, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bacc80>), (11.64, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15dd0>), (11.63, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba85f0>), (11.63, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15820>), (11.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15040>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c970>), (11.59, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8cf0>), (11.58, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bc80>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (11.56, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3b30>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ac0>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.51, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15d60>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc820>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a200>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a740>), (11.49, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b172e0>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c3c0>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15b30>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b154a0>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b050b0>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ccf0>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa350>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b900>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcdd0>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7a50>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b3c0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c430>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15f20>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bc10>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15890>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc740>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8dd0>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba83c0>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b4a0>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3820>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15ba0>), (11.26, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b174a0>), (11.25, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc040>), (11.25, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a120>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa510>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ca50>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ad60>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba89e0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b153c0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa040>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bcf0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a4a0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bba0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a5f0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b5f0>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c740>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ac80>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05270>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ba0>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05eb0>), (11.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dcf0>), (11.16, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17580>), (11.15, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bf90>), (11.14, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17900>), (11.14, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b740>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c890>)]
[0.00883553979625504, 0.00883553979625504, 0.008755613038230364, 0.00868295234911702, 0.008653888073471686, 0.00864662200456035, 0.00864662200456035, 0.008632089866737682, 0.008632089866737682, 0.008617557728915013, 0.008581227384358342, 0.008573961315447009, 0.008566695246535673, 0.008566695246535673, 0.008566695246535673, 0.008537630970890338, 0.008530364901979004, 0.008530364901979004, 0.008530364901979004, 0.00852309883306767, 0.008515832764156335, 0.008508566695245, 0.008508566695245, 0.008508566695245, 0.008508566695245, 0.008501300626333665, 0.008501300626333665, 0.008501300626333665, 0.008494034557422332, 0.008494034557422332, 0.008479502419599664, 0.008479502419599664, 0.008479502419599664, 0.00847223635068833, 0.008464970281776996, 0.008457704212865663, 0.008450438143954327, 0.008450438143954327, 0.008435906006131658, 0.008428639937220324, 0.00842137386830899, 0.008414107799397656, 0.008406841730486322, 0.008399575661574989, 0.008392309592663655, 0.008392309592663655, 0.008370511385929652, 0.008363245317018316, 0.008355979248106982, 0.008355979248106982, 0.008355979248106982, 0.008348713179195649, 0.008312382834638978, 0.008312382834638978, 0.008312382834638978, 0.008297850696816308, 0.008297850696816308, 0.008297850696816308, 0.008297850696816308, 0.008290584627904975, 0.008290584627904975, 0.008283318558993641, 0.008276052490082307, 0.008276052490082307, 0.008268786421170973, 0.008268786421170973, 0.008268786421170973, 0.008261520352259638, 0.008261520352259638, 0.008254254283348304, 0.008239722145525636, 0.0082324560766143, 0.0082324560766143, 0.0082324560766143, 0.008225190007702967, 0.008225190007702967, 0.008225190007702967, 0.008225190007702967, 0.008225190007702967, 0.008217923938791633, 0.008217923938791633, 0.0082106578698803, 0.0082106578698803, 0.0082106578698803, 0.008203391800968964, 0.008203391800968964, 0.00819612573205763, 0.00819612573205763, 0.00819612573205763, 0.008181593594234962, 0.008174327525323629, 0.008174327525323629, 0.008152529318589626, 0.008152529318589626, 0.008152529318589626, 0.008152529318589626, 0.008145263249678292, 0.008145263249678292, 0.008137997180766956, 0.008137997180766956, 0.008137997180766956, 0.008137997180766956, 0.008130731111855622, 0.008130731111855622, 0.008130731111855622, 0.008130731111855622, 0.008130731111855622, 0.008130731111855622, 0.008123465042944289, 0.008123465042944289, 0.008123465042944289, 0.008123465042944289, 0.008116198974032955, 0.008116198974032955, 0.008108932905121621, 0.008108932905121621, 0.008101666836210285, 0.008094400767298952, 0.008094400767298952, 0.008079868629476282]
[(11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3820>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7200>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b153c0>), (11.14, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17900>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (11.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcdd0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bba0>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c74a0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc80>), (11.25, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a120>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3820>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afce40>), (11.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcdd0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a5f0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bba0>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7200>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba89e0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12eb0>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3820>), (11.65, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bacc80>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3890>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05270>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b270>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ad60>), (11.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dcf0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15ba0>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ac80>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15350>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (11.12, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c890>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (11.51, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15d60>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a4a0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ca50>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.73, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa270>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b900>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bc10>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8dd0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15890>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b057b0>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05270>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a4a0>), (11.51, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15d60>), (11.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dcf0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a5f0>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3820>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3820>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c430>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15890>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (12.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be37b0>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7200>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b3c0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c430>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15350>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c200>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ca50>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b153c0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15350>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c74a0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (11.17, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ba0>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c970>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12eb0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b057b0>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c0b0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa510>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17120>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (11.64, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15dd0>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4db30>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a5f0>), (11.59, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8cf0>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17120>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b057b0>)]
Bin size: 100
===== for SMILES C[C@@H](c1ccc2ncc(-c3cnn(C)c3)cc2c1)c1nnc2c(F)cc(-c3cn(N)cn3)cn12 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C@@H1][Branch2][Ring1][O][C][=C][C][=C][N][=C][C][Branch1][O][C][C][=N][N][Branch1][C][C][C][=Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][S][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][N][Branch1][C][N][C][=N][Ring1][=Branch1][=C][N][Ring1][S][Ring1][=N]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][Branch2][Ring1][S][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][N][N][C][=N][N][Branch1][C][C][C][=N][Ring1][#Branch1][=C][C][=C][C][=C][C][Ring1][=Branch1][=N][Ring2][Ring1][Ring1][=C][Ring2][Ring1][#Branch2]
generated smiles CC(C)(C)C=CC=CC(C1=CC2=CC(=C1)C(N3C=NN(C)C=N3)=C4C=CC=CC4)=N2
added!
adding editted molecule!!!
===== for SMILES N#CC1=C(F)C=CC2=C1CN(CF)C1=NC3=C(C(=O)NC[C@H](C4=CC=CS4)O2)C(N)=NN3C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][#C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][C][N][Branch1][Ring1][C][F][C][=N][C][=C][Branch2][Ring1][Branch1][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][Ring2][Ring1][Branch1][C][Branch1][C][N][=N][N][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][N][C][=N][C][=C][C][Branch2][Ring1][S][N][C][C][=C][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][C][F][C][Branch1][=Branch1][C][=Branch1][C][=O][O][=C][Ring1][#Branch2][C][=C][Ring1][S][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][=N][C]
generated smiles CCOC(=O)N1C=NC=CC(NCC2=CC=C(C3=CC=C(F)C(C(=O)O)=C3)C=C2)=C1C=CC
added!
adding editted molecule!!!
===== for SMILES O=C1NCCCCN2C=C(C=N2)C2=CN=C3C=CC(=CC3=C2)CCN2N=C(C=CC2=O)C2=CC=C1C(C(F)(F)F)=C2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][N][=C][C][=C][C][=Branch1][Branch2][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][=C][Ring2][Ring2][C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][Ring2][Ring1][C][=C][Ring2][Ring1][=Branch1]
generated smiles O=C(O)C1=C2C=CC3=C1C=CC4=CC5=CC=C(N(C)C)C=C5N=C4C3=C2
added!
adding editted molecule!!!
===== for SMILES O=C1NCCCCN2C=C(C=N2)C2=CC3=CC(=CC=C3N=C2)CCN2N=C(C=CC2=O)C2=CC(C(O)(F)F)=C1C=C2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][C][=C][C][=Branch1][#Branch2][=C][C][=C][Ring1][=Branch1][N][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][Branch1][=Branch2][C][Branch1][C][O][Branch1][C][F][F][=C][Ring2][Ring2][=Branch1][C][=C][Ring1][#Branch2]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][Ring2][Ring1][C][=N][Ring2][Ring1][=Branch1]
generated smiles O=C(O)C1=C2C=CC3=C1C=CC4=CC5=CC=C(N(C)C)C=C5N=C4C3=N2
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CN(C)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][N][=C][Ring1][N][Ring1][#C]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Ring2][S][=C][C][=C][C][Branch2][Ring1][N][N][=N][C][=C][C][=C][Branch1][P][C][=C][N][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][Ring1][=C][C][=C][Ring1][S][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring2][Ring2][=Branch1]
generated smiles CC1=CC(F)=CC(=C1)C=NC=NC(=CC=CC(N=NC2=CC=C(C3=CN=C4C=CC=CC4=C32)C=C)=CC=CC5=CC)CC=C5
added!
adding editted molecule!!!
===== for SMILES CN1C=C(C2=CN3C(=NN=C3C3=CN=C4N=NN(CC5=CC6=CC=CN=C6C=C5F)C4=N3)C(F)=C2)C=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=C][Branch2][Branch1][Branch1][C][=C][N][C][=Branch2][Ring2][=Branch1][=N][N][=C][Ring1][Branch1][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1][C][Branch1][C][F][=C][Ring2][Ring1][#C][C][=N][Ring2][Ring2][Ring2]<eom>
Output: 
output selfies [F][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][=N][C][Branch1][C][F][=C][C][=C][C][Branch1][#C][N][C][=C][N][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][=N][N][Ring2][Ring1][C][Ring1][S]
generated smiles FC1=CC=CC(F)=C1C=NC(F)=CC2=CC(NC3=CN=C4C=CC=CC4=C3)=NN2
added!
adding editted molecule!!!
===== for SMILES CN1C=C(CN2C=C(C(=O)NC3=C(F)C=C(C4=CNC5=NC=NC(N)=C45)C(F)=C3)C(=O)C(C3=CC=C(F)C=C3)=C2)C=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=C][Branch2][=Branch1][Ring2][C][N][C][=C][Branch2][Ring2][#Branch1][C][=Branch1][C][=O][N][C][=C][Branch1][C][F][C][=C][Branch1][P][C][=C][N][C][=N][C][=N][C][Branch1][C][N][=C][Ring1][#Branch2][Ring1][#Branch1][C][Branch1][C][F][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][=C][Ring2][Ring2][Ring1][C][=N][Ring2][Ring2][=Branch2]<eom>
Output: 
output selfies [N][C][=C][C][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][Ring1][=N][C][=C][Ring2][Ring1][=Branch1][F]
generated smiles NC1=CC=C(C2=CC=C3C(=C2)C(F)(F)C4=CC(F)=CC=C43)C=C1F
added!
adding editted molecule!!!
===== for SMILES CCN1CC2=C(C=CC(F)=C2C#N)O[C@@H](C2=CC=CS2)CNC(=O)C2=C3N=C1C=CN3N=C2N =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][N][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][#N][O][C@@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][C][N][C][=Branch1][C][=O][C][=C][N][=C][Ring2][Ring1][#Branch2][C][=C][N][Ring1][=Branch1][N][=C][Ring1][=Branch2][N]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring2][=Branch1][N][C][=Branch1][C][=O][N][C][C][C][C@@H1][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][C][C][Ring2][Ring1][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][S][C]
generated smiles C1COC(=O)C2=CC=CC(NC(=O)NCCC[C@@H1]1NC3=CC=C(C(F)(F)F)C=C3CC)=C2C=CC
added!
adding editted molecule!!!
===== for SMILES CCN1CC2=C(C#N)C(F)=CC=C2O[C@@H](C2=CC=CS2)CNC(=O)C2=C3N=C1C=CN3N=C2N =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][Ring1][C][#N][C][Branch1][C][F][=C][C][=C][Ring1][=Branch2][O][C@@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][C][N][C][=Branch1][C][=O][C][=C][N][=C][Ring2][Ring1][#Branch2][C][=C][N][Ring1][=Branch1][N][=C][Ring1][=Branch2][N]<eom>
Output: 
output selfies [C][C][C][=C][Branch1][C][C][C][=C][Branch2][Ring1][O][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][C][=C][C][Branch1][C][C][=C][C][Ring1][=Branch2][=N][Ring1][=N][C][=C][Ring2][Ring1][=Branch1][N][C][C][N][Branch2][Ring1][O][C][=C][C][=C][C][Branch1][P][C][=Branch1][C][=O][N][C][C][N][Branch1][Ring1][C][C][C][C][Ring1][#Branch1][=C][Ring1][S][C][C][Ring2][Ring1][=Branch1]
generated smiles CC1C=C(C)C=C(C2=C3C=CC(=C2)C(C)=CC(C)=CC=N3)C=C1N4CCN(C5=CC=CC(C(=O)NC6CN(CC)CC6)=C5)CC4
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=C][N][=C][Branch1][#Branch2][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=N][=C][Ring1][P][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][F]
generated smiles C12C=CC(F)=C(C3=CC=C4C=CN=C(NC5=CC=CC=C5)C4=C3C=C1)C=C2C6=CC=CC=C6F
added!
adding editted molecule!!!
===== for SMILES CC(=NF)C1=NN2C(CC3=C(F)C=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Ring1][=N][F][C][=N][N][C][Branch2][Ring1][Ring2][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][=C][N][=C][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch1][Ring1][C][#N][C][Ring1][Branch2][=N][Ring1][P]
generated smiles CC1=CC(F)=CC(=C1)C=NC(F)=C2C=CC=C(C#N)C2=N
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=NN(CCC3=CC=C4N=CC(C5=CN(CCO)N=C5)=CC4=C3)C(=O)C=C2)C=C1C(F)(F)F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][#C][C][=N][N][Branch2][Ring1][S][C][C][C][=C][C][=C][N][=C][C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][=C][C][Ring1][=C][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][P][C][Branch1][C][F][Branch1][C][F][F]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][C][=C][Branch2][Ring1][P][N][C][=Branch1][C][=O][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2][C][=C][Ring1][S][Ring2][Ring1][#Branch1][=C][C][=C][Ring2][Ring1][=N][Ring2][Ring1][P]
generated smiles CC(C)(C)C1=CC=CC2(C=CC=CN=CC3=CNC(=O)NC=CC=C3C=CC=CC(C(F)(F)F)=C)C=C21
added!
adding editted molecule!!!
===== for SMILES CC(N=O)C1=NN2C(=NN=C2CC2=C(F)C=C3N=CC=CC3=C2F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch1][Ring1][N][=O][C][=N][N][C][=Branch2][Ring1][=Branch2][=N][N][=C][Ring1][Branch1][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch2][Ring2][C][C][=C][C][=C][C][Branch2][Ring1][=Branch1][N][C][=Branch1][C][=O][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][=C][Ring2][Ring1][Ring1][=C][C][=C][Ring2][Ring1][#Branch2][F]
generated smiles C1C(C)(C2)C=NC(C=CC=CC1(NC(=O)C3=NC4=CC=CC=C4C=C3F)C)C=C2F
added!
adding editted molecule!!!
===== for SMILES CC(=NC1=CC2=CC(C3=CN(C)N=C3)=CN=C2C=C1)C1=CSC(C2=NN3C(=NN=C3CC3=CC=C4N=CC=CC4=C3)C=C2)=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch2][Ring1][N][=N][C][=C][C][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][N][=C][Ring1][N][C][=C][Ring1][S][C][=C][S][C][Branch2][Ring1][P][C][=N][N][C][=Branch2][Ring1][Branch1][=N][N][=C][Ring1][Branch1][C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][=C][Ring2][Ring1][Ring2][=C][Ring2][Ring1][=Branch2]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][C][=C][C][=N][C][=N][C][=Branch2][=Branch1][Branch1][=C][C][=C][C][=C][Branch2][Ring2][S][N][=C][N][=C][Branch2][Ring1][Ring2][N][C][=C][C][=C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring1][N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1][Ring2][Ring1][=Branch1][C][=C][Ring2][Ring1][S][C][=C][Ring2][Ring2][=Branch1][C][Ring2][Ring2][#Branch2][=C][Ring2][Ring2][=C]
generated smiles C1C=CC(C)=CC=NC=NC=CC=CC=C1N=CN=C(NC2=CC=C(C3=CC=CC=C3)C=C2)C4=CC=C(Cl)C=C4
added!
adding editted molecule!!!
===== for SMILES N#CC1=C(F)C=CC2=C1CN(CCCO)C1=NC3=C(C(=O)NC[C@H](C4=CC=CS4)O2)C(N)=NN3C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][#C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][C][N][Branch1][Branch1][C][C][C][O][C][=N][C][=C][Branch2][Ring1][Branch1][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][Ring2][Ring1][#Branch1][C][Branch1][C][N][=N][N][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][N][C][=N][C][=C][C][Branch2][Ring1][#Branch2][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2][Cl][=C][C][=C][Ring2][Ring1][#Branch1][N][Ring2][Ring1][#Branch2][C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1]
generated smiles CCOC(=O)NC1=NC=CC(OC2=CC=CC=C2C3=CC=C(F)C(F)=C3Cl)C=C1NCC4=CC=C(F)C=C4
added!
adding editted molecule!!!
===== for SMILES C[C@H](c1c(F)cc2ncccc2c1F)c1nnc2ccc(C(F)=NOC(N)=O)nn12 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C@H1][Branch2][Ring1][Ring1][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=N][N][=C][C][=C][C][Branch1][N][C][Branch1][C][F][=N][O][C][Branch1][C][N][=O][=N][N][Ring1][S][Ring1][=N]<eom>
Output: 
output selfies [C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][C][Branch1][C][F][=C][Ring1][=Branch2][C][=N][C][=N][C][=C][C][=C][Branch1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][C][N][=N][NH1][C][Ring1][=Branch2][=O][C][=C][Ring1][P][N].[O][=C][Branch1][C][O][C][Branch1][C][F][Branch1][C][F][F]
generated smiles CC1=C(F)C(F)=CC(F)=C1C=NC=NC=C2C=C(C3=CC4=CC=C3CN=N[NH1]C4)OC=C2N.O=C(O)C(F)(F)F
added!
adding editted molecule!!!
===== for SMILES COC1=CC2=CC([C@H](C)N=C(C)C3=CN=C4N=NN(CC5=CC6=CC=CN=C6C=C5F)C4=N3)=CC=C2N=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=C][C][Branch2][Ring2][#Branch2][C@H1][Branch1][C][C][N][=C][Branch1][C][C][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1][=C][C][=C][Ring2][Ring1][S][N][=C][Ring2][Ring2][Ring2]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][N][=C][Branch2][Ring1][N][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][=C][Ring1][S][C][Ring2][Ring1][#Branch1][=C][Ring2][Ring1][O][=C][Ring2][Ring1][S]
generated smiles C1OC=CC=CC1C=CC2=CN=C3N=C(NC=CC4=C(C=CC5=CC=C6N=CC=CC6=C5)C=C4)C3=C2C
added!
adding editted molecule!!!
===== for SMILES NC(=O)C1=CC=C(C2=CN=C3N=NN(C(F)C4=C(F)C=C5N=CC(F)=CC5=C4F)C3=N2)C=C1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][N][C][=C][N][=C][N][=N][N][Branch2][Ring1][#Branch2][C][Branch1][C][F][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][C][F][=C][C][Ring1][#Branch1][=C][Ring1][N][F][C][Ring2][Ring1][Ring2][=N][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][=C][F]<eom>
Output: 
output selfies [F][C][=C][C][=C][Branch2][Ring2][C][C][=C][C][=N][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][C][=C][Ring1][#Branch2][N][=C][Ring1][=C][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][=C][Ring2][Ring1][=N]
generated smiles FC1=CC=C(C=CC2=NC3=CC(C(F)(F)F)=CC=C3N=C2C4=CC=CCF)C4C=C1
added!
adding editted molecule!!!
===== for SMILES NC(=O)C1=CC=C(C2=CN=C3N=NN(C(F)C4=C(F)C5=CC(F)=CN=C5C=C4F)C3=N2)C=C1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][N][C][=C][N][=C][N][=N][N][Branch2][Ring1][#Branch2][C][Branch1][C][F][C][=C][Branch1][C][F][C][=C][C][Branch1][C][F][=C][N][=C][Ring1][#Branch1][C][=C][Ring1][N][F][C][Ring2][Ring1][Ring2][=N][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][=C][F]<eom>
Output: 
output selfies [N][C][=Branch1][C][=O][C][=C][C][Branch1][C][F][=C][C][Branch2][Ring2][=Branch1][N][C][=N][C][=C][C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][=N][C][=C][N][=C][Branch1][C][F][C][=C][Ring2][Ring1][C][Ring1][#Branch1][=C][Ring2][Ring1][O][F][=C][Ring2][Ring1][P]
generated smiles N1C(=O)C=CC(F)=CC1NC=NC=CC(C2=CC=CC=C2)=NC3=CN=C(F)C=C3
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=CC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=C][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Branch1][=Branch1][=C][C][=C][C][=C][Branch2][Ring2][=Branch1][N][C][=C][C][=C][Branch2][Ring1][Branch2][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][N][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][#C][C][=C][Ring2][Ring1][Branch1][C][=C][Ring2][Ring1][=N][C][=C][Ring2][Ring2][C][C][N][Ring2][Ring2][=Branch1]
generated smiles CC1=CC(F)=CC(=C1)C=NC=NC(=CC=CC=C2NC=CC=C(C3=CC=CC(F)=C3NC4=CC=CC=C4)C2C=C)CN
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Ring2][S][=C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][N][=C][Ring1][O][C][=C][C][=C][Branch1][S][N][C][C][N][Branch1][=Branch1][C][C][C][Ring1][Ring1][C][C][Ring1][=Branch2][C][=C][Ring1][#C][C][=C][Ring2][Ring1][P][C][=C][Ring2][Ring2][=Branch1][C]
generated smiles CC1=CC(F)=CC(=C12)C=NC=NC(=CC3=C(F)C=CC=C3N=CC4=CC=C(N5CCN(C6CC6)CC5)C=C4C=C2C)CC
added!
adding editted molecule!!!
===== for SMILES CC(=O)N1CCC2=CC=C(NC3=NC=C(Cl)C(NC4=CC=CC=C4C(=O)NN)=N3)C=C2C(C)C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][N][C][C][C][=C][C][=C][Branch2][Ring1][#C][N][C][=N][C][=C][Branch1][C][Cl][C][Branch1][S][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][N][N][=N][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch2][C][Branch1][C][C][C][Ring2][Ring1][#C]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][C][=C][Branch1][#C][N][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=Branch2][N][=C][N][Branch1][=N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1][Cl][C][=Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1]
generated smiles CC(C1)CC2=C(NC3=NC4=CC=CC=C4C3)N=CN(C5=CC=C(Cl)C=C5Cl)C2C(=O)N1C6=CC=C(Cl)C=C6
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=CN3C(SC4=CC=C5N=CC6=C(OCC(=O)N6C)C5=C4)=NN=C3C(F)=C2)S1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][P][C][=C][N][C][Branch2][Ring1][N][S][C][=C][C][=C][N][=C][C][=C][Branch1][O][O][C][C][=Branch1][C][=O][N][Ring1][#Branch1][C][C][Ring1][N][=C][Ring1][S][=N][N][=C][Ring2][Ring1][=Branch1][C][Branch1][C][F][=C][Ring2][Ring1][O][S][Ring2][Ring1][S]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][=Branch1][C][=O][N][C][=N][C][=C][C][=C][Branch1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][C][N][=N][NH1][C][Ring1][=Branch2][=O][C][=C][Ring1][P][Ring2][Ring1][Branch1].[N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][#Branch1][=Branch1][C][=C][C][=C][C][=Branch2][=Branch1][=Branch1][=C][N][=C][Branch2][Branch1][O][C][=C][C][=C][Branch2][Ring2][P][N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring1][#C][C][=C][N][=C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][=C][C][=C][C][=C][Ring1][P][Ring1][=Branch1][C][=C][Ring2][Ring1][#Branch1][C][=C][Ring2][Ring1][S][C][=C][Ring2][Ring2][=Branch1][C][=C][Ring2][Ring2][=N][=C][Ring2][Branch1][Ring1]
generated smiles CC(C)C(=O)N1C=NC=C2C=C(C3=CC4=CC=C3CN=N[NH1]C4)OC=C21.NC(=O)C=CC=C5CC=CC=C6C(=CN=C(C=CC=C(NC(=O)C=CC=CC(C7=CN=C(C8=CC=C(F)C=C8)C9=CC=CC=C79)C=C)C)C6C)C5=C
added!
adding editted molecule!!!
===== for SMILES O=C(NC1=CC=C(OC2=CC=NC(NC(=O)N3CCC3)=C2)C(F)=C1)C1=CN(CC2CC2)C(=O)N(C2=CC=C(F)C=C2)C1=O =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][Branch2][Ring2][#Branch1][N][C][=C][C][=C][Branch2][Ring1][#Branch1][O][C][=C][C][=N][C][Branch1][N][N][C][=Branch1][C][=O][N][C][C][C][Ring1][Ring2][=C][Ring1][=N][C][Branch1][C][F][=C][Ring2][Ring1][Branch1][C][=C][N][Branch1][#Branch1][C][C][C][C][Ring1][Ring1][C][=Branch1][C][=O][N][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][Ring2][Ring1][C][=O]<eom>
Output: 
output selfies [C][C][C][C][=N][C][Branch2][Ring2][=Branch1][C][=C][C][=C][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][Cl][C][=C][Ring2][Ring1][C][=C][C][=C][Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][C][C][N][C][C][C][C][C][Ring1][=Branch1]
generated smiles C1CC2C=NC3(C=CC=C(NC4=CC=C(C(F)(F)F)C=C4Cl)C3=CC=C2)C(=O)N1CCCN5CCCCC5
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=CN3C(SC4=CC=C5N=CC6=C(OCC(=O)N6C)C5=C4)=NN=C3C(F)=C2)S1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][P][C][=C][N][C][Branch2][Ring1][N][S][C][=C][C][=C][N][=C][C][=C][Branch1][O][O][C][C][=Branch1][C][=O][N][Ring1][#Branch1][C][C][Ring1][N][=C][Ring1][S][=N][N][=C][Ring2][Ring1][=Branch1][C][Branch1][C][F][=C][Ring2][Ring1][O][S][Ring2][Ring1][S]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][=Branch1][C][=O][N][C][=N][C][=C][C][=C][Branch1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][C][N][=N][NH1][C][Ring1][=Branch2][=O][C][=C][Ring1][P][Ring2][Ring1][Branch1].[N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][#Branch1][=Branch1][C][=C][C][=C][C][=Branch2][=Branch1][=Branch1][=C][N][=C][Branch2][Branch1][O][C][=C][C][=C][Branch2][Ring2][P][N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring1][#C][C][=C][N][=C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][=C][C][=C][C][=C][Ring1][P][Ring1][=Branch1][C][=C][Ring2][Ring1][#Branch1][C][=C][Ring2][Ring1][S][C][=C][Ring2][Ring2][=Branch1][C][=C][Ring2][Ring2][=N][=C][Ring2][Branch1][Ring1]
generated smiles CC(C)C(=O)N1C=NC=C2C=C(C3=CC4=CC=C3CN=N[NH1]C4)OC=C21.NC(=O)C=CC=C5CC=CC=C6C(=CN=C(C=CC=C(NC(=O)C=CC=CC(C7=CN=C(C8=CC=C(F)C=C8)C9=CC=CC=C79)C=C)C)C6C)C5=C
added!
adding editted molecule!!!
===== for SMILES CN1C=NOC(C2=CN=C3C=CC([C@H](F)C4=NN=C5C(N)=CC(N)=CN54)=CC3=C2)=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=N][O][C][Branch2][Ring2][O][C][=C][N][=C][C][=C][C][Branch2][Ring1][Branch2][C@H1][Branch1][C][F][C][=N][N][=C][C][Branch1][C][N][=C][C][Branch1][C][N][=C][N][Ring1][Branch2][Ring1][O][=C][C][Ring2][Ring1][Ring1][=C][Ring2][Ring1][#Branch1][=C][Ring2][Ring1][=N]<eom>
Output: 
output selfies [N][C][=N][C][=N][C][=C][Ring1][=Branch1][C][Branch1][=Branch1][C][=Branch1][C][=O][O][=C][C][=C][C][Branch1][C][N][=C][C][=C][Ring1][#Branch1][Ring1][S]
generated smiles NC1=NC2=NC=C1C(C(=O)O)=CC3=CC(N)=CC=C32
added!
adding editted molecule!!!
===== for SMILES C[C@@H](C1=CC2=CC(C3=CN(C)N=C3)=CN=C2C=C1)C1=NN=C2C(F)=CC(C3=CN(C)C=N3)=CN21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C@@H1][Branch2][Ring1][O][C][=C][C][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][N][=C][Ring1][N][C][=C][Ring1][S][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][N][Branch1][C][C][C][=N][Ring1][=Branch1][=C][N][Ring1][=N][Ring1][S]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][Ring1][=C][C][=C][Ring2][Ring1][Branch2][N][C][=N][C][=C][Branch1][=Branch2][C][Branch1][C][C][Branch1][C][C][C][C][=C][Ring1][#Branch2]
generated smiles C1C=CC(F)=C(C2=CC3=CC(=C2)C(F)(F)C4=CC(F)=CC=C43)C=C1NC5=NC=C(C(C)(C)C)C=C5
added!
adding editted molecule!!!
===== for SMILES NC1=NN2C=CC3=NC2=C1C(=O)NC[C@H](C1=CC=CS1)OC1=C(CN3CCCO)C(N=O)=C(F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=N][N][C][=C][C][=N][C][Ring1][=Branch1][=C][Ring1][=Branch2][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][C][=C][Branch1][#Branch2][C][N][Ring2][Ring1][Ring1][C][C][C][O][C][Branch1][Ring1][N][=O][=C][Branch1][C][F][C][=C][Ring1][#C]<eom>
Output: 
output selfies [C][C][=C][Branch1][=Branch1][C][=Branch1][C][=O][O][C][=Branch1][C][=O][C][=C][N][Ring1][#Branch2][C][=C][C][=C][Branch1][S][N][C][C][N][Branch1][=Branch1][C][Branch1][C][C][C][C][C][Ring1][=Branch2][C][=C][Ring1][#C]
generated smiles CC1=C(C(=O)O)C(=O)C=CN1C2=CC=C(N3CCN(C(C)C)CC3)C=C2
added!
adding editted molecule!!!
===== for SMILES CC(=O)C(F)(F)C1=CC2=CC=C1C(=O)NCCCCN1C=C(C=N1)C1=CN=C3C=CC(=CC3=C1)CCN1N=C2C=CC1=O =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][C][Branch1][C][F][Branch1][C][F][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][N][=C][C][=C][C][=Branch1][Branch2][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][C][N][N][=C][Ring2][Ring1][#C][C][=C][C][Ring1][=Branch1][=O]<eom>
Output: 
output selfies [C][C][=Branch1][C][=O][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][=C][Ring1][P][N].[O][=C][Branch1][C][O][C][Branch1][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2]
generated smiles CC(=O)C1=CC2=CC3=CC=C(N(C)C)C=C3N=C2C=C1N.O=C(O)C(O)C(=O)C4=CC=C5C=CC=CC5=C4
added!
adding editted molecule!!!
===== for SMILES CC(=NN)C1=CN=C2N=NN(CC3=CC4=CC=CN=C4C=C3F)C2=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Ring1][=N][N][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][Branch1][N][C][=N][C][=C][C][=C][Branch1][C][F][C][=C][C][Ring1][#Branch1][=N][Ring1][O][C][=C][Ring2][Ring1][Ring1].[C][C][=C][C][=C][Branch2][Ring1][#Branch1][C][=C][C][=N][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][N][=C][Ring1][O][C][=C][Ring2][Ring1][Ring2]
generated smiles C1C=CC(F)=C1NC2=NC=C3C=C(F)C=CC3=N2.C4C=CC=CC=CC5=NC6=CC(F)=CC=C6N=C5C=C4
added!
adding editted molecule!!!
fp_scores_to_top [0.17518248175182483, 0.1917808219178082, 0.18128654970760233, 0.1962025316455696, 0.8130841121495327, 0.027522935779816515, 0.16233766233766234, 0.15483870967741936, 0.18518518518518517, 0.10084033613445378, 0.10483870967741936, 0.19727891156462585, 0.16184971098265896, 0.12949640287769784, 0.10738255033557047, 0.13559322033898305, 0.47794117647058826, 0.17567567567567569, 0.13245033112582782, 0.2023121387283237, 0.1746987951807229, 0.07964601769911504, 0.1746987951807229, 0.2, 0.16556291390728478, 0.9019607843137255, 0.037037037037037035, 0.10077519379844961, 0.07913669064748201, 0.17037037037037037, 0.20149253731343283, 0.10434782608695652, 0.16666666666666666, 0.1452991452991453, 0.16184971098265896, 0.008547008547008548, 0.18666666666666668, 0.18543046357615894, 0.1917808219178082, 0.1746987951807229, 0.07936507936507936, 0.04504504504504504, 0.5126050420168067, 0.09523809523809523, 0.2074074074074074, 0.16666666666666666, 0.19135802469135801, 0.16129032258064516, 0.18125, 0.14375, 0.5126050420168067, 0.19736842105263158, 0.07758620689655173, 0.17692307692307693, 0.17486338797814208, 0.175, 0.03759398496240601, 0.08196721311475409, 0.13855421686746988, 0.09836065573770492, 0.125, 0.13253012048192772, 0.07936507936507936, 0.11666666666666667, 0.1619718309859155, 0.16149068322981366, 0.1590909090909091, 0.16296296296296298, 0.0625, 0.174496644295302, 0.10240963855421686, 0.15853658536585366, 0.16326530612244897, 0.17123287671232876, 0.1306532663316583, 0.17532467532467533, 0.18840579710144928, 0.18181818181818182, 0.15306122448979592, 0.16568047337278108, 0.13970588235294118, 0.10497237569060773, 0.16666666666666666, 0.11398963730569948, 0.1781609195402299, 0.17714285714285713, 0.15, 0.16666666666666666, 0.16025641025641027, 0.15343915343915343, 0.1891891891891892, 0.17714285714285713, 0.11888111888111888, 0.15083798882681565, 0.11888111888111888, 0.16279069767441862, 0.15384615384615385, 0.14965986394557823, 0.15428571428571428, 0.16201117318435754]
top 70 [25  4 42 50 16 44 19 30 23 51 11  3 38  1 46 90 76 36 37  8 77  2 48 84
 91 85 53 17 75  0 55 54 22 20 39 69 73 29 87 82 45 32 79 24 72 67 95  6
 99 64 34 12 65 47 88 66 71  7 98 96 89 78 93 86 97 33 49 80 58 15]
len offspring_mol 70
187
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
CCN1Cc2c(ccc(F)c2C#N)O[C@@H](c2cccs2)CNC(=O)c2c(F)nn3ccc1nc23

Boltz running on GPU 1
11.6
Already in buffer
C[C@H]1CNC(=O)c2c(N)nn3ccc(nc23)N(C(=O)F)Cc2c(ccc(F)c2F)O1

Boltz running on GPU 1
11.48
C[C@H]1CNC(=O)c2c(N)nn3ccc(nc23)N(F)Cc2c(ccc(F)c2C(=O)NC2=CCC(F)C=C2)O1

Boltz running on GPU 2
11.01
770/1000 | avg_top1: 12.160 | avg_top10: 11.958 | avg_top100: 11.513 | avg_sa: 3.656 | div: 0.807
{'avg_top1': 12.16, 'avg_top10': 11.958, 'avg_top100': 11.512900000000004, 'auc_top1': 9.211400000000005, 'auc_top10': 9.025149999999995, 'auc_top100': 8.541760809523806, 'avg_sa': 3.656147566992003, 'diversity_top100': 0.8070457957840759, 'n_oracle': 770}
Already in buffer
O=C1OCC2=NC(c3ccc(F)cc3F)C(Oc3ccnc4[nH]cc(Cc5ccc6ncccc6c5)c34)=C12

Boltz running on GPU 2
10.17
Oc1ccc2cc(F)c(Cc3ccc4ncccc4c3)n2n1

Boltz running on GPU 1
9.44
C/C(=N\ON)c1ccc2ncc(Cc3c(F)cc4ncccc4c3F)n2n1

Boltz running on GPU 1
10.95
Already in buffer
Nc1ncnc2[nH]cc(C3=NN=C(Cc4ccc5ncccc5c4)C3F)c12

Boltz running on GPU 2
8.4
CC(=O)C(F)(F)c1c[nH]c2nccc(OC3=C4C(=O)OCC4=NC3c3ccc(F)cc3F)c12

Boltz running on GPU 2
11.28
C/C(=N\OCl)c1ccc2ncc(Cc3c(N)cc4ncccc4c3F)n2n1

Boltz running on GPU 2
10.31
CON=C(C)c1ccc2ncc(Cc3c(F)cc4ncccc4c3F)n2n1

Boltz running on GPU 2
10.93
Fc1cc2ncccc2c(F)c1Cc1cnc2ccc(-c3cc(F)c4ncccc4c3)nn12

Boltz running on GPU 2
11.22
Already in buffer
Already in buffer
Cc1cc(-c2cc(F)c3nnc([C@@H](C)c4ccc5ncccc5c4)n3c2)on1

Boltz running on GPU 2
10.82
C/C(=N\OC(N)=O)c1ccc2ncc(Cc3c(C)cc4ncccc4c3F)n2n1

Boltz running on GPU 2
10.14
780/1000 | avg_top1: 12.160 | avg_top10: 11.958 | avg_top100: 11.514 | avg_sa: 3.648 | div: 0.807
{'avg_top1': 12.16, 'avg_top10': 11.958, 'avg_top100': 11.514100000000003, 'auc_top1': 9.333000000000006, 'auc_top10': 9.144729999999994, 'auc_top100': 8.656895809523807, 'avg_sa': 3.647534958051431, 'diversity_top100': 0.8071204563586333, 'n_oracle': 780}
CC(c1c(F)cc2ncc(O)cc2c1F)n1nnc2ncc(-c3ccc(C(N)=O)c(F)c3)nc21

Boltz running on GPU 1
12.0
Already in buffer
CNC(=O)c1ccc(-c2ccc(=O)n(CCc3ccc4c(c3)CC3C=CC=NC3=N4)n2)cc1C(F)(F)F

Boltz running on GPU 1
10.53
CC(=O)n1cc(-c2cnc3cc(F)c(C(C)c4nnc5c(F)cc(N)cn45)c(F)c3c2)cn1

Boltz running on GPU 1
11.6
Already in buffer
Already in buffer
Cc1c(F)c(F)cc(F)c1C=NC=NC=C1C=C(c2cc3ccc2CN=NNC3)OC=C1N.O=C(O)C(F)(F)F

Boltz running on GPU 1
[Errno 2] No such file or directory: '/data/boltz/results/boltz_results_c-met_Cc1c(F)c(F)cc(F)c1C=NC=NC=C1C=C(c2cc3ccc2CN=NNC3)OC=C1N.O=C(O)C(F)(F)F/predictions/c-met_Cc1c(F)c(F)cc(F)c1C=NC=NC=C1C=C(c2cc3ccc2CN=NNC3)OC=C1N.O=C(O)C(F)(F)F/affinity_c-met_Cc1c(F)c(F)cc(F)c1C=NC=NC=C1C=C(c2cc3ccc2CN=NNC3)OC=C1N.O=C(O)C(F)(F)F.json'
-0.0
NC(=O)c1ccc(-c2cnc3nnn(F)c3n2)cc1F

Boltz running on GPU 1
7.76
C/C(=N\OCl)C1=NN2C(Cc3c(F)cc4ncccc4c3F)=CCC2C=C1

Boltz running on GPU 1
10.26
Already in buffer
C[C@@H](c1ccc2ncccc2c1)n1nnc2ncc(F)nc21

Boltz running on GPU 2
8.89
[C-]#[N+]C1=CN=C2N=C3COC(=O)C3=C(Oc3ccnc4[nH]cc(-c5cccnc5)c34)C12

Boltz running on GPU 1
11.25
CC(=NF)c1cnc2nnn(CC3=Nc4ccc([C@H](C)c5nnc6c(F)cc(-c7cc(C)no7)cn56)cc4C3)c2n1

Boltz running on GPU 1
10.56
[C-]#[N+]C1=CN=C2N=NN(C(C)c3ccc(Nc4ncc(Cl)c(Nc5ccccc5F)n4)cc3)C12

Boltz running on GPU 1
10.5
790/1000 | avg_top1: 12.160 | avg_top10: 11.977 | avg_top100: 11.527 | avg_sa: 3.674 | div: 0.808
{'avg_top1': 12.16, 'avg_top10': 11.977, 'avg_top100': 11.5266, 'auc_top1': 9.454600000000006, 'auc_top10': 9.264404999999993, 'auc_top100': 8.772099309523806, 'avg_sa': 3.674227498999808, 'diversity_top100': 0.8080726677705982, 'n_oracle': 790}
O=C(Nc1ccc(Oc2ccnc(NC(=O)N3CCC3)c2)c(F)c1)c1ccc2ncccc2c1

Boltz running on GPU 2
9.15
COc1cnc2cc(F)c(C(C)n3nnc4ncc(-c5ccc(C(=O)F)c(F)c5)nc43)c(F)c2c1

Boltz running on GPU 1
11.65
Cn1cc(-c2cc(F)c3nnc(-c4cnc5nnn(CF)c5n4)n3c2)cn1

Boltz running on GPU 1
9.72
Already in buffer
NC(=O)c1ccc(-c2cnc3nnn(C(F)F)c3n2)cc1F

Boltz running on GPU 1
7.68
Already in buffer
Already in buffer
CNC1=Nc2cc(F)c(C(C)n3nnc4ncc(-c5cnn(C)c5)nc43)c(F)c2C1

Boltz running on GPU 1
11.47
CNC(=O)C1=CC=C[C@H](c2cccs2)S1

Boltz running on GPU 1
6.9
Already in buffer
COc1ccc2c(OCc3nnc4ccc(C=CC#N)cn34)ccnc2c1

Boltz running on GPU 1
10.75
Already in buffer
COc1cn(Cc2cnn(C)c2)cc1-c1ccc(F)cc1

Boltz running on GPU 1
8.25
Already in buffer
C[C@@H](c1ccc2ncccc2c1)n1nnc2ncc(-c3cnn(CO)c3)nc21

Boltz running on GPU 1
10.78
Already in buffer
NOc1cnc2ccc(Cc3ccc4ncccc4c3)cc2c1

Boltz running on GPU 1
9.03
800/1000 | avg_top1: 12.160 | avg_top10: 11.977 | avg_top100: 11.534 | avg_sa: 3.666 | div: 0.807
{'avg_top1': 12.16, 'avg_top10': 11.977, 'avg_top100': 11.533700000000001, 'auc_top1': 9.576200000000005, 'auc_top10': 9.384174999999994, 'auc_top100': 8.887400809523806, 'avg_sa': 3.6660883030836233, 'diversity_top100': 0.8069662169031405, 'n_oracle': 800}
C[C@@H](c1ccc2ncc(-c3cnn(CCO)c3)cc2c1)c1nnc2c(F)cc(-c3cn(C)cn3)cn12

Boltz running on GPU 1
11.31
COc1cc2c(Oc3ccc(NC(=O)C4(C(=O)NC5=CCC(F)C=C5)CC4)cc3F)ccnc2cc1C

Boltz running on GPU 1
10.22
O=C(CCN1CCOCC1)c1cn(CC2CCOCC2)cc(-c2ccc(F)cc2)c1=O

Boltz running on GPU 1
8.59
NOc1cnc2ccc(Oc3ccnc4[nH]cc(-c5cccnc5)c34)cc2c1

Boltz running on GPU 1
10.43
Already in buffer
Cn1cc(-c2cnc3cc(F)c(Cc4ccc5ncc(-c6cnn(CCO)c6)cc5c4)c(F)c3c2)cn1

Boltz running on GPU 1
10.94
Already in buffer
COn1cc(-c2cnc3nnn([C@@H](C)c4ccc5ncccc5c4)c3n2)cn1

Boltz running on GPU 1
10.5
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Cc1cc(-c2ccc(F)cc2)on1

Boltz running on GPU 1
5.05
Cn1cnc(CCOc2ccnc3cc(OCCCN4CCOCC4)ccc23)c1

Boltz running on GPU 1
8.95
Already in buffer
C[C@@H](c1ccnc(NC(=O)N2CCC2)c1)n1nnc2ncc(-c3cnn(CCO)c3)nc21

Boltz running on GPU 1
10.06
N#Cc1cc(Cl)c2ncccc2c1

Boltz running on GPU 1
5.93
810/1000 | avg_top1: 12.160 | avg_top10: 11.977 | avg_top100: 11.535 | avg_sa: 3.676 | div: 0.806
{'avg_top1': 12.16, 'avg_top10': 11.977, 'avg_top100': 11.5347, 'auc_top1': 9.697800000000006, 'auc_top10': 9.503944999999995, 'auc_top100': 9.002742809523806, 'avg_sa': 3.6758960965396494, 'diversity_top100': 0.8057057771068893, 'n_oracle': 810}
[(12.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be37b0>), (12.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a270>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (12.0, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8ba0>), (11.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c120>), (11.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b270>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15350>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afce40>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b4bcf0>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12eb0>), (11.75, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8ac0>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b350>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4db30>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c74a0>), (11.73, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa270>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c0b0>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c200>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3890>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc80>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b057b0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7200>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (11.65, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bacc80>), (11.65, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a890>), (11.64, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15dd0>), (11.63, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba85f0>), (11.63, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15820>), (11.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15040>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c970>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b4bf90>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8190>), (11.59, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8cf0>), (11.58, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bc80>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (11.56, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3b30>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ac0>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.51, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15d60>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc820>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a200>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a740>), (11.49, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b172e0>), (11.48, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b4b200>), (11.47, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ab30>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c3c0>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15b30>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b154a0>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b050b0>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ccf0>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa350>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b900>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcdd0>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7a50>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b3c0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c430>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15f20>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bc10>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15890>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4df20>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc740>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9aa50>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba83c0>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b4a0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15ba0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17510>), (11.26, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b174a0>), (11.25, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc040>), (11.25, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a120>), (11.25, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7ba0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa510>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ca50>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ad60>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d65eb44a0>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba89e0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b153c0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa040>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bcf0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a4a0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bba0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a5f0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b5f0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b4b6d0>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c740>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>)]
[0.008813893479454217, 0.008813893479454217, 0.0087341625351506, 0.008697921196830773, 0.008661679858510947, 0.008632686787855086, 0.00862543852019112, 0.00862543852019112, 0.00861094198486319, 0.00861094198486319, 0.00861094198486319, 0.00859644544953526, 0.008560204111215433, 0.00855295584355147, 0.008545707575887502, 0.008545707575887502, 0.008545707575887502, 0.008516714505231641, 0.008509466237567676, 0.008509466237567676, 0.008509466237567676, 0.008502217969903712, 0.008494969702239747, 0.008487721434575782, 0.008487721434575782, 0.008487721434575782, 0.008480473166911815, 0.008480473166911815, 0.008480473166911815, 0.00847322489924785, 0.00847322489924785, 0.008458728363919919, 0.008458728363919919, 0.008458728363919919, 0.008451480096255955, 0.00844423182859199, 0.00844423182859199, 0.008436983560928025, 0.00842973529326406, 0.00842973529326406, 0.008415238757936127, 0.008407990490272162, 0.008407990490272162, 0.008407990490272162, 0.008400742222608198, 0.008393493954944233, 0.008386245687280268, 0.008378997419616303, 0.008371749151952337, 0.008371749151952337, 0.008350004348960442, 0.008342756081296476, 0.008335507813632511, 0.008335507813632511, 0.008335507813632511, 0.008328259545968546, 0.00832101127830458, 0.008313763010640615, 0.00829201820764872, 0.00829201820764872, 0.00829201820764872, 0.008277521672320789, 0.008277521672320789, 0.008277521672320789, 0.008277521672320789, 0.008270273404656824, 0.008270273404656824, 0.008263025136992858, 0.008255776869328893, 0.008255776869328893, 0.008248528601664928, 0.008248528601664928, 0.008248528601664928, 0.008241280334000962, 0.008241280334000962, 0.008234032066336997, 0.008219535531009067, 0.008212287263345101, 0.008212287263345101, 0.008212287263345101, 0.008205038995681136, 0.008205038995681136, 0.008205038995681136, 0.008205038995681136, 0.008205038995681136, 0.008205038995681136, 0.00819779072801717, 0.00819779072801717, 0.00819779072801717, 0.008190542460353207, 0.008190542460353207, 0.00818329419268924, 0.008176045925025275, 0.008176045925025275, 0.008176045925025275, 0.008176045925025275, 0.008161549389697344, 0.00815430112203338, 0.00815430112203338, 0.00815430112203338, 0.008132556319041485, 0.008132556319041485, 0.008132556319041485, 0.008132556319041485, 0.008132556319041485, 0.00812530805137752, 0.00812530805137752, 0.008118059783713553, 0.008118059783713553, 0.008118059783713553, 0.008118059783713553, 0.008110811516049587, 0.008110811516049587, 0.008110811516049587, 0.008110811516049587, 0.008110811516049587, 0.008110811516049587, 0.008110811516049587, 0.008103563248385622, 0.008103563248385622]
[(11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc80>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bc10>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ac0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.48, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b4b200>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ac0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (11.51, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15d60>), (11.49, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b172e0>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7a50>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (12.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be37b0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ca50>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8190>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12eb0>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a200>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ca50>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (11.25, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a120>), (11.75, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8ac0>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.75, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8ac0>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3890>), (11.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bcf0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b5f0>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b154a0>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b4bcf0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa040>), (12.0, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8ba0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c3c0>), (12.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a270>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (11.56, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3b30>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b4bf90>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c740>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b154a0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7200>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b153c0>), (11.63, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba85f0>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc120>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ac0>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9aa50>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa350>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c970>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a4a0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b270>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b4b6d0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b154a0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15b30>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b4a0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afce40>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15f20>), (11.58, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bc80>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ad60>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba89e0>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b900>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ad60>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17510>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.65, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bacc80>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba83c0>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa510>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c74a0>), (11.64, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15dd0>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba83c0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c430>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c740>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ccf0>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.63, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15820>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (11.18, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c740>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afce40>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa510>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a200>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ac0>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15b30>), (11.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (11.65, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a890>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c0b0>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b350>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b4bf90>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7a50>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa350>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>)]
Bin size: 100
===== for SMILES C[C@@H](C1=CC2=CC(C3=CN(C)N=C3)=CN=C2C=C1)C1=NN=C2C(F)=CC(C3=CN(N)C=N3)=CN21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C@@H1][Branch2][Ring1][O][C][=C][C][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][N][=C][Ring1][N][C][=C][Ring1][S][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][N][Branch1][C][N][C][=N][Ring1][=Branch1][=C][N][Ring1][=N][Ring1][S]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][Ring1][=C][C][=C][Ring2][Ring1][Branch2][N][C][=N][C][=C][Branch1][=Branch2][C][Branch1][C][N][=N][C][Ring1][#Branch1][C][=C][Ring1][O]
generated smiles C1C=CC(F)=C(C2=CC3=CC(=C2)C(F)(F)C4=CC(F)=CC=C43)C=C1N5C=NC=C(C(N)=NC)C=C5
added!
adding editted molecule!!!
===== for SMILES N#CC1=C(F)C=CC2=C1CN(CF)C1=NC3=C(C(=O)NC[C@H](C4=CC=CS4)O2)C(N)=NN3C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][#C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][C][N][Branch1][Ring1][C][F][C][=N][C][=C][Branch2][Ring1][Branch1][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][Ring2][Ring1][Branch1][C][Branch1][C][N][=N][N][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][N][C][=N][C][=C][C][Branch2][Ring1][S][N][C][C][=C][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][C][F][C][Branch1][=Branch1][C][=Branch1][C][=O][O][=C][Ring1][#Branch2][C][=C][Ring1][S][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][=N][C]
generated smiles CCOC(=O)N1C=NC=CC(NCC2=CC=C(C3=CC=C(F)C(C(=O)O)=C3)C=C2)=C1C=CC
added!
adding editted molecule!!!
===== for SMILES O=C1NCCCCN2C=C(C=N2)C2=CN=C3C=CC(=CC3=C2)CCN2N=C(C=CC2=O)C2=CC=C1C(C(F)(F)F)=C2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][N][=C][C][=C][C][=Branch1][Branch2][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][=C][Ring2][Ring2][C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][Ring2][Ring1][C][=C][Ring2][Ring1][=Branch1]
generated smiles O=C(O)C1=C2C=CC3=C1C=CC4=CC5=CC=C(N(C)C)C=C5N=C4C3=C2
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(O)=CC2=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][=Branch1][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][C][O][=C][C][Ring1][#Branch1][=C][Ring1][N][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [N][C][=N][C][Branch1][C][F][=C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][O][N][C][=N][C][=C][C][Branch1][P][C][=C][C][=C][Branch1][=Branch1][C][=Branch1][C][=O][O][C][=C][Ring1][=Branch2][F][=C][Ring1][S][C][=C][Ring2][Ring1][Branch2][Ring2][Ring1][N]
generated smiles NC=NC(F)=CC1=CC(F)=C(NC2=NC=CC(C3=CC=C(C(=O)O)C=C3F)=C2)C=C1
added!
adding editted molecule!!!
===== for SMILES O=C1NCCCCN2C=C(C=N2)C2=CC3=CC(=CC=C3N=C2)CCN2N=C(C=CC2=O)C2=CC(C(O)(F)F)=C1C=C2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][C][=C][C][=Branch1][#Branch2][=C][C][=C][Ring1][=Branch1][N][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][Branch1][=Branch2][C][Branch1][C][O][Branch1][C][F][F][=C][Ring2][Ring2][=Branch1][C][=C][Ring1][#Branch2]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][Ring2][Ring1][C][=N][Ring2][Ring1][=Branch1]
generated smiles O=C(O)C1=C2C=CC3=C1C=CC4=CC5=CC=C(N(C)C)C=C5N=C4C3=N2
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CN(C)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][N][=C][Ring1][N][Ring1][#C]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Ring2][S][=C][C][=C][C][Branch2][Ring1][N][N][=N][C][=C][C][=C][Branch1][P][C][=C][N][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][Ring1][=C][C][=C][Ring1][S][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring2][Ring2][=Branch1]
generated smiles CC1=CC(F)=CC(=C1)C=NC=NC(=CC=CC(N=NC2=CC=C(C3=CN=C4C=CC=CC4=C32)C=C)=CC=CC5=CC)CC=C5
added!
adding editted molecule!!!
===== for SMILES CN1C=C(C2=CN3C(=NN=C3C3=CN=C4N=NN(CC5=CC6=CC=CN=C6C=C5F)C4=N3)C(F)=C2)C=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=C][Branch2][Branch1][Branch1][C][=C][N][C][=Branch2][Ring2][=Branch1][=N][N][=C][Ring1][Branch1][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1][C][Branch1][C][F][=C][Ring2][Ring1][#C][C][=N][Ring2][Ring2][Ring2]<eom>
Output: 
output selfies [F][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][=N][C][Branch1][C][F][=C][C][=C][C][Branch1][#C][N][C][=C][N][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][=N][N][Ring2][Ring1][C][Ring1][S]
generated smiles FC1=CC=CC(F)=C1C=NC(F)=CC2=CC(NC3=CN=C4C=CC=CC4=C3)=NN2
added!
adding editted molecule!!!
===== for SMILES CN1C=C(CN2C=C(C(=O)NC3=C(F)C=C(C4=CNC5=NC=NC(N)=C45)C(F)=C3)C(=O)C(C3=CC=C(F)C=C3)=C2)C=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=C][Branch2][=Branch1][Ring2][C][N][C][=C][Branch2][Ring2][#Branch1][C][=Branch1][C][=O][N][C][=C][Branch1][C][F][C][=C][Branch1][P][C][=C][N][C][=N][C][=N][C][Branch1][C][N][=C][Ring1][#Branch2][Ring1][#Branch1][C][Branch1][C][F][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][=C][Ring2][Ring2][Ring1][C][=N][Ring2][Ring2][=Branch2]<eom>
Output: 
output selfies [N][C][=C][C][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][Ring1][=N][C][=C][Ring2][Ring1][=Branch1][F]
generated smiles NC1=CC=C(C2=CC=C3C(=C2)C(F)(F)C4=CC(F)=CC=C43)C=C1F
added!
adding editted molecule!!!
===== for SMILES CCN1CC2=C(C#N)C(F)=CC=C2O[C@@H](C2=CC=CS2)CNC(=O)C2=C3N=C1C=CN3N=C2N =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][Ring1][C][#N][C][Branch1][C][F][=C][C][=C][Ring1][=Branch2][O][C@@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][C][N][C][=Branch1][C][=O][C][=C][N][=C][Ring2][Ring1][#Branch2][C][=C][N][Ring1][=Branch1][N][=C][Ring1][=Branch2][N]<eom>
Output: 
output selfies [C][C][C][=C][Branch1][C][C][C][=C][Branch2][Ring1][O][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][C][=C][C][Branch1][C][C][=C][C][Ring1][=Branch2][=N][Ring1][=N][C][=C][Ring2][Ring1][=Branch1][N][C][C][N][Branch2][Ring1][O][C][=C][C][=C][C][Branch1][P][C][=Branch1][C][=O][N][C][C][N][Branch1][Ring1][C][C][C][C][Ring1][#Branch1][=C][Ring1][S][C][C][Ring2][Ring1][=Branch1]
generated smiles CC1C=C(C)C=C(C2=C3C=CC(=C2)C(C)=CC(C)=CC=N3)C=C1N4CCN(C5=CC=CC(C(=O)NC6CN(CC)CC6)=C5)CC4
added!
adding editted molecule!!!
===== for SMILES CCN1CC2=C(C=CC(F)=C2C#N)O[C@@H](C2=CC=CS2)CNC(=O)C2=C3N=C1C=CN3N=C2N =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][N][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][#N][O][C@@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][C][N][C][=Branch1][C][=O][C][=C][N][=C][Ring2][Ring1][#Branch2][C][=C][N][Ring1][=Branch1][N][=C][Ring1][=Branch2][N]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring2][=Branch1][N][C][=Branch1][C][=O][N][C][C][C][C@@H1][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][C][C][Ring2][Ring1][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][S][C]
generated smiles C1COC(=O)C2=CC=CC(NC(=O)NCCC[C@@H1]1NC3=CC=C(C(F)(F)F)C=C3CC)=C2C=CC
added!
adding editted molecule!!!
===== for SMILES CCN1CC2=C(C=CC(F)=C2C#N)O[C@@H](C2=CC=CS2)CNC(=O)C2=C3N=C1C=CN3N=C2N =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][N][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][#N][O][C@@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][C][N][C][=Branch1][C][=O][C][=C][N][=C][Ring2][Ring1][#Branch2][C][=C][N][Ring1][=Branch1][N][=C][Ring1][=Branch2][N]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring2][=Branch1][N][C][=Branch1][C][=O][N][C][C][C][C@@H1][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][C][C][Ring2][Ring1][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][S][C]
generated smiles C1COC(=O)C2=CC=CC(NC(=O)NCCC[C@@H1]1NC3=CC=C(C(F)(F)F)C=C3CC)=C2C=CC
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=C][N][=C][Branch1][#Branch2][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=N][=C][Ring1][P][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][F]
generated smiles C12C=CC(F)=C(C3=CC=C4C=CN=C(NC5=CC=CC=C5)C4=C3C=C1)C=C2C6=CC=CC=C6F
added!
adding editted molecule!!!
===== for SMILES CC(=NF)C1=NN2C(CC3=C(F)C=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Ring1][=N][F][C][=N][N][C][Branch2][Ring1][Ring2][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][=C][N][=C][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch1][Ring1][C][#N][C][Ring1][Branch2][=N][Ring1][P]
generated smiles CC1=CC(F)=CC(=C1)C=NC(F)=C2C=CC=C(C#N)C2=N
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=NN(CCC3=CC=C4N=CC(C5=CN(CCO)N=C5)=CC4=C3)C(=O)C=C2)C=C1C(F)(F)F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][#C][C][=N][N][Branch2][Ring1][S][C][C][C][=C][C][=C][N][=C][C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][=C][C][Ring1][=C][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][P][C][Branch1][C][F][Branch1][C][F][F]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][C][=C][Branch2][Ring1][P][N][C][=Branch1][C][=O][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2][C][=C][Ring1][S][Ring2][Ring1][#Branch1][=C][C][=C][Ring2][Ring1][=N][Ring2][Ring1][P]
generated smiles CC(C)(C)C1=CC=CC2(C=CC=CN=CC3=CNC(=O)NC=CC=C3C=CC=CC(C(F)(F)F)=C)C=C21
added!
adding editted molecule!!!
===== for SMILES N#CC1=C(F)C=CC2=C1CN(CCCO)C1=NC3=C(C(=O)NC[C@H](C4=CC=CS4)O2)C(N)=NN3C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][#C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][C][N][Branch1][Branch1][C][C][C][O][C][=N][C][=C][Branch2][Ring1][Branch1][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][Ring2][Ring1][#Branch1][C][Branch1][C][N][=N][N][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][N][C][=N][C][=C][C][Branch2][Ring1][#Branch2][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2][Cl][=C][C][=C][Ring2][Ring1][#Branch1][N][Ring2][Ring1][#Branch2][C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1]
generated smiles CCOC(=O)NC1=NC=CC(OC2=CC=CC=C2C3=CC=C(F)C(F)=C3Cl)C=C1NCC4=CC=C(F)C=C4
added!
adding editted molecule!!!
===== for SMILES CC(N=O)C1=NN2C(=NN=C2CC2=C(F)C=C3N=CC=CC3=C2F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch1][Ring1][N][=O][C][=N][N][C][=Branch2][Ring1][=Branch2][=N][N][=C][Ring1][Branch1][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch2][Ring2][C][C][=C][C][=C][C][Branch2][Ring1][=Branch1][N][C][=Branch1][C][=O][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][=C][Ring2][Ring1][Ring1][=C][C][=C][Ring2][Ring1][#Branch2][F]
generated smiles C1C(C)(C2)C=NC(C=CC=CC1(NC(=O)C3=NC4=CC=CC=C4C=C3F)C)C=C2F
added!
adding editted molecule!!!
===== for SMILES CC(=NC1=CC2=CC(C3=CN(C)N=C3)=CN=C2C=C1)C1=CSC(C2=NN3C(=NN=C3CC3=CC=C4N=CC=CC4=C3)C=C2)=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch2][Ring1][N][=N][C][=C][C][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][N][=C][Ring1][N][C][=C][Ring1][S][C][=C][S][C][Branch2][Ring1][P][C][=N][N][C][=Branch2][Ring1][Branch1][=N][N][=C][Ring1][Branch1][C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][=C][Ring2][Ring1][Ring2][=C][Ring2][Ring1][=Branch2]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][C][=C][C][=N][C][=N][C][=Branch2][=Branch1][Branch1][=C][C][=C][C][=C][Branch2][Ring2][S][N][=C][N][=C][Branch2][Ring1][Ring2][N][C][=C][C][=C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring1][N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1][Ring2][Ring1][=Branch1][C][=C][Ring2][Ring1][S][C][=C][Ring2][Ring2][=Branch1][C][Ring2][Ring2][#Branch2][=C][Ring2][Ring2][=C]
generated smiles C1C=CC(C)=CC=NC=NC=CC=CC=C1N=CN=C(NC2=CC=C(C3=CC=CC=C3)C=C2)C4=CC=C(Cl)C=C4
added!
adding editted molecule!!!
===== for SMILES C[C@@H](C1=NN=C2C=CC(C(F)=NOC(N)=O)=NN21)C1=C(F)C=C2N=CC=CC2=C1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C@@H1][Branch2][Ring1][O][C][=N][N][=C][C][=C][C][Branch1][N][C][Branch1][C][F][=N][O][C][Branch1][C][N][=O][=N][N][Ring1][=N][Ring1][S][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F]<eom>
Output: 
output selfies [C][C][Branch1][C][C][O][C][=N][C][Branch1][C][F][=C][C][Branch2][Ring1][=Branch1][N][C][=N][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][F][F][C][=C][Ring1][=Branch2][N][Ring1][N][=C][Ring2][Ring1][Ring1][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][F]
generated smiles CC(C)OC=NC(F)=CC(NC1=NC2=CC=C(C(F)F)C=C2N1)=CC3=CC=C(F)C=C3F
added!
adding editted molecule!!!
===== for SMILES COC1=CC2=CC([C@H](C)N=C(C)C3=CN=C4N=NN(CC5=CC6=CC=CN=C6C=C5F)C4=N3)=CC=C2N=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=C][C][Branch2][Ring2][#Branch2][C@H1][Branch1][C][C][N][=C][Branch1][C][C][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1][=C][C][=C][Ring2][Ring1][S][N][=C][Ring2][Ring2][Ring2]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][N][=C][Branch2][Ring1][N][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][=C][Ring1][S][C][Ring2][Ring1][#Branch1][=C][Ring2][Ring1][O][=C][Ring2][Ring1][S]
generated smiles C1OC=CC=CC1C=CC2=CN=C3N=C(NC=CC4=C(C=CC5=CC=C6N=CC=CC6=C5)C=C4)C3=C2C
added!
adding editted molecule!!!
===== for SMILES NC(=O)C1=CC=C(C2=CN=C3N=NN(C(F)C4=C(F)C5=CC(F)=CN=C5C=C4F)C3=N2)C=C1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][N][C][=C][N][=C][N][=N][N][Branch2][Ring1][#Branch2][C][Branch1][C][F][C][=C][Branch1][C][F][C][=C][C][Branch1][C][F][=C][N][=C][Ring1][#Branch1][C][=C][Ring1][N][F][C][Ring2][Ring1][Ring2][=N][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][=C][F]<eom>
Output: 
output selfies [N][C][=Branch1][C][=O][C][=C][C][Branch1][C][F][=C][C][Branch2][Ring2][=Branch1][N][C][=N][C][=C][C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][=N][C][=C][N][=C][Branch1][C][F][C][=C][Ring2][Ring1][C][Ring1][#Branch1][=C][Ring2][Ring1][O][F][=C][Ring2][Ring1][P]
generated smiles N1C(=O)C=CC(F)=CC1NC=NC=CC(C2=CC=CC=C2)=NC3=CN=C(F)C=C3
added!
adding editted molecule!!!
===== for SMILES NC(=O)C1=CC=C(C2=CN=C3N=NN(C(F)C4=C(F)C=C5N=CC(F)=CC5=C4F)C3=N2)C=C1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][N][C][=C][N][=C][N][=N][N][Branch2][Ring1][#Branch2][C][Branch1][C][F][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][C][F][=C][C][Ring1][#Branch1][=C][Ring1][N][F][C][Ring2][Ring1][Ring2][=N][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][=C][F]<eom>
Output: 
output selfies [F][C][=C][C][=C][Branch2][Ring2][C][C][=C][C][=N][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][C][=C][Ring1][#Branch2][N][=C][Ring1][=C][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][=C][Ring2][Ring1][=N]
generated smiles FC1=CC=C(C=CC2=NC3=CC(C(F)(F)F)=CC=C3N=C2C4=CC=CCF)C4C=C1
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=CC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=C][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Branch1][=Branch1][=C][C][=C][C][=C][Branch2][Ring2][=Branch1][N][C][=C][C][=C][Branch2][Ring1][Branch2][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][N][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][#C][C][=C][Ring2][Ring1][Branch1][C][=C][Ring2][Ring1][=N][C][=C][Ring2][Ring2][C][C][N][Ring2][Ring2][=Branch1]
generated smiles CC1=CC(F)=CC(=C1)C=NC=NC(=CC=CC=C2NC=CC=C(C3=CC=CC(F)=C3NC4=CC=CC=C4)C2C=C)CN
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Ring2][S][=C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][N][=C][Ring1][O][C][=C][C][=C][Branch1][S][N][C][C][N][Branch1][=Branch1][C][C][C][Ring1][Ring1][C][C][Ring1][=Branch2][C][=C][Ring1][#C][C][=C][Ring2][Ring1][P][C][=C][Ring2][Ring2][=Branch1][C]
generated smiles CC1=CC(F)=CC(=C12)C=NC=NC(=CC3=C(F)C=CC=C3N=CC4=CC=C(N5CCN(C6CC6)CC5)C=C4C=C2C)CC
added!
adding editted molecule!!!
===== for SMILES O=C(NC1=CC=C(OC2=CC=NC(NC(=O)N3CCC3)=C2)C(F)=C1)C1=CN(CC2CC2)C(=O)N(C2=CC=C(F)C=C2)C1=O =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][Branch2][Ring2][#Branch1][N][C][=C][C][=C][Branch2][Ring1][#Branch1][O][C][=C][C][=N][C][Branch1][N][N][C][=Branch1][C][=O][N][C][C][C][Ring1][Ring2][=C][Ring1][=N][C][Branch1][C][F][=C][Ring2][Ring1][Branch1][C][=C][N][Branch1][#Branch1][C][C][C][C][Ring1][Ring1][C][=Branch1][C][=O][N][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][Ring2][Ring1][C][=O]<eom>
Output: 
output selfies [C][C][C][C][=N][C][Branch2][Ring2][=Branch1][C][=C][C][=C][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][Cl][C][=C][Ring2][Ring1][C][=C][C][=C][Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][C][C][N][C][C][C][C][C][Ring1][=Branch1]
generated smiles C1CC2C=NC3(C=CC=C(NC4=CC=C(C(F)(F)F)C=C4Cl)C3=CC=C2)C(=O)N1CCCN5CCCCC5
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=CN3C(SC4=CC=C5N=CC6=C(OCC(=O)N6C)C5=C4)=NN=C3C(F)=C2)S1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][P][C][=C][N][C][Branch2][Ring1][N][S][C][=C][C][=C][N][=C][C][=C][Branch1][O][O][C][C][=Branch1][C][=O][N][Ring1][#Branch1][C][C][Ring1][N][=C][Ring1][S][=N][N][=C][Ring2][Ring1][=Branch1][C][Branch1][C][F][=C][Ring2][Ring1][O][S][Ring2][Ring1][S]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][=Branch1][C][=O][N][C][=N][C][=C][C][=C][Branch1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][C][N][=N][NH1][C][Ring1][=Branch2][=O][C][=C][Ring1][P][Ring2][Ring1][Branch1].[N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][#Branch1][=Branch1][C][=C][C][=C][C][=Branch2][=Branch1][=Branch1][=C][N][=C][Branch2][Branch1][O][C][=C][C][=C][Branch2][Ring2][P][N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring1][#C][C][=C][N][=C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][=C][C][=C][C][=C][Ring1][P][Ring1][=Branch1][C][=C][Ring2][Ring1][#Branch1][C][=C][Ring2][Ring1][S][C][=C][Ring2][Ring2][=Branch1][C][=C][Ring2][Ring2][=N][=C][Ring2][Branch1][Ring1]
generated smiles CC(C)C(=O)N1C=NC=C2C=C(C3=CC4=CC=C3CN=N[NH1]C4)OC=C21.NC(=O)C=CC=C5CC=CC=C6C(=CN=C(C=CC=C(NC(=O)C=CC=CC(C7=CN=C(C8=CC=C(F)C=C8)C9=CC=CC=C79)C=C)C)C6C)C5=C
added!
adding editted molecule!!!
===== for SMILES CC(=O)N1CCC2=CC=C(NC3=NC=C(Cl)C(NC4=CC=CC=C4C(=O)NN)=N3)C=C2C(C)C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][N][C][C][C][=C][C][=C][Branch2][Ring1][#C][N][C][=N][C][=C][Branch1][C][Cl][C][Branch1][S][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][N][N][=N][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch2][C][Branch1][C][C][C][Ring2][Ring1][#C]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][C][=C][Branch1][#C][N][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=Branch2][N][=C][N][Branch1][=N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1][Cl][C][=Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1]
generated smiles CC(C1)CC2=C(NC3=NC4=CC=CC=C4C3)N=CN(C5=CC=C(Cl)C=C5Cl)C2C(=O)N1C6=CC=C(Cl)C=C6
added!
adding editted molecule!!!
===== for SMILES CN1C=NOC(C2=CN=C3C=CC([C@H](F)C4=NN=C5C(N)=CC(N)=CN54)=CC3=C2)=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=N][O][C][Branch2][Ring2][O][C][=C][N][=C][C][=C][C][Branch2][Ring1][Branch2][C@H1][Branch1][C][F][C][=N][N][=C][C][Branch1][C][N][=C][C][Branch1][C][N][=C][N][Ring1][Branch2][Ring1][O][=C][C][Ring2][Ring1][Ring1][=C][Ring2][Ring1][#Branch1][=C][Ring2][Ring1][=N]<eom>
Output: 
output selfies [N][C][=N][C][=N][C][=C][Ring1][=Branch1][C][Branch1][=Branch1][C][=Branch1][C][=O][O][=C][C][=C][C][Branch1][C][N][=C][C][=C][Ring1][#Branch1][Ring1][S]
generated smiles NC1=NC2=NC=C1C(C(=O)O)=CC3=CC(N)=CC=C32
added!
adding editted molecule!!!
===== for SMILES C[C@@H](C1=CC2=CC(C3=CN(C)N=C3)=CN=C2C=C1)C1=NN=C2C(F)=CC(C3=CN(C)C=N3)=CN21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C@@H1][Branch2][Ring1][O][C][=C][C][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][N][=C][Ring1][N][C][=C][Ring1][S][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][N][Branch1][C][C][C][=N][Ring1][=Branch1][=C][N][Ring1][=N][Ring1][S]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][Ring1][=C][C][=C][Ring2][Ring1][Branch2][N][C][=N][C][=C][Branch1][=Branch2][C][Branch1][C][C][Branch1][C][C][C][C][=C][Ring1][#Branch2]
generated smiles C1C=CC(F)=C(C2=CC3=CC(=C2)C(F)(F)C4=CC(F)=CC=C43)C=C1NC5=NC=C(C(C)(C)C)C=C5
added!
adding editted molecule!!!
===== for SMILES NC1=NN2C=CC3=NC2=C1C(=O)NC[C@H](C1=CC=CS1)OC1=C(CN3CCCO)C(N=O)=C(F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=N][N][C][=C][C][=N][C][Ring1][=Branch1][=C][Ring1][=Branch2][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][C][=C][Branch1][#Branch2][C][N][Ring2][Ring1][Ring1][C][C][C][O][C][Branch1][Ring1][N][=O][=C][Branch1][C][F][C][=C][Ring1][#C]<eom>
Output: 
output selfies [C][C][=C][Branch1][=Branch1][C][=Branch1][C][=O][O][C][=Branch1][C][=O][C][=C][N][Ring1][#Branch2][C][=C][C][=C][Branch1][S][N][C][C][N][Branch1][=Branch1][C][Branch1][C][C][C][C][C][Ring1][=Branch2][C][=C][Ring1][#C]
generated smiles CC1=C(C(=O)O)C(=O)C=CN1C2=CC=C(N3CCN(C(C)C)CC3)C=C2
added!
adding editted molecule!!!
===== for SMILES CC(=O)C(F)(F)C1=CC2=CC=C1C(=O)NCCCCN1C=C(C=N1)C1=CN=C3C=CC(=CC3=C1)CCN1N=C2C=CC1=O =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][C][Branch1][C][F][Branch1][C][F][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][N][=C][C][=C][C][=Branch1][Branch2][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][C][N][N][=C][Ring2][Ring1][#C][C][=C][C][Ring1][=Branch1][=O]<eom>
Output: 
output selfies [C][C][=Branch1][C][=O][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][=C][Ring1][P][N].[O][=C][Branch1][C][O][C][Branch1][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2]
generated smiles CC(=O)C1=CC2=CC3=CC=C(N(C)C)C=C3N=C2C=C1N.O=C(O)C(O)C(=O)C4=CC=C5C=CC=CC5=C4
added!
adding editted molecule!!!
fp_scores_to_top [0.1956521739130435, 0.12213740458015267, 0.06086956521739131, 0.125, 0.1415929203539823, 0.12698412698412698, 0.18571428571428572, 0.125, 0.16666666666666666, 0.15037593984962405, 0.12738853503184713, 0.08196721311475409, 0.1910828025477707, 0.10743801652892562, 0.1588235294117647, 0.05, 0.18125, 0.5203252032520326, 0.11382113821138211, 0.17791411042944785, 0.1657142857142857, 0.2, 0.1484375, 0.21052631578947367, 0.2, 0.14893617021276595, 0.05172413793103448, 0.10526315789473684, 0.16, 0.18421052631578946, 0.21142857142857144, 0.19594594594594594, 0.08208955223880597, 0.20245398773006135, 0.8543689320388349, 0.05042016806722689, 0.13740458015267176, 0.16, 0.13675213675213677, 0.19736842105263158, 0.20408163265306123, 0.18421052631578946, 0.12213740458015267, 0.1565217391304348, 0.2214765100671141, 0.10948905109489052, 0.05405405405405406, 0.14666666666666667, 0.19161676646706588, 0.18354430379746836, 0.07017543859649122, 0.1092436974789916, 0.1696969696969697, 0.07407407407407407, 0.5350877192982456, 0.17721518987341772, 0.20634920634920634, 0.16666666666666666, 0.18382352941176472, 0.19205298013245034, 0.19607843137254902, 0.1386861313868613, 0.19205298013245034, 0.1111111111111111, 0.09929078014184398, 0.17123287671232876, 0.6974789915966386, 0.12598425196850394, 0.17692307692307693, 0.14583333333333334, 0.15294117647058825, 0.15853658536585366, 0.16326530612244897, 0.16774193548387098, 0.17123287671232876, 0.1306532663316583, 0.17532467532467533, 0.18840579710144928, 0.15306122448979592, 0.18181818181818182, 0.18181818181818182, 0.16568047337278108, 0.13970588235294118, 0.10497237569060773, 0.1781609195402299, 0.16666666666666666, 0.11398963730569948, 0.14814814814814814, 0.15, 0.16025641025641027, 0.16666666666666666, 0.15343915343915343, 0.1891891891891892, 0.15083798882681565, 0.11888111888111888, 0.17714285714285713, 0.16279069767441862, 0.15384615384615385, 0.14965986394557823, 0.15428571428571428]
top 70 [34 66 54 17 44 30 23 56 40 33 24 21 39 60 31  0 59 62 48 12 92 77  6 29
 41 58 49 79 80 16 84 19 55 95 68 76 74 65 52 73  8 85 90 57 20 81 72 96
 89 28 37 14 71 43 99 97 91 78 70 93  9 88 98 25 22 87 47 69  4 82]
len offspring_mol 70
187
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
N#Cc1c(F)ccc2c1CN(O)c1ccn3nc(N)c(c3n1)C(=O)NC[C@H](c1cccs1)O2

Boltz running on GPU 0
12.51
CCN1Cc2c(ccc(F)c2/C(C)=N/OCl)O[C@@H](c2cccs2)CNC(=O)c2c(N)nn3ccc1nc23

Boltz running on GPU 0
11.98
C[C@H]1CNC(=O)c2c(N)nn3ccc(nc23)N(F)Cc2c(ccc(F)c2F)O1

Boltz running on GPU 0
11.54
C[C@H]1CNC(=O)c2c(N)nn3ccc(nc23)N(CCCO)Cc2c(ccc(F)c2N=O)O1

Boltz running on GPU 0
11.23
N#C/C(=N\OC(N)=O)c1ccc2ncc(Cc3c(F)cc4ncccc4c3F)n2n1

Boltz running on GPU 0
11.29
O=C(Nc1cc(F)c(C2CNC3N=NC=C32)cc1F)c1cn(CC2CCOCC2)cc(-c2ccc(F)cc2)c1=O

Boltz running on GPU 1
10.03
Cn1cc(-c2cccc(Cn3nc(-n4ccc5ccc(F)cc54)ccc3=O)c2)cn1

Boltz running on GPU 0
9.11
Already in buffer
Cc1cc(F)c2nnc(Sc3ccc4ncc5c(c4c3)OCC(=O)N5C)n2c1

Boltz running on GPU 0
9.6
COc1ccc(C2N=C3COC(=O)C3=C2Oc2ccnc3[nH]cc(-c4cccnc4)c23)c(F)c1

Boltz running on GPU 0
10.62
Cn1cnc(C2=C(c3ccc(F)cc3F)N=C3COC(=O)C32)c1

Boltz running on GPU 0
7.12
820/1000 | avg_top1: 12.510 | avg_top10: 12.052 | avg_top100: 11.559 | avg_sa: 3.744 | div: 0.807
{'avg_top1': 12.51, 'avg_top10': 12.052000000000001, 'avg_top100': 11.5592, 'auc_top1': 9.821150000000006, 'auc_top10': 9.624089999999995, 'auc_top100': 9.118212309523805, 'avg_sa': 3.7444992469223775, 'diversity_top100': 0.8066625802934126, 'n_oracle': 820}
C[C@@H](c1ccc2ncccc2c1)N1N=NC2=NC=C[C@H](c3cccs3)C21

Boltz running on GPU 0
9.79
CC(c1c(F)cc2c(c1F)CC(C#N)=N2)n1nnc2ncc(-c3cnn(F)c3)nc21

Boltz running on GPU 0
11.27
C[C@H](c1c(F)cc2c(c1F)CC(C#N)=N2)c1nnc2ccc(C(F)=NOC(N)=O)nn12

Boltz running on GPU 0
11.26
CC(c1c(F)cc2nc3ncccc3cc2c1F)n1nnc2ncc(N)nc21

Boltz running on GPU 0
10.75
Cn1cc(OC2=C3C(=O)OCC3=NC2c2ccc(F)cc2F)cn1

Boltz running on GPU 0
7.43
CC(c1c(F)cc(F)cc1F)n1nnc2ncc(-c3ccc(C(N)=O)c(F)c3)nc21

Boltz running on GPU 0
8.8
COc1ccc2c(OCc3nnc4ccc(-c5cccs5)cn34)ccnc2c1

Boltz running on GPU 0
10.01
O=C1OCC2=NC(c3ccc(F)cc3F)C(OOC3=C4C(=O)OCC4=NC3c3ccc(F)cc3F)=C12

Boltz running on GPU 0
9.63
CN1CCN(CCOc2cnc(-c3cccc(Cn4nc(F)ccc4=O)c3)nc2)CC1

Boltz running on GPU 0
7.59
Already in buffer
Already in buffer
NC(=O)c1ccc(-c2cnc3nnn(C(F)c4nc4=O)c3n2)cc1F

Boltz running on GPU 0
8.51
830/1000 | avg_top1: 12.510 | avg_top10: 12.052 | avg_top100: 11.560 | avg_sa: 3.740 | div: 0.805
{'avg_top1': 12.51, 'avg_top10': 12.052000000000001, 'avg_top100': 11.5597, 'auc_top1': 9.946250000000008, 'auc_top10': 9.744609999999994, 'auc_top100': 9.233806809523806, 'avg_sa': 3.73977897169494, 'diversity_top100': 0.8054504920211378, 'n_oracle': 830}
C/C(=N\OCCF)c1ccc2nnc(Cc3c(F)cc4ncccc4c3F)n2n1

Boltz running on GPU 0
10.92
C[C@H](CO)Nc1n[nH]c2nccc(Oc3ccc(NC(=O)c4c(F)c4=O)cc3F)c12

Boltz running on GPU 0
8.69
Fc1cnc2nnn([C@@H](F)c3ccc4ncccc4c3)c2n1

Boltz running on GPU 0
10.04
CO/N=C(\F)c1csc(-c2ccc3nnc(Cc4ccc5c(c4)CC(OC)=N5)n3n2)c1

Boltz running on GPU 0
9.05
Already in buffer
COc1cc2c(-c3ccc(C(=O)F)c(F)c3)ccnc2cc1OCCCN1CCOCC1

Boltz running on GPU 0
9.61
Already in buffer
Cc1cc(F)c2nnc([C@@H](C)c3ccc4c(c3)cc(-c3cnn(C)c3)c3ncccc34)n2c1

Boltz running on GPU 0
9.38
COOc1cnc2ccc([C@H](F)c3nnc4c(F)cc(-c5cc(C)no5)cn34)cc2c1

Boltz running on GPU 0
11.17
Already in buffer
Cn1cnc2ncc(-c3ccc(C(N)=O)c(F)c3)nc21

Boltz running on GPU 0
8.63
Already in buffer
Already in buffer
Cc1cc(F)c2nnc([C@@H](C)c3ccc4ncc(CCO)cc4c3)n2c1

Boltz running on GPU 0
11.41
CC(=NOC(N)=O)C1C=CSC(c2ccc3nnc(Cc4ccc5ncccc5c4)n3n2)=C1

Boltz running on GPU 0
10.94
840/1000 | avg_top1: 12.510 | avg_top10: 12.052 | avg_top100: 11.561 | avg_sa: 3.734 | div: 0.806
{'avg_top1': 12.51, 'avg_top10': 12.052000000000001, 'avg_top100': 11.561300000000001, 'auc_top1': 10.071350000000008, 'auc_top10': 9.865129999999995, 'auc_top100': 9.349411809523804, 'avg_sa': 3.734189204387405, 'diversity_top100': 0.8062049449420287, 'n_oracle': 840}
NC=NC(F)=Cc1ccc(Nc2cc(-c3ccc(C(=O)O)cc3F)ccn2)c(F)c1

Boltz running on GPU 0
9.0
Cn1cc(-c2cnc3c(c2)C=C(c2cnc4nnn([C@@H](F)c5ccc6ncccc6c5)c4n2)C3)cn1

Boltz running on GPU 0
11.15
Already in buffer
Already in buffer
Cc1cc(N)c2nnc([C@@H](F)c3ccc4ncc(OO)cc4c3)n2c1

Boltz running on GPU 0
10.58
C[C@H](c1c(F)cc2ncccc2c1F)c1nnc2ccc(C(F)c3c(F)cc4ncc(F)cc4c3F)nn12

Boltz running on GPU 0
10.77
Already in buffer
Already in buffer
Already in buffer
Already in buffer
[C-]#[N+]C1=CN=C2N=NN(C(N)c3ccc(Nc4ncc(Cl)c(Nc5ccccc5C(=O)NN)n4)cc3)C12

Boltz running on GPU 0
11.09
C[C@H](c1nnc2c(F)cc(-c3cn(N)cn3)cn12)[C@H](F)n1nnc2ncc(-c3cnn(CCO)c3)nc21

Boltz running on GPU 0
10.76
FOc1ccc2c(OCc3nnc4ccc(-c5cc(Cl)c6ncccc6c5)cn34)ccnc2c1

Boltz running on GPU 0
9.35
Already in buffer
Nc1c(F)cc2ncccc2c1F

Boltz running on GPU 1
6.65
Already in buffer
Already in buffer
Already in buffer
Already in buffer
CN=C(N)C1=CN=CN(C2=CC(c3cc4cc(c3)C(F)(F)c3cc(F)ccc3-4)=C(F)C=CC2)C=C1

Boltz running on GPU 1
[Errno 2] No such file or directory: '/data/boltz/results/boltz_results_c-met_CN=C(N)C1=CN=CN(C2=CC(c3cc4cc(c3)C(F)(F)c3cc(F)ccc3-4)=C(F)C=CC2)C=C1/predictions/c-met_CN=C(N)C1=CN=CN(C2=CC(c3cc4cc(c3)C(F)(F)c3cc(F)ccc3-4)=C(F)C=CC2)C=C1/affinity_c-met_CN=C(N)C1=CN=CN(C2=CC(c3cc4cc(c3)C(F)(F)c3cc(F)ccc3-4)=C(F)C=CC2)C=C1.json'
-0.0
Already in buffer
Cn1cc(-c2cnc3cc(F)c(CO)c(F)c3c2)cn1

Boltz running on GPU 1
8.47
850/1000 | avg_top1: 12.510 | avg_top10: 12.052 | avg_top100: 11.561 | avg_sa: 3.734 | div: 0.806
{'avg_top1': 12.51, 'avg_top10': 12.052000000000001, 'avg_top100': 11.561300000000001, 'auc_top1': 10.196450000000008, 'auc_top10': 9.985649999999996, 'auc_top100': 9.465024809523804, 'avg_sa': 3.734189204387405, 'diversity_top100': 0.8062049449420287, 'n_oracle': 850}
Already in buffer
Already in buffer
FC(c1ccc2ncccc2c1)c1ccc2ncccc2c1

Boltz running on GPU 1
7.88
NOc1ccnc2[nH]cc(-c3cccnc3)c12

Boltz running on GPU 0
7.99
CC(C)OC=NC(F)=CC(=Cc1ccc(F)cc1F)Nc1nc2ccc(C(F)F)cc2[nH]1

Boltz running on GPU 0
7.96
CON=C(C)c1ccc2nnc([C@@H](C)c3ccc4ncccc4c3)n2n1

Boltz running on GPU 0
9.71
COC1=CN=C2C=CC([C@H](F)c3nnc4c(N)cc(N)cn34)=CC12

Boltz running on GPU 1
9.04
Already in buffer
Already in buffer
[(12.51, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c270>), (12.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be37b0>), (12.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a270>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (12.0, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8ba0>), (11.98, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b7b0>), (11.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c120>), (11.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b270>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15350>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afce40>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12eb0>), (11.75, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8ac0>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b350>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4db30>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c74a0>), (11.73, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa270>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c0b0>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c200>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3890>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc80>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b057b0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7200>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (11.65, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bacc80>), (11.65, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a890>), (11.64, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15dd0>), (11.63, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba85f0>), (11.63, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15820>), (11.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15040>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c970>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b4bf90>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8190>), (11.59, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8cf0>), (11.58, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bc80>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (11.56, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3b30>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ac0>), (11.54, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bb30>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.51, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15d60>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc820>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a200>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a740>), (11.49, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b172e0>), (11.48, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b4b200>), (11.47, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ab30>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c3c0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b154a0>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc7b0>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b050b0>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ccf0>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa350>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b900>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcdd0>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7a50>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b3c0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c430>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15f20>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bc10>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15890>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4df20>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc740>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9aa50>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba83c0>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b4a0>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9be40>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15ba0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17510>), (11.27, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bff200>), (11.26, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b174a0>), (11.26, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bff900>), (11.25, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc040>), (11.25, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a120>), (11.25, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7ba0>), (11.23, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bd60>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa510>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ca50>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ad60>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d65eb44a0>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba89e0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05820>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b153c0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa040>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bcf0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a4a0>)]
[0.009054129363309668, 0.008800816391516458, 0.008800816391516458, 0.008721203743238592, 0.008685016175839562, 0.00867054114887995, 0.008648828608440531, 0.008619878554521308, 0.008612641041041503, 0.008612641041041503, 0.008598166014081891, 0.008598166014081891, 0.008583690987122278, 0.008547503419723249, 0.008540265906243443, 0.008533028392763636, 0.008533028392763636, 0.008533028392763636, 0.008504078338844413, 0.008496840825364607, 0.008496840825364607, 0.008496840825364607, 0.008489603311884801, 0.008482365798404995, 0.00847512828492519, 0.00847512828492519, 0.00847512828492519, 0.008467890771445382, 0.008467890771445382, 0.008467890771445382, 0.008460653257965576, 0.008460653257965576, 0.008446178231005965, 0.008446178231005965, 0.008446178231005965, 0.008438940717526159, 0.008431703204046353, 0.008431703204046353, 0.008424465690566547, 0.008417228177086742, 0.008417228177086742, 0.008402753150127128, 0.008395515636647323, 0.008395515636647323, 0.008395515636647323, 0.008388278123167517, 0.008381040609687711, 0.008373803096207905, 0.0083665655827281, 0.008359328069248294, 0.008359328069248294, 0.008352090555768486, 0.008337615528808875, 0.008330378015329069, 0.008323140501849263, 0.008323140501849263, 0.008323140501849263, 0.008315902988369457, 0.008308665474889652, 0.008301427961409846, 0.008279715420970427, 0.008279715420970427, 0.008265240394010815, 0.008265240394010815, 0.008265240394010815, 0.008265240394010815, 0.00825800288053101, 0.00825800288053101, 0.00825800288053101, 0.008250765367051204, 0.008243527853571398, 0.008243527853571398, 0.00823629034009159, 0.00823629034009159, 0.00823629034009159, 0.008229052826611785, 0.008229052826611785, 0.008221815313131979, 0.008207340286172368, 0.008200102772692562, 0.008200102772692562, 0.008200102772692562, 0.008192865259212754, 0.008192865259212754, 0.008192865259212754, 0.008192865259212754, 0.008192865259212754, 0.008192865259212754, 0.008185627745732948, 0.008185627745732948, 0.008185627745732948, 0.008178390232253143, 0.008178390232253143, 0.008171152718773337, 0.008171152718773337, 0.008163915205293531, 0.008163915205293531, 0.008163915205293531, 0.008163915205293531, 0.008156677691813725, 0.00814944017833392, 0.00814944017833392, 0.008142202664854112, 0.008142202664854112, 0.008142202664854112, 0.0081277276378945, 0.008120490124414695, 0.008120490124414695, 0.008120490124414695, 0.008120490124414695, 0.008120490124414695, 0.008113252610934889, 0.008113252610934889, 0.008106015097455083, 0.008106015097455083, 0.008106015097455083, 0.008106015097455083, 0.008098777583975276, 0.008098777583975276, 0.008098777583975276]
[(11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.65, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bacc80>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bcf0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7200>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (11.65, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bacc80>), (11.64, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15dd0>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc7b0>), (12.0, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8ba0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b057b0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ac0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ca50>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc80>), (11.65, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bacc80>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c3c0>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b154a0>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc740>), (11.26, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b174a0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a4a0>), (11.23, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bd60>), (11.58, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bc80>), (11.27, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bff200>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b057b0>), (11.51, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15d60>), (11.25, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a120>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ad60>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c3c0>), (11.63, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba85f0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b3c0>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9be40>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.56, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3b30>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc7b0>), (11.58, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bc80>), (11.56, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3b30>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15350>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3890>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b057b0>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ac0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c430>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17510>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b057b0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.64, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15dd0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ad60>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7200>), (11.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c120>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa040>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa510>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17510>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b350>), (11.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c120>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c74a0>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3890>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.26, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b174a0>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b270>), (11.26, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b174a0>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba89e0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15f20>), (12.0, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8ba0>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7a50>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (11.25, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a120>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a200>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b057b0>), (11.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15040>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3890>), (11.47, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ab30>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4db30>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15890>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ad60>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ccf0>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba89e0>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7a50>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ac0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15890>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (12.51, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c270>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc820>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b154a0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc7b0>), (11.47, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ab30>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b050b0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.19, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bcf0>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc80>), (11.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c120>), (11.98, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b7b0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05d60>)]
Bin size: 100
===== for SMILES N#CC1=C2CN(O)C3=NC4=C(C(=O)NC[C@H](C5=CC=CS5)OC2=CC=C1F)C(N)=NN4C=C3 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][#C][C][=C][C][N][Branch1][C][O][C][=N][C][=C][Branch2][Ring1][=N][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][C][Ring2][Ring1][Ring2][=C][C][=C][Ring2][Ring1][Branch2][F][C][Branch1][C][N][=N][N][Ring2][Ring1][=Branch1][C][=C][Ring2][Ring1][#Branch2]<eom>
Output: 
output selfies [C][C][=C][C][=C][Branch2][Branch1][#C][C][=C][C][=C][C][Branch2][Ring2][P][N][C][=Branch1][C][=O][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][Ring1][O][C][=C][C][=C][Branch2][Ring1][Branch1][O][C][=N][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][Cl][C][=C][Ring2][Ring1][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][P][C][=C][Ring2][Ring2][#Branch2]
generated smiles C1C=C2C=C(C=CC=CC13NC(=O)NC(=O)C=CC=COC4=CC=C(OC5=NC=C(C(F)(F)F)C=C5Cl)C=C4C)C=C3C=C2
added!
adding editted molecule!!!
===== for SMILES C[C@@H](C1=CC2=CC(C3=CN(C)N=C3)=CN=C2C=C1)C1=NN=C2C(F)=CC(C3=CN(N)C=N3)=CN21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C@@H1][Branch2][Ring1][O][C][=C][C][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][N][=C][Ring1][N][C][=C][Ring1][S][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][N][Branch1][C][N][C][=N][Ring1][=Branch1][=C][N][Ring1][=N][Ring1][S]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][Ring1][=C][C][=C][Ring2][Ring1][Branch2][N][C][=N][C][=C][Branch1][=Branch2][C][Branch1][C][N][=N][C][Ring1][#Branch1][C][=C][Ring1][O]
generated smiles C1C=CC(F)=C(C2=CC3=CC(=C2)C(F)(F)C4=CC(F)=CC=C43)C=C1N5C=NC=C(C(N)=NC)C=C5
added!
adding editted molecule!!!
===== for SMILES N#CC1=C(F)C=CC2=C1CN(CF)C1=NC3=C(C(=O)NC[C@H](C4=CC=CS4)O2)C(N)=NN3C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][#C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][C][N][Branch1][Ring1][C][F][C][=N][C][=C][Branch2][Ring1][Branch1][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][Ring2][Ring1][Branch1][C][Branch1][C][N][=N][N][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][N][C][=N][C][=C][C][Branch2][Ring1][S][N][C][C][=C][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][C][F][C][Branch1][=Branch1][C][=Branch1][C][=O][O][=C][Ring1][#Branch2][C][=C][Ring1][S][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][=N][C]
generated smiles CCOC(=O)N1C=NC=CC(NCC2=CC=C(C3=CC=C(F)C(C(=O)O)=C3)C=C2)=C1C=CC
added!
adding editted molecule!!!
===== for SMILES O=C1NCCCCN2C=C(C=N2)C2=CN=C3C=CC(=CC3=C2)CCN2N=C(C=CC2=O)C2=CC=C1C(C(F)(F)F)=C2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][N][=C][C][=C][C][=Branch1][Branch2][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][=C][Ring2][Ring2][C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][Ring2][Ring1][C][=C][Ring2][Ring1][=Branch1]
generated smiles O=C(O)C1=C2C=CC3=C1C=CC4=CC5=CC=C(N(C)C)C=C5N=C4C3=C2
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(O)=CC2=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][=Branch1][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][C][O][=C][C][Ring1][#Branch1][=C][Ring1][N][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [N][C][=N][C][Branch1][C][F][=C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][O][N][C][=N][C][=C][C][Branch1][P][C][=C][C][=C][Branch1][=Branch1][C][=Branch1][C][=O][O][C][=C][Ring1][=Branch2][F][=C][Ring1][S][C][=C][Ring2][Ring1][Branch2][Ring2][Ring1][N]
generated smiles NC=NC(F)=CC1=CC(F)=C(NC2=NC=CC(C3=CC=C(C(=O)O)C=C3F)=C2)C=C1
added!
adding editted molecule!!!
===== for SMILES CCN1CC2=C(C=CC(F)=C2/C(C)=N/OCl)O[C@@H](C2=CC=CS2)CNC(=O)C2=C3N=C1C=CN3N=C2N =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][P][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][/C][Branch1][C][C][=N][/O][Cl][O][C@@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][C][N][C][=Branch1][C][=O][C][=C][N][=C][Ring2][Ring1][=N][C][=C][N][Ring1][=Branch1][N][=C][Ring1][=Branch2][N]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][C][=C][Branch1][C][C][N][C][=C][C][=C][Branch2][Ring1][O][C][=Branch1][C][=O][N][C][C][C][Branch1][P][C][=Branch1][C][=O][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][C][Ring1][S][C][=C][Ring2][Ring1][=Branch1][Ring2][Ring1][N].[C][C][=C][C][=C][Branch2][Ring1][=Branch1][C][=Branch1][C][=O][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][C][=C][Ring2][Ring1][C]
generated smiles CCOC(=O)C1=C(C)NC=CC2=C(C(=O)N3CCCC(=O)NC4=CC=C(F)C=C45)CC3C=C21.CC=CC=C5C(=O)NC=CC=C(C(F)(F)F)C=C
added!
adding editted molecule!!!
===== for SMILES O=C1NCCCCN2C=C(C=N2)C2=CC3=CC(=CC=C3N=C2)CCN2N=C(C=CC2=O)C2=CC(C(O)(F)F)=C1C=C2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][C][=C][C][=Branch1][#Branch2][=C][C][=C][Ring1][=Branch1][N][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][Branch1][=Branch2][C][Branch1][C][O][Branch1][C][F][F][=C][Ring2][Ring2][=Branch1][C][=C][Ring1][#Branch2]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][Ring2][Ring1][C][=N][Ring2][Ring1][=Branch1]
generated smiles O=C(O)C1=C2C=CC3=C1C=CC4=CC5=CC=C(N(C)C)C=C5N=C4C3=N2
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CN(C)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][N][=C][Ring1][N][Ring1][#C]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Ring2][S][=C][C][=C][C][Branch2][Ring1][N][N][=N][C][=C][C][=C][Branch1][P][C][=C][N][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][Ring1][=C][C][=C][Ring1][S][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring2][Ring2][=Branch1]
generated smiles CC1=CC(F)=CC(=C1)C=NC=NC(=CC=CC(N=NC2=CC=C(C3=CN=C4C=CC=CC4=C32)C=C)=CC=CC5=CC)CC=C5
added!
adding editted molecule!!!
===== for SMILES CN1C=C(CN2C=C(C(=O)NC3=C(F)C=C(C4=CNC5=NC=NC(N)=C45)C(F)=C3)C(=O)C(C3=CC=C(F)C=C3)=C2)C=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=C][Branch2][=Branch1][Ring2][C][N][C][=C][Branch2][Ring2][#Branch1][C][=Branch1][C][=O][N][C][=C][Branch1][C][F][C][=C][Branch1][P][C][=C][N][C][=N][C][=N][C][Branch1][C][N][=C][Ring1][#Branch2][Ring1][#Branch1][C][Branch1][C][F][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][=C][Ring2][Ring2][Ring1][C][=N][Ring2][Ring2][=Branch2]<eom>
Output: 
output selfies [N][C][=C][C][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][Ring1][=N][C][=C][Ring2][Ring1][=Branch1][F]
generated smiles NC1=CC=C(C2=CC=C3C(=C2)C(F)(F)C4=CC(F)=CC=C43)C=C1F
added!
adding editted molecule!!!
===== for SMILES CN1C=C(C2=CN3C(=NN=C3C3=CN=C4N=NN(CC5=CC6=CC=CN=C6C=C5F)C4=N3)C(F)=C2)C=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=C][Branch2][Branch1][Branch1][C][=C][N][C][=Branch2][Ring2][=Branch1][=N][N][=C][Ring1][Branch1][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1][C][Branch1][C][F][=C][Ring2][Ring1][#C][C][=N][Ring2][Ring2][Ring2]<eom>
Output: 
output selfies [F][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][=N][C][Branch1][C][F][=C][C][=C][C][Branch1][#C][N][C][=C][N][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][=N][N][Ring2][Ring1][C][Ring1][S]
generated smiles FC1=CC=CC(F)=C1C=NC(F)=CC2=CC(NC3=CN=C4C=CC=CC4=C3)=NN2
added!
adding editted molecule!!!
===== for SMILES CCN1CC2=C(C#N)C(F)=CC=C2O[C@@H](C2=CC=CS2)CNC(=O)C2=C3N=C1C=CN3N=C2N =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][Ring1][C][#N][C][Branch1][C][F][=C][C][=C][Ring1][=Branch2][O][C@@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][C][N][C][=Branch1][C][=O][C][=C][N][=C][Ring2][Ring1][#Branch2][C][=C][N][Ring1][=Branch1][N][=C][Ring1][=Branch2][N]<eom>
Output: 
output selfies [C][C][C][=C][Branch1][C][C][C][=C][Branch2][Ring1][O][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][C][=C][C][Branch1][C][C][=C][C][Ring1][=Branch2][=N][Ring1][=N][C][=C][Ring2][Ring1][=Branch1][N][C][C][N][Branch2][Ring1][O][C][=C][C][=C][C][Branch1][P][C][=Branch1][C][=O][N][C][C][N][Branch1][Ring1][C][C][C][C][Ring1][#Branch1][=C][Ring1][S][C][C][Ring2][Ring1][=Branch1]
generated smiles CC1C=C(C)C=C(C2=C3C=CC(=C2)C(C)=CC(C)=CC=N3)C=C1N4CCN(C5=CC=CC(C(=O)NC6CN(CC)CC6)=C5)CC4
added!
adding editted molecule!!!
===== for SMILES CCN1CC2=C(C=CC(F)=C2C#N)O[C@@H](C2=CC=CS2)CNC(=O)C2=C3N=C1C=CN3N=C2N =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][N][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][#N][O][C@@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][C][N][C][=Branch1][C][=O][C][=C][N][=C][Ring2][Ring1][#Branch2][C][=C][N][Ring1][=Branch1][N][=C][Ring1][=Branch2][N]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring2][=Branch1][N][C][=Branch1][C][=O][N][C][C][C][C@@H1][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][C][C][Ring2][Ring1][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][S][C]
generated smiles C1COC(=O)C2=CC=CC(NC(=O)NCCC[C@@H1]1NC3=CC=C(C(F)(F)F)C=C3CC)=C2C=CC
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=C][N][=C][Branch1][#Branch2][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=N][=C][Ring1][P][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][F]
generated smiles C12C=CC(F)=C(C3=CC=C4C=CN=C(NC5=CC=CC=C5)C4=C3C=C1)C=C2C6=CC=CC=C6F
added!
adding editted molecule!!!
===== for SMILES CC(=NF)C1=NN2C(CC3=C(F)C=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Ring1][=N][F][C][=N][N][C][Branch2][Ring1][Ring2][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][=C][N][=C][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch1][Ring1][C][#N][C][Ring1][Branch2][=N][Ring1][P]
generated smiles CC1=CC(F)=CC(=C1)C=NC(F)=C2C=CC=C(C#N)C2=N
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=NN(CCC3=CC=C4N=CC(C5=CN(CCO)N=C5)=CC4=C3)C(=O)C=C2)C=C1C(F)(F)F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][#C][C][=N][N][Branch2][Ring1][S][C][C][C][=C][C][=C][N][=C][C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][=C][C][Ring1][=C][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][P][C][Branch1][C][F][Branch1][C][F][F]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][C][=C][Branch2][Ring1][P][N][C][=Branch1][C][=O][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2][C][=C][Ring1][S][Ring2][Ring1][#Branch1][=C][C][=C][Ring2][Ring1][=N][Ring2][Ring1][P]
generated smiles CC(C)(C)C1=CC=CC2(C=CC=CN=CC3=CNC(=O)NC=CC=C3C=CC=CC(C(F)(F)F)=C)C=C21
added!
adding editted molecule!!!
===== for SMILES CC(N=O)C1=NN2C(=NN=C2CC2=C(F)C=C3N=CC=CC3=C2F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch1][Ring1][N][=O][C][=N][N][C][=Branch2][Ring1][=Branch2][=N][N][=C][Ring1][Branch1][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch2][Ring2][C][C][=C][C][=C][C][Branch2][Ring1][=Branch1][N][C][=Branch1][C][=O][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][=C][Ring2][Ring1][Ring1][=C][C][=C][Ring2][Ring1][#Branch2][F]
generated smiles C1C(C)(C2)C=NC(C=CC=CC1(NC(=O)C3=NC4=CC=CC=C4C=C3F)C)C=C2F
added!
adding editted molecule!!!
===== for SMILES N#CC1=C(F)C=CC2=C1CN(CCCO)C1=NC3=C(C(=O)NC[C@H](C4=CC=CS4)O2)C(N)=NN3C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][#C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][C][N][Branch1][Branch1][C][C][C][O][C][=N][C][=C][Branch2][Ring1][Branch1][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][Ring2][Ring1][#Branch1][C][Branch1][C][N][=N][N][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][N][C][=N][C][=C][C][Branch2][Ring1][#Branch2][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2][Cl][=C][C][=C][Ring2][Ring1][#Branch1][N][Ring2][Ring1][#Branch2][C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1]
generated smiles CCOC(=O)NC1=NC=CC(OC2=CC=CC=C2C3=CC=C(F)C(F)=C3Cl)C=C1NCC4=CC=C(F)C=C4
added!
adding editted molecule!!!
===== for SMILES CC(=NC1=CC2=CC(C3=CN(C)N=C3)=CN=C2C=C1)C1=CSC(C2=NN3C(=NN=C3CC3=CC=C4N=CC=CC4=C3)C=C2)=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch2][Ring1][N][=N][C][=C][C][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][N][=C][Ring1][N][C][=C][Ring1][S][C][=C][S][C][Branch2][Ring1][P][C][=N][N][C][=Branch2][Ring1][Branch1][=N][N][=C][Ring1][Branch1][C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][=C][Ring2][Ring1][Ring2][=C][Ring2][Ring1][=Branch2]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][C][=C][C][=N][C][=N][C][=Branch2][=Branch1][Branch1][=C][C][=C][C][=C][Branch2][Ring2][S][N][=C][N][=C][Branch2][Ring1][Ring2][N][C][=C][C][=C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring1][N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1][Ring2][Ring1][=Branch1][C][=C][Ring2][Ring1][S][C][=C][Ring2][Ring2][=Branch1][C][Ring2][Ring2][#Branch2][=C][Ring2][Ring2][=C]
generated smiles C1C=CC(C)=CC=NC=NC=CC=CC=C1N=CN=C(NC2=CC=C(C3=CC=CC=C3)C=C2)C4=CC=C(Cl)C=C4
added!
adding editted molecule!!!
===== for SMILES C[C@@H](C1=NN=C2C=CC(C(F)=NOC(N)=O)=NN21)C1=C(F)C=C2N=CC=CC2=C1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C@@H1][Branch2][Ring1][O][C][=N][N][=C][C][=C][C][Branch1][N][C][Branch1][C][F][=N][O][C][Branch1][C][N][=O][=N][N][Ring1][=N][Ring1][S][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F]<eom>
Output: 
output selfies [C][C][Branch1][C][C][O][C][=N][C][Branch1][C][F][=C][C][Branch2][Ring1][=Branch1][N][C][=N][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][F][F][C][=C][Ring1][=Branch2][N][Ring1][N][=C][Ring2][Ring1][Ring1][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][F]
generated smiles CC(C)OC=NC(F)=CC(NC1=NC2=CC=C(C(F)F)C=C2N1)=CC3=CC=C(F)C=C3F
added!
adding editted molecule!!!
===== for SMILES NC(=O)C1=CC=C(C2=CN=C3N=NN(C(F)C4=C(F)C5=CC(F)=CN=C5C=C4F)C3=N2)C=C1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][N][C][=C][N][=C][N][=N][N][Branch2][Ring1][#Branch2][C][Branch1][C][F][C][=C][Branch1][C][F][C][=C][C][Branch1][C][F][=C][N][=C][Ring1][#Branch1][C][=C][Ring1][N][F][C][Ring2][Ring1][Ring2][=N][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][=C][F]<eom>
Output: 
output selfies [N][C][=Branch1][C][=O][C][=C][C][Branch1][C][F][=C][C][Branch2][Ring2][=Branch1][N][C][=N][C][=C][C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][=N][C][=C][N][=C][Branch1][C][F][C][=C][Ring2][Ring1][C][Ring1][#Branch1][=C][Ring2][Ring1][O][F][=C][Ring2][Ring1][P]
generated smiles N1C(=O)C=CC(F)=CC1NC=NC=CC(C2=CC=CC=C2)=NC3=CN=C(F)C=C3
added!
adding editted molecule!!!
===== for SMILES NC(=O)C1=CC=C(C2=CN=C3N=NN(C(F)C4=C(F)C=C5N=CC(F)=CC5=C4F)C3=N2)C=C1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][N][C][=C][N][=C][N][=N][N][Branch2][Ring1][#Branch2][C][Branch1][C][F][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][C][F][=C][C][Ring1][#Branch1][=C][Ring1][N][F][C][Ring2][Ring1][Ring2][=N][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][=C][F]<eom>
Output: 
output selfies [F][C][=C][C][=C][Branch2][Ring2][C][C][=C][C][=N][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][C][=C][Ring1][#Branch2][N][=C][Ring1][=C][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][=C][Ring2][Ring1][=N]
generated smiles FC1=CC=C(C=CC2=NC3=CC(C(F)(F)F)=CC=C3N=C2C4=CC=CCF)C4C=C1
added!
adding editted molecule!!!
===== for SMILES COC1=CC2=CC([C@H](C)N=C(C)C3=CN=C4N=NN(CC5=CC6=CC=CN=C6C=C5F)C4=N3)=CC=C2N=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=C][C][Branch2][Ring2][#Branch2][C@H1][Branch1][C][C][N][=C][Branch1][C][C][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1][=C][C][=C][Ring2][Ring1][S][N][=C][Ring2][Ring2][Ring2]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][N][=C][Branch2][Ring1][N][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][=C][Ring1][S][C][Ring2][Ring1][#Branch1][=C][Ring2][Ring1][O][=C][Ring2][Ring1][S]
generated smiles C1OC=CC=CC1C=CC2=CN=C3N=C(NC=CC4=C(C=CC5=CC=C6N=CC=CC6=C5)C=C4)C3=C2C
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=CC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=C][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Branch1][=Branch1][=C][C][=C][C][=C][Branch2][Ring2][=Branch1][N][C][=C][C][=C][Branch2][Ring1][Branch2][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][N][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][#C][C][=C][Ring2][Ring1][Branch1][C][=C][Ring2][Ring1][=N][C][=C][Ring2][Ring2][C][C][N][Ring2][Ring2][=Branch1]
generated smiles CC1=CC(F)=CC(=C1)C=NC=NC(=CC=CC=C2NC=CC=C(C3=CC=CC(F)=C3NC4=CC=CC=C4)C2C=C)CN
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Ring2][S][=C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][N][=C][Ring1][O][C][=C][C][=C][Branch1][S][N][C][C][N][Branch1][=Branch1][C][C][C][Ring1][Ring1][C][C][Ring1][=Branch2][C][=C][Ring1][#C][C][=C][Ring2][Ring1][P][C][=C][Ring2][Ring2][=Branch1][C]
generated smiles CC1=CC(F)=CC(=C12)C=NC=NC(=CC3=C(F)C=CC=C3N=CC4=CC=C(N5CCN(C6CC6)CC5)C=C4C=C2C)CC
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=CN3C(SC4=CC=C5N=CC6=C(OCC(=O)N6C)C5=C4)=NN=C3C(F)=C2)S1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][P][C][=C][N][C][Branch2][Ring1][N][S][C][=C][C][=C][N][=C][C][=C][Branch1][O][O][C][C][=Branch1][C][=O][N][Ring1][#Branch1][C][C][Ring1][N][=C][Ring1][S][=N][N][=C][Ring2][Ring1][=Branch1][C][Branch1][C][F][=C][Ring2][Ring1][O][S][Ring2][Ring1][S]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][=Branch1][C][=O][N][C][=N][C][=C][C][=C][Branch1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][C][N][=N][NH1][C][Ring1][=Branch2][=O][C][=C][Ring1][P][Ring2][Ring1][Branch1].[N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][#Branch1][=Branch1][C][=C][C][=C][C][=Branch2][=Branch1][=Branch1][=C][N][=C][Branch2][Branch1][O][C][=C][C][=C][Branch2][Ring2][P][N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring1][#C][C][=C][N][=C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][=C][C][=C][C][=C][Ring1][P][Ring1][=Branch1][C][=C][Ring2][Ring1][#Branch1][C][=C][Ring2][Ring1][S][C][=C][Ring2][Ring2][=Branch1][C][=C][Ring2][Ring2][=N][=C][Ring2][Branch1][Ring1]
generated smiles CC(C)C(=O)N1C=NC=C2C=C(C3=CC4=CC=C3CN=N[NH1]C4)OC=C21.NC(=O)C=CC=C5CC=CC=C6C(=CN=C(C=CC=C(NC(=O)C=CC=CC(C7=CN=C(C8=CC=C(F)C=C8)C9=CC=CC=C79)C=C)C)C6C)C5=C
added!
adding editted molecule!!!
===== for SMILES O=C(NC1=CC=C(OC2=CC=NC(NC(=O)N3CCC3)=C2)C(F)=C1)C1=CN(CC2CC2)C(=O)N(C2=CC=C(F)C=C2)C1=O =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][Branch2][Ring2][#Branch1][N][C][=C][C][=C][Branch2][Ring1][#Branch1][O][C][=C][C][=N][C][Branch1][N][N][C][=Branch1][C][=O][N][C][C][C][Ring1][Ring2][=C][Ring1][=N][C][Branch1][C][F][=C][Ring2][Ring1][Branch1][C][=C][N][Branch1][#Branch1][C][C][C][C][Ring1][Ring1][C][=Branch1][C][=O][N][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][Ring2][Ring1][C][=O]<eom>
Output: 
output selfies [C][C][C][C][=N][C][Branch2][Ring2][=Branch1][C][=C][C][=C][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][Cl][C][=C][Ring2][Ring1][C][=C][C][=C][Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][C][C][N][C][C][C][C][C][Ring1][=Branch1]
generated smiles C1CC2C=NC3(C=CC=C(NC4=CC=C(C(F)(F)F)C=C4Cl)C3=CC=C2)C(=O)N1CCCN5CCCCC5
added!
adding editted molecule!!!
===== for SMILES CC(=O)N1CCC2=CC=C(NC3=NC=C(Cl)C(NC4=CC=CC=C4C(=O)NN)=N3)C=C2C(C)C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][N][C][C][C][=C][C][=C][Branch2][Ring1][#C][N][C][=N][C][=C][Branch1][C][Cl][C][Branch1][S][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][N][N][=N][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch2][C][Branch1][C][C][C][Ring2][Ring1][#C]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][C][=C][Branch1][#C][N][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=Branch2][N][=C][N][Branch1][=N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1][Cl][C][=Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1]
generated smiles CC(C1)CC2=C(NC3=NC4=CC=CC=C4C3)N=CN(C5=CC=C(Cl)C=C5Cl)C2C(=O)N1C6=CC=C(Cl)C=C6
added!
adding editted molecule!!!
===== for SMILES CN1C=NOC(C2=CN=C3C=CC([C@H](F)C4=NN=C5C(N)=CC(N)=CN54)=CC3=C2)=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=N][O][C][Branch2][Ring2][O][C][=C][N][=C][C][=C][C][Branch2][Ring1][Branch2][C@H1][Branch1][C][F][C][=N][N][=C][C][Branch1][C][N][=C][C][Branch1][C][N][=C][N][Ring1][Branch2][Ring1][O][=C][C][Ring2][Ring1][Ring1][=C][Ring2][Ring1][#Branch1][=C][Ring2][Ring1][=N]<eom>
Output: 
output selfies [N][C][=N][C][=N][C][=C][Ring1][=Branch1][C][Branch1][=Branch1][C][=Branch1][C][=O][O][=C][C][=C][C][Branch1][C][N][=C][C][=C][Ring1][#Branch1][Ring1][S]
generated smiles NC1=NC2=NC=C1C(C(=O)O)=CC3=CC(N)=CC=C32
added!
adding editted molecule!!!
===== for SMILES NC1=NN2C=CC3=NC2=C1C(=O)NC[C@H](C1=CC=CS1)OC1=C(CN3CCCO)C(N=O)=C(F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=N][N][C][=C][C][=N][C][Ring1][=Branch1][=C][Ring1][=Branch2][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][C][=C][Branch1][#Branch2][C][N][Ring2][Ring1][Ring1][C][C][C][O][C][Branch1][Ring1][N][=O][=C][Branch1][C][F][C][=C][Ring1][#C]<eom>
Output: 
output selfies [C][C][=C][Branch1][=Branch1][C][=Branch1][C][=O][O][C][=Branch1][C][=O][C][=C][N][Ring1][#Branch2][C][=C][C][=C][Branch1][S][N][C][C][N][Branch1][=Branch1][C][Branch1][C][C][C][C][C][Ring1][=Branch2][C][=C][Ring1][#C]
generated smiles CC1=C(C(=O)O)C(=O)C=CN1C2=CC=C(N3CCN(C(C)C)CC3)C=C2
added!
adding editted molecule!!!
===== for SMILES C[C@@H](C1=CC2=CC(C3=CN(C)N=C3)=CN=C2C=C1)C1=NN=C2C(F)=CC(C3=CN(C)C=N3)=CN21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C@@H1][Branch2][Ring1][O][C][=C][C][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][N][=C][Ring1][N][C][=C][Ring1][S][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][N][Branch1][C][C][C][=N][Ring1][=Branch1][=C][N][Ring1][=N][Ring1][S]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][Ring1][=C][C][=C][Ring2][Ring1][Branch2][N][C][=N][C][=C][Branch1][=Branch2][C][Branch1][C][C][Branch1][C][C][C][C][=C][Ring1][#Branch2]
generated smiles C1C=CC(F)=C(C2=CC3=CC(=C2)C(F)(F)C4=CC(F)=CC=C43)C=C1NC5=NC=C(C(C)(C)C)C=C5
added!
adding editted molecule!!!
fp_scores_to_top [0.13636363636363635, 0.11904761904761904, 0.19696969696969696, 0.18796992481203006, 0.12931034482758622, 0.14728682170542637, 0.036036036036036036, 0.14655172413793102, 0.1476510067114094, 0.04201680672268908, 0.09302325581395349, 0.14393939393939395, 0.18243243243243243, 0.017094017094017096, 0.0673076923076923, 0.18, 0.20945945945945946, 0.17045454545454544, 0.1092436974789916, 0.20987654320987653, 0.17482517482517482, 0.11403508771929824, 0.1895424836601307, 0.144, 0.17647058823529413, 0.1834319526627219, 0.12949640287769784, 0.10077519379844961, 0.14516129032258066, 0.16279069767441862, 0.0660377358490566, 0.16279069767441862, 0.1888111888111888, 0.045871559633027525, 0.1504424778761062, 0.15625, 0.1111111111111111, 0.125, 0.009009009009009009, 0.15, 0.14634146341463414, 0.1326530612244898, 0.21787709497206703, 0.1858974358974359, 0.15714285714285714, 0.17159763313609466, 0.10144927536231885, 0.17391304347826086, 0.19607843137254902, 0.15753424657534246, 0.12844036697247707, 0.16417910447761194, 0.11926605504587157, 0.6722689075630253, 0.16666666666666666, 0.17647058823529413, 0.13740458015267176, 0.11403508771929824, 0.21568627450980393, 0.1780821917808219, 0.05555555555555555, 0.11904761904761904, 0.1513157894736842, 0.10084033613445378, 0.09917355371900827, 0.0967741935483871, 0.09923664122137404, 0.09395973154362416, 0.1787709497206704, 0.04201680672268908, 0.1116751269035533, 0.1488095238095238, 0.16149068322981366, 0.17482517482517482, 0.17105263157894737, 0.11904761904761904, 0.18309859154929578, 0.1326530612244898, 0.18382352941176472, 0.17105263157894737, 0.14948453608247422, 0.17073170731707318, 0.16167664670658682, 0.13432835820895522, 0.1005586592178771, 0.16233766233766234, 0.1676300578034682, 0.11578947368421053, 0.14375, 0.15584415584415584, 0.14743589743589744, 0.15254237288135594, 0.14361702127659576, 0.1793478260869565, 0.12014134275618374, 0.1340782122905028, 0.18023255813953487, 0.176, 0.16083916083916083, 0.1497005988023952]
top 70 [53 42 58 19 16  2 48 22 32  3 43 78 25 76 12 96 15 93 68 59 24 55 97 73
 20 47 45 79 74 81 17 86 54 51 29 31 85 82 72 98 49 44 35 89 91 62 34 39
 99 80 71  8 90  5  7 40 28 23 11 88 92 56  0 83 95 77 41 26  4 50]
len offspring_mol 70
190
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Nc1nn2ccc3nc2c1C(=O)NC[C@H](c1cccs1)Oc1ccc(F)c(C(=O)F)c1CN3CCCO

Boltz running on GPU 1
11.62
O=C1NCCCCn2cc(cn2)-c2cnc3ccc(cc3c2)CCn2nc(ccc2=O)-c2ccc1c(-c1cccs1)c2

Boltz running on GPU 0
12.48
COC1CCc2nc3ccc(Cn4nnc5ncc(-c6cccs6)nc54)cc3cc2C1

Boltz running on GPU 1
10.03
NNC(=O)c1ccccc1Nc1nc(NC2=C3C(=O)OCC3=NC2c2ccc(F)cc2F)ncc1Cl

Boltz running on GPU 1
10.79
CC(c1c(F)cc2c(c1F)CC(C#N)=N2)n1nnc2ncc(-c3cnn(O)c3)nc21

Boltz running on GPU 0
11.7
860/1000 | avg_top1: 12.510 | avg_top10: 12.110 | avg_top100: 11.582 | avg_sa: 3.755 | div: 0.807
{'avg_top1': 12.51, 'avg_top10': 12.110000000000001, 'avg_top100': 11.581600000000002, 'auc_top1': 10.321550000000009, 'auc_top10': 10.106459999999995, 'auc_top100': 9.580739309523803, 'avg_sa': 3.755259337994116, 'diversity_top100': 0.8066833947370549, 'n_oracle': 860}
Oc1ccc2ncc(Cc3ccc4ncccc4c3F)n2n1

Boltz running on GPU 0
8.14
O=C(NF)c1ccc(-c2cc(F)c3nnc(Sc4cc5cccnc5cc4F)n3c2)s1

Boltz running on GPU 0
11.52
Cc1csc(-c2ccc3nnc(CC(C)c4c(F)cc5ncc(O)cc5c4F)n3n2)c1

Boltz running on GPU 0
11.14
NS(=O)(=O)Nc1ccc2ccc3ncc(-c4cnn(O)c4)cc3c(=O)c2c1

Boltz running on GPU 0
9.06
Nc1cnc2nnn(Cc3cc4cccnc4cc3F)c2n1

Boltz running on GPU 1
9.49
O=C(Nc1ccc(Oc2ccncn2)c(F)c1)c1c(I)ccn(-c2ccc(F)cc2)c1=O

Boltz running on GPU 0
9.25
Already in buffer
NC(=O)c1ccc(CCSc2nnc3c(F)cc(-c4ccc(C(=O)NF)s4)cn23)cc1-c1ccncc1

Boltz running on GPU 0
9.9
Already in buffer
Cn1cnc(-c2cc(F)c3nnc([C@@H](F)c4ccc5c(c4)=COCN=5)n3c2)c1

Boltz running on GPU 0
10.55
Already in buffer
O=C1OCC2=NC(c3ccc(F)cc3F)C(OC3CCNC4NC=C(F)C=C43)=C12

Boltz running on GPU 0
9.28
Already in buffer
NC(=O)c1ccc(-c2cnc3nnn(C(F)c4c(F)cc5ncc(F)cc5c4CCO)c3n2)cc1-c1ccncc1

Boltz running on GPU 0
10.99
870/1000 | avg_top1: 12.510 | avg_top10: 12.110 | avg_top100: 11.584 | avg_sa: 3.742 | div: 0.807
{'avg_top1': 12.51, 'avg_top10': 12.110000000000001, 'avg_top100': 11.5841, 'auc_top1': 10.446650000000009, 'auc_top10': 10.227559999999995, 'auc_top100': 9.696567809523804, 'avg_sa': 3.741711018656232, 'diversity_top100': 0.8067656166993266, 'n_oracle': 870}
Cn1cc(C2=Nn3c(Cc4c(F)cc5ncccc5c4F)cnc3C2)cn1

Boltz running on GPU 0
10.65
Already in buffer
Cc1cc(-c2cc(F)c3nnc([C@@H](C)c4ccc5ncc(OF)cc5c4)n3c2)on1

Boltz running on GPU 0
11.07
Already in buffer
Already in buffer
COOc1cnc2ccc([C@H](C)c3nnc4c(F)c(C)ccn34)cc2c1

Boltz running on GPU 0
8.92
Cc1cnc2ccc([C@H](C)c3nnc4c(F)cc(C)cn34)cc2c1

Boltz running on GPU 1
9.63
CC(=O)N1CCc2ccc(Nc3ncc(C(C)=NN)c(Nc4ccccc4C(=O)NN)n3)cc2C(C)C1

Boltz running on GPU 1
11.08
Already in buffer
Already in buffer
Already in buffer
Cc1cc(F)c2nnc(-c3cnc4ccc([C@H](C)c5nnc6c(F)cc(-c7cc(N)no7)cn56)cc4c3)n2c1

Boltz running on GPU 1
10.9
Already in buffer
Cn1cc(-c2cnc3nnc(C(O)(F)c4ccc5ncccc5c4)n3n2)cn1

Boltz running on GPU 0
10.42
Clc1ccc2nnc(Cc3ccc4ncccc4c3)n2n1

Boltz running on GPU 1
9.36
C[C@@H](c1ccc2ncccc2c1)n1nnc2ncc(-c3cnn(CCNC4=CCC(F)C=C4)c3)nc21

Boltz running on GPU 1
10.55
O=C(NF)c1ccc(-c2cc(F)c3nnc(Cl)n3c2)s1

Boltz running on GPU 1
8.53
880/1000 | avg_top1: 12.510 | avg_top10: 12.110 | avg_top100: 11.584 | avg_sa: 3.742 | div: 0.807
{'avg_top1': 12.51, 'avg_top10': 12.110000000000001, 'avg_top100': 11.5841, 'auc_top1': 10.571750000000009, 'auc_top10': 10.348659999999997, 'auc_top100': 9.812408809523804, 'avg_sa': 3.741711018656232, 'diversity_top100': 0.8067656166993266, 'n_oracle': 880}
Already in buffer
Already in buffer
Already in buffer
Already in buffer
CC(=NNF)c1cnc2nnn(Cc3cc4cccnc4cc3F)c2n1

Boltz running on GPU 1
11.36
Cc1cnn2c([C@H](C)c3c(F)cc4ncccc4c3F)nnc2c1

Boltz running on GPU 1
9.91
Cn1cc(-c2cnc3nnc(C(F)(F)C4=CC=C(C(N)=O)C4c4ccncc4)n3n2)cn1

Boltz running on GPU 0
9.14
Already in buffer
Already in buffer
Cn1cc(-c2cnc3ccc([C@H](F)c4nnc5n4C=CCC5F)cc3c2)cn1

Boltz running on GPU 0
10.48
Already in buffer
CO/N=C(\F)c1nnc2c(F)cc(-c3ccc(C(=O)NF)s3)cn12

Boltz running on GPU 0
9.03
Already in buffer
Already in buffer
Already in buffer
Clc1cc(Cc2cnc3ncc(C4=NC=CC4)nn23)cc2cccnc12

Boltz running on GPU 0
9.09
Already in buffer
Nc1cc(N)c2nnc([C@@H](F)C3C=CC=CS3)n2c1

Boltz running on GPU 1
6.86
CC(=O)c1ccc2ncccc2c1F

Boltz running on GPU 1
6.16
COc1ncc(-c2ccc(C(N)=O)c(F)c2)[nH]1

Boltz running on GPU 0
7.13
CC1=CN2C(=Cc3cccnc3C2Cl)C(F)=C1

Boltz running on GPU 0
7.02
890/1000 | avg_top1: 12.510 | avg_top10: 12.110 | avg_top100: 11.585 | avg_sa: 3.732 | div: 0.805
{'avg_top1': 12.51, 'avg_top10': 12.110000000000001, 'avg_top100': 11.5849, 'auc_top1': 10.69685000000001, 'auc_top10': 10.469759999999997, 'auc_top100': 9.928253809523802, 'avg_sa': 3.732146640882677, 'diversity_top100': 0.8049348841484822, 'n_oracle': 890}
Cc1csc(-c2ccc3nnc(CF)n3n2)c1

Boltz running on GPU 0
7.78
CN1C=NOC(c2cnc3ccc(C(F)F)cc3c2)=C1

Boltz running on GPU 0
9.21
Already in buffer
Already in buffer
COc1ccc2ncc(C3=CN(C)C=NO3)cc2c1

Boltz running on GPU 0
7.51
Cc1cc(-c2cc(N)c3nnc([C@@H](F)CO)n3c2)on1

Boltz running on GPU 0
9.01
Already in buffer
Already in buffer
Already in buffer
Nc1cccs1

Boltz running on GPU 0
6.63
COc1cc2nccc(OC3=CC=CCC3F)c2cc1OC

Boltz running on GPU 0
7.95
CCc1cc2cccnc2cc1F

Boltz running on GPU 0
7.25
Fc1ccc2cc[nH]c2c1

Boltz running on GPU 0
6.37
[(12.51, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c270>), (12.48, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3f90>), (12.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be37b0>), (12.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a270>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (12.0, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8ba0>), (11.98, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b7b0>), (11.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c120>), (11.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b270>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15350>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afce40>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12eb0>), (11.75, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8ac0>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b350>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4db30>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c74a0>), (11.73, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa270>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c0b0>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c200>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3890>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b059e0>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc80>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b057b0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7200>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d66126dd0>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (11.65, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bacc80>), (11.65, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a890>), (11.64, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15dd0>), (11.63, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba85f0>), (11.63, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15820>), (11.62, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3e40>), (11.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15040>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c970>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b4bf90>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8190>), (11.59, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8cf0>), (11.58, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bc80>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (11.56, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3b30>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ac0>), (11.54, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bb30>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c80>), (11.51, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15d60>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc820>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a200>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a740>), (11.49, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b172e0>), (11.48, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b4b200>), (11.47, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ab30>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c3c0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b154a0>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc7b0>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b050b0>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ccf0>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa350>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b900>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c890>), (11.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcdd0>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7a50>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b3c0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c430>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15f20>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bc10>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15890>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4df20>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc740>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9aa50>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba83c0>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b4a0>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9be40>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15ba0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17510>), (11.27, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bff200>), (11.26, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b174a0>), (11.26, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bff900>), (11.25, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc040>), (11.25, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a120>), (11.25, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7ba0>), (11.23, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bd60>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5ab9cf0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa510>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ca50>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ad60>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d65eb44a0>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba89e0>), (11.2, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12f20>)]
[0.009033338869346286, 0.009011676186206541, 0.00878060756604925, 0.00878060756604925, 0.008701177727870182, 0.008665073255970605, 0.008650631467210774, 0.008628968784071028, 0.008600085206551367, 0.008592864312171452, 0.008592864312171452, 0.008578422523411622, 0.008578422523411622, 0.00856398073465179, 0.008527876262752214, 0.008520655368372298, 0.008513434473992382, 0.008513434473992382, 0.008513434473992382, 0.008484550896472721, 0.008477330002092807, 0.008477330002092807, 0.008477330002092807, 0.00847010910771289, 0.008462888213332976, 0.00845566731895306, 0.00845566731895306, 0.00845566731895306, 0.008448446424573144, 0.008448446424573144, 0.008448446424573144, 0.008448446424573144, 0.00844122553019323, 0.00844122553019323, 0.0084267837414334, 0.0084267837414334, 0.0084267837414334, 0.0084267837414334, 0.008419562847053483, 0.008412341952673569, 0.008412341952673569, 0.008405121058293653, 0.008397900163913738, 0.008397900163913738, 0.008390679269533822, 0.008383458375153906, 0.008376237480773992, 0.008376237480773992, 0.008376237480773992, 0.008369016586394076, 0.008361795692014161, 0.008354574797634245, 0.00834735390325433, 0.008340133008874415, 0.008340133008874415, 0.008332912114494499, 0.008318470325734668, 0.008318470325734668, 0.008311249431354754, 0.008304028536974838, 0.008304028536974838, 0.008304028536974838, 0.008296807642594923, 0.008289586748215007, 0.008282365853835093, 0.008260703170695346, 0.008260703170695346, 0.008246261381935516, 0.008246261381935516, 0.008246261381935516, 0.008246261381935516, 0.0082390404875556, 0.0082390404875556, 0.0082390404875556, 0.008231819593175685, 0.00822459869879577, 0.00822459869879577, 0.008217377804415855, 0.008217377804415855, 0.008217377804415855, 0.008210156910035939, 0.008210156910035939, 0.008202936015656023, 0.008202936015656023, 0.008188494226896192, 0.008181273332516278, 0.008181273332516278, 0.008181273332516278, 0.008174052438136362, 0.008174052438136362, 0.008174052438136362, 0.008174052438136362, 0.008174052438136362, 0.008174052438136362, 0.008166831543756447, 0.008166831543756447, 0.008166831543756447, 0.008159610649376533, 0.008159610649376533, 0.008152389754996615, 0.008152389754996615, 0.0081451688606167, 0.0081451688606167, 0.0081451688606167, 0.0081451688606167, 0.008137947966236785, 0.00813072707185687, 0.00813072707185687, 0.008123506177476954, 0.008123506177476954, 0.008123506177476954, 0.008109064388717125, 0.00810184349433721, 0.00810184349433721, 0.00810184349433721, 0.00810184349433721, 0.00810184349433721, 0.008094622599957295, 0.008094622599957295, 0.008087401705577377]
[(11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c74a0>), (12.48, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3f90>), (12.0, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8ba0>), (11.47, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ab30>), (11.26, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b174a0>), (11.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8190>), (11.65, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a890>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afca50>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ccf0>), (11.59, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8cf0>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa350>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc820>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c74a0>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ccf0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (12.48, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3f90>), (11.47, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ab30>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4db30>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.98, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b7b0>), (11.25, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7ba0>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b154a0>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15ba0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c0b0>), (11.65, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a890>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b350>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d66126dd0>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a200>), (11.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c3c0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d66126dd0>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7a50>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc7b0>), (11.64, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15dd0>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa510>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17510>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ccf0>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba89e0>), (11.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (11.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15040>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba83c0>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afce40>), (11.22, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ad60>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc80>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c0b0>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9be40>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.98, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b7b0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4df20>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.51, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15d60>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b4a0>), (11.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc820>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a200>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c3c0>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (11.58, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bc80>), (11.26, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bff900>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (12.51, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c270>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afce40>), (11.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcdd0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c3c0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (11.27, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bff200>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c970>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc820>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c80>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc7b0>), (11.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15040>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (11.47, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ab30>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b4bf90>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (12.0, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8ba0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4df20>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b050b0>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7a50>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (11.98, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b7b0>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc80>), (11.26, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b174a0>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc7b0>), (11.21, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba89e0>), (12.0, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8ba0>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12eb0>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b059e0>), (11.48, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b4b200>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9be40>), (11.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcdd0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4df20>), (11.75, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8ac0>)]
Bin size: 100
===== for SMILES N#CC1=C2CN(O)C3=NC4=C(C(=O)NC[C@H](C5=CC=CS5)OC2=CC=C1F)C(N)=NN4C=C3 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][#C][C][=C][C][N][Branch1][C][O][C][=N][C][=C][Branch2][Ring1][=N][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][C][Ring2][Ring1][Ring2][=C][C][=C][Ring2][Ring1][Branch2][F][C][Branch1][C][N][=N][N][Ring2][Ring1][=Branch1][C][=C][Ring2][Ring1][#Branch2]<eom>
Output: 
output selfies [C][C][=C][C][=C][Branch2][Branch1][#C][C][=C][C][=C][C][Branch2][Ring2][P][N][C][=Branch1][C][=O][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][Ring1][O][C][=C][C][=C][Branch2][Ring1][Branch1][O][C][=N][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][Cl][C][=C][Ring2][Ring1][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][P][C][=C][Ring2][Ring2][#Branch2]
generated smiles C1C=C2C=C(C=CC=CC13NC(=O)NC(=O)C=CC=COC4=CC=C(OC5=NC=C(C(F)(F)F)C=C5Cl)C=C4C)C=C3C=C2
added!
adding editted molecule!!!
===== for SMILES O=C1NCCCCN2C=C(C=N2)C2=CC3=CC(=CC=C3N=C2)CCN2N=C(C=CC2=O)C2=CC(C3=CC=CS3)=C1C=C2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][C][=C][C][=Branch1][#Branch2][=C][C][=C][Ring1][=Branch1][N][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][=C][Ring2][Ring2][#Branch1][C][=C][Ring1][O]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][C][N][=N][NH1][C][=Ring1][Branch1][C][=C][Ring2][Ring1][Ring2][Ring1][P]
generated smiles O=C(O)C1=CC=CC=C1C=C2C=CC3=CC=C(C4=CC=CC=C4C=5N=N[NH1]C=5)C=C23
added!
adding editted molecule!!!
===== for SMILES N#CC1=C(F)C=CC2=C1CN(CF)C1=NC3=C(C(=O)NC[C@H](C4=CC=CS4)O2)C(N)=NN3C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][#C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][C][N][Branch1][Ring1][C][F][C][=N][C][=C][Branch2][Ring1][Branch1][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][Ring2][Ring1][Branch1][C][Branch1][C][N][=N][N][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][N][C][=N][C][=C][C][Branch2][Ring1][S][N][C][C][=C][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][C][F][C][Branch1][=Branch1][C][=Branch1][C][=O][O][=C][Ring1][#Branch2][C][=C][Ring1][S][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][=N][C]
generated smiles CCOC(=O)N1C=NC=CC(NCC2=CC=C(C3=CC=C(F)C(C(=O)O)=C3)C=C2)=C1C=CC
added!
adding editted molecule!!!
===== for SMILES C[C@@H](C1=CC2=CC(C3=CN(C)N=C3)=CN=C2C=C1)C1=NN=C2C(F)=CC(C3=CN(N)C=N3)=CN21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C@@H1][Branch2][Ring1][O][C][=C][C][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][N][=C][Ring1][N][C][=C][Ring1][S][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][N][Branch1][C][N][C][=N][Ring1][=Branch1][=C][N][Ring1][=N][Ring1][S]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][Ring1][=C][C][=C][Ring2][Ring1][Branch2][N][C][=N][C][=C][Branch1][=Branch2][C][Branch1][C][N][=N][C][Ring1][#Branch1][C][=C][Ring1][O]
generated smiles C1C=CC(F)=C(C2=CC3=CC(=C2)C(F)(F)C4=CC(F)=CC=C43)C=C1N5C=NC=C(C(N)=NC)C=C5
added!
adding editted molecule!!!
===== for SMILES O=C1NCCCCN2C=C(C=N2)C2=CN=C3C=CC(=CC3=C2)CCN2N=C(C=CC2=O)C2=CC=C1C(C(F)(F)F)=C2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][N][=C][C][=C][C][=Branch1][Branch2][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][=C][Ring2][Ring2][C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][Ring2][Ring1][C][=C][Ring2][Ring1][=Branch1]
generated smiles O=C(O)C1=C2C=CC3=C1C=CC4=CC5=CC=C(N(C)C)C=C5N=C4C3=C2
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(O)=CC2=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][=Branch1][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][C][O][=C][C][Ring1][#Branch1][=C][Ring1][N][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [N][C][=N][C][Branch1][C][F][=C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][O][N][C][=N][C][=C][C][Branch1][P][C][=C][C][=C][Branch1][=Branch1][C][=Branch1][C][=O][O][C][=C][Ring1][=Branch2][F][=C][Ring1][S][C][=C][Ring2][Ring1][Branch2][Ring2][Ring1][N]
generated smiles NC=NC(F)=CC1=CC(F)=C(NC2=NC=CC(C3=CC=C(C(=O)O)C=C3F)=C2)C=C1
added!
adding editted molecule!!!
===== for SMILES CCN1CC2=C(C=CC(F)=C2/C(C)=N/OCl)O[C@@H](C2=CC=CS2)CNC(=O)C2=C3N=C1C=CN3N=C2N =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][P][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][/C][Branch1][C][C][=N][/O][Cl][O][C@@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][C][N][C][=Branch1][C][=O][C][=C][N][=C][Ring2][Ring1][=N][C][=C][N][Ring1][=Branch1][N][=C][Ring1][=Branch2][N]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][C][=C][Branch1][C][C][N][C][=C][C][=C][Branch2][Ring1][O][C][=Branch1][C][=O][N][C][C][C][Branch1][P][C][=Branch1][C][=O][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][C][Ring1][S][C][=C][Ring2][Ring1][=Branch1][Ring2][Ring1][N].[C][C][=C][C][=C][Branch2][Ring1][=Branch1][C][=Branch1][C][=O][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][C][=C][Ring2][Ring1][C]
generated smiles CCOC(=O)C1=C(C)NC=CC2=C(C(=O)N3CCCC(=O)NC4=CC=C(F)C=C45)CC3C=C21.CC=CC=C5C(=O)NC=CC=C(C(F)(F)F)C=C
added!
adding editted molecule!!!
===== for SMILES O=C1NCCCCN2C=C(C=N2)C2=CC3=CC(=CC=C3N=C2)CCN2N=C(C=CC2=O)C2=CC(C(O)(F)F)=C1C=C2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][C][=C][C][=Branch1][#Branch2][=C][C][=C][Ring1][=Branch1][N][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][Branch1][=Branch2][C][Branch1][C][O][Branch1][C][F][F][=C][Ring2][Ring2][=Branch1][C][=C][Ring1][#Branch2]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][Ring2][Ring1][C][=N][Ring2][Ring1][=Branch1]
generated smiles O=C(O)C1=C2C=CC3=C1C=CC4=CC5=CC=C(N(C)C)C=C5N=C4C3=N2
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CN(C)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][N][=C][Ring1][N][Ring1][#C]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Ring2][S][=C][C][=C][C][Branch2][Ring1][N][N][=N][C][=C][C][=C][Branch1][P][C][=C][N][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][Ring1][=C][C][=C][Ring1][S][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring2][Ring2][=Branch1]
generated smiles CC1=CC(F)=CC(=C1)C=NC=NC(=CC=CC(N=NC2=CC=C(C3=CN=C4C=CC=CC4=C32)C=C)=CC=CC5=CC)CC=C5
added!
adding editted molecule!!!
===== for SMILES CN1C=C(C2=CN3C(=NN=C3C3=CN=C4N=NN(CC5=CC6=CC=CN=C6C=C5F)C4=N3)C(F)=C2)C=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=C][Branch2][Branch1][Branch1][C][=C][N][C][=Branch2][Ring2][=Branch1][=N][N][=C][Ring1][Branch1][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1][C][Branch1][C][F][=C][Ring2][Ring1][#C][C][=N][Ring2][Ring2][Ring2]<eom>
Output: 
output selfies [F][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][=N][C][Branch1][C][F][=C][C][=C][C][Branch1][#C][N][C][=C][N][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][=N][N][Ring2][Ring1][C][Ring1][S]
generated smiles FC1=CC=CC(F)=C1C=NC(F)=CC2=CC(NC3=CN=C4C=CC=CC4=C3)=NN2
added!
adding editted molecule!!!
===== for SMILES CN1C=C(CN2C=C(C(=O)NC3=C(F)C=C(C4=CNC5=NC=NC(N)=C45)C(F)=C3)C(=O)C(C3=CC=C(F)C=C3)=C2)C=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=C][Branch2][=Branch1][Ring2][C][N][C][=C][Branch2][Ring2][#Branch1][C][=Branch1][C][=O][N][C][=C][Branch1][C][F][C][=C][Branch1][P][C][=C][N][C][=N][C][=N][C][Branch1][C][N][=C][Ring1][#Branch2][Ring1][#Branch1][C][Branch1][C][F][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][=C][Ring2][Ring2][Ring1][C][=N][Ring2][Ring2][=Branch2]<eom>
Output: 
output selfies [N][C][=C][C][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][Ring1][=N][C][=C][Ring2][Ring1][=Branch1][F]
generated smiles NC1=CC=C(C2=CC=C3C(=C2)C(F)(F)C4=CC(F)=CC=C43)C=C1F
added!
adding editted molecule!!!
===== for SMILES CCN1CC2=C(C#N)C(F)=CC=C2O[C@@H](C2=CC=CS2)CNC(=O)C2=C3N=C1C=CN3N=C2N =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][Ring1][C][#N][C][Branch1][C][F][=C][C][=C][Ring1][=Branch2][O][C@@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][C][N][C][=Branch1][C][=O][C][=C][N][=C][Ring2][Ring1][#Branch2][C][=C][N][Ring1][=Branch1][N][=C][Ring1][=Branch2][N]<eom>
Output: 
output selfies [C][C][C][=C][Branch1][C][C][C][=C][Branch2][Ring1][O][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][C][=C][C][Branch1][C][C][=C][C][Ring1][=Branch2][=N][Ring1][=N][C][=C][Ring2][Ring1][=Branch1][N][C][C][N][Branch2][Ring1][O][C][=C][C][=C][C][Branch1][P][C][=Branch1][C][=O][N][C][C][N][Branch1][Ring1][C][C][C][C][Ring1][#Branch1][=C][Ring1][S][C][C][Ring2][Ring1][=Branch1]
generated smiles CC1C=C(C)C=C(C2=C3C=CC(=C2)C(C)=CC(C)=CC=N3)C=C1N4CCN(C5=CC=CC(C(=O)NC6CN(CC)CC6)=C5)CC4
added!
adding editted molecule!!!
===== for SMILES CCN1CC2=C(C=CC(F)=C2C#N)O[C@@H](C2=CC=CS2)CNC(=O)C2=C3N=C1C=CN3N=C2N =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][N][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][#N][O][C@@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][C][N][C][=Branch1][C][=O][C][=C][N][=C][Ring2][Ring1][#Branch2][C][=C][N][Ring1][=Branch1][N][=C][Ring1][=Branch2][N]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring2][=Branch1][N][C][=Branch1][C][=O][N][C][C][C][C@@H1][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][C][C][Ring2][Ring1][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][S][C]
generated smiles C1COC(=O)C2=CC=CC(NC(=O)NCCC[C@@H1]1NC3=CC=C(C(F)(F)F)C=C3CC)=C2C=CC
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=C][N][=C][Branch1][#Branch2][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=N][=C][Ring1][P][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][F]
generated smiles C12C=CC(F)=C(C3=CC=C4C=CN=C(NC5=CC=CC=C5)C4=C3C=C1)C=C2C6=CC=CC=C6F
added!
adding editted molecule!!!
===== for SMILES CC(=NF)C1=NN2C(CC3=C(F)C=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Ring1][=N][F][C][=N][N][C][Branch2][Ring1][Ring2][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][=C][N][=C][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch1][Ring1][C][#N][C][Ring1][Branch2][=N][Ring1][P]
generated smiles CC1=CC(F)=CC(=C1)C=NC(F)=C2C=CC=C(C#N)C2=N
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=NN(CCC3=CC=C4N=CC(C5=CN(CCO)N=C5)=CC4=C3)C(=O)C=C2)C=C1C(F)(F)F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][#C][C][=N][N][Branch2][Ring1][S][C][C][C][=C][C][=C][N][=C][C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][=C][C][Ring1][=C][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][P][C][Branch1][C][F][Branch1][C][F][F]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][C][=C][Branch2][Ring1][P][N][C][=Branch1][C][=O][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2][C][=C][Ring1][S][Ring2][Ring1][#Branch1][=C][C][=C][Ring2][Ring1][=N][Ring2][Ring1][P]
generated smiles CC(C)(C)C1=CC=CC2(C=CC=CN=CC3=CNC(=O)NC=CC=C3C=CC=CC(C(F)(F)F)=C)C=C21
added!
adding editted molecule!!!
===== for SMILES N#CC1=C(F)C=CC2=C1CN(CCCO)C1=NC3=C(C(=O)NC[C@H](C4=CC=CS4)O2)C(N)=NN3C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][#C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][C][N][Branch1][Branch1][C][C][C][O][C][=N][C][=C][Branch2][Ring1][Branch1][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][Ring2][Ring1][#Branch1][C][Branch1][C][N][=N][N][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][N][C][=N][C][=C][C][Branch2][Ring1][#Branch2][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2][Cl][=C][C][=C][Ring2][Ring1][#Branch1][N][Ring2][Ring1][#Branch2][C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1]
generated smiles CCOC(=O)NC1=NC=CC(OC2=CC=CC=C2C3=CC=C(F)C(F)=C3Cl)C=C1NCC4=CC=C(F)C=C4
added!
adding editted molecule!!!
===== for SMILES CC(=NC1=CC2=CC(C3=CN(C)N=C3)=CN=C2C=C1)C1=CSC(C2=NN3C(=NN=C3CC3=CC=C4N=CC=CC4=C3)C=C2)=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch2][Ring1][N][=N][C][=C][C][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][N][=C][Ring1][N][C][=C][Ring1][S][C][=C][S][C][Branch2][Ring1][P][C][=N][N][C][=Branch2][Ring1][Branch1][=N][N][=C][Ring1][Branch1][C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][=C][Ring2][Ring1][Ring2][=C][Ring2][Ring1][=Branch2]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][C][=C][C][=N][C][=N][C][=Branch2][=Branch1][Branch1][=C][C][=C][C][=C][Branch2][Ring2][S][N][=C][N][=C][Branch2][Ring1][Ring2][N][C][=C][C][=C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring1][N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1][Ring2][Ring1][=Branch1][C][=C][Ring2][Ring1][S][C][=C][Ring2][Ring2][=Branch1][C][Ring2][Ring2][#Branch2][=C][Ring2][Ring2][=C]
generated smiles C1C=CC(C)=CC=NC=NC=CC=CC=C1N=CN=C(NC2=CC=C(C3=CC=CC=C3)C=C2)C4=CC=C(Cl)C=C4
added!
adding editted molecule!!!
===== for SMILES CC(N=O)C1=NN2C(=NN=C2CC2=C(F)C=C3N=CC=CC3=C2F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch1][Ring1][N][=O][C][=N][N][C][=Branch2][Ring1][=Branch2][=N][N][=C][Ring1][Branch1][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch2][Ring2][C][C][=C][C][=C][C][Branch2][Ring1][=Branch1][N][C][=Branch1][C][=O][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][=C][Ring2][Ring1][Ring1][=C][C][=C][Ring2][Ring1][#Branch2][F]
generated smiles C1C(C)(C2)C=NC(C=CC=CC1(NC(=O)C3=NC4=CC=CC=C4C=C3F)C)C=C2F
added!
adding editted molecule!!!
===== for SMILES C[C@@H](C1=NN=C2C=CC(C(F)=NOC(N)=O)=NN21)C1=C(F)C=C2N=CC=CC2=C1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C@@H1][Branch2][Ring1][O][C][=N][N][=C][C][=C][C][Branch1][N][C][Branch1][C][F][=N][O][C][Branch1][C][N][=O][=N][N][Ring1][=N][Ring1][S][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F]<eom>
Output: 
output selfies [C][C][Branch1][C][C][O][C][=N][C][Branch1][C][F][=C][C][Branch2][Ring1][=Branch1][N][C][=N][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][F][F][C][=C][Ring1][=Branch2][N][Ring1][N][=C][Ring2][Ring1][Ring1][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][F]
generated smiles CC(C)OC=NC(F)=CC(NC1=NC2=CC=C(C(F)F)C=C2N1)=CC3=CC=C(F)C=C3F
added!
adding editted molecule!!!
===== for SMILES NC(=O)C1=CC=C(C2=CN=C3N=NN(C(F)C4=C(F)C5=CC(F)=CN=C5C=C4F)C3=N2)C=C1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][N][C][=C][N][=C][N][=N][N][Branch2][Ring1][#Branch2][C][Branch1][C][F][C][=C][Branch1][C][F][C][=C][C][Branch1][C][F][=C][N][=C][Ring1][#Branch1][C][=C][Ring1][N][F][C][Ring2][Ring1][Ring2][=N][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][=C][F]<eom>
Output: 
output selfies [N][C][=Branch1][C][=O][C][=C][C][Branch1][C][F][=C][C][Branch2][Ring2][=Branch1][N][C][=N][C][=C][C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][=N][C][=C][N][=C][Branch1][C][F][C][=C][Ring2][Ring1][C][Ring1][#Branch1][=C][Ring2][Ring1][O][F][=C][Ring2][Ring1][P]
generated smiles N1C(=O)C=CC(F)=CC1NC=NC=CC(C2=CC=CC=C2)=NC3=CN=C(F)C=C3
added!
adding editted molecule!!!
===== for SMILES NC(=O)C1=CC=C(C2=CN=C3N=NN(C(F)C4=C(F)C=C5N=CC(F)=CC5=C4F)C3=N2)C=C1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][N][C][=C][N][=C][N][=N][N][Branch2][Ring1][#Branch2][C][Branch1][C][F][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][C][F][=C][C][Ring1][#Branch1][=C][Ring1][N][F][C][Ring2][Ring1][Ring2][=N][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][=C][F]<eom>
Output: 
output selfies [F][C][=C][C][=C][Branch2][Ring2][C][C][=C][C][=N][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][C][=C][Ring1][#Branch2][N][=C][Ring1][=C][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][=C][Ring2][Ring1][=N]
generated smiles FC1=CC=C(C=CC2=NC3=CC(C(F)(F)F)=CC=C3N=C2C4=CC=CCF)C4C=C1
added!
adding editted molecule!!!
===== for SMILES COC1=CC2=CC([C@H](C)N=C(C)C3=CN=C4N=NN(CC5=CC6=CC=CN=C6C=C5F)C4=N3)=CC=C2N=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=C][C][Branch2][Ring2][#Branch2][C@H1][Branch1][C][C][N][=C][Branch1][C][C][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1][=C][C][=C][Ring2][Ring1][S][N][=C][Ring2][Ring2][Ring2]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][N][=C][Branch2][Ring1][N][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][=C][Ring1][S][C][Ring2][Ring1][#Branch1][=C][Ring2][Ring1][O][=C][Ring2][Ring1][S]
generated smiles C1OC=CC=CC1C=CC2=CN=C3N=C(NC=CC4=C(C=CC5=CC=C6N=CC=CC6=C5)C=C4)C3=C2C
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=CC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=C][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Branch1][=Branch1][=C][C][=C][C][=C][Branch2][Ring2][=Branch1][N][C][=C][C][=C][Branch2][Ring1][Branch2][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][N][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][#C][C][=C][Ring2][Ring1][Branch1][C][=C][Ring2][Ring1][=N][C][=C][Ring2][Ring2][C][C][N][Ring2][Ring2][=Branch1]
generated smiles CC1=CC(F)=CC(=C1)C=NC=NC(=CC=CC=C2NC=CC=C(C3=CC=CC(F)=C3NC4=CC=CC=C4)C2C=C)CN
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Ring2][S][=C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][N][=C][Ring1][O][C][=C][C][=C][Branch1][S][N][C][C][N][Branch1][=Branch1][C][C][C][Ring1][Ring1][C][C][Ring1][=Branch2][C][=C][Ring1][#C][C][=C][Ring2][Ring1][P][C][=C][Ring2][Ring2][=Branch1][C]
generated smiles CC1=CC(F)=CC(=C12)C=NC=NC(=CC3=C(F)C=CC=C3N=CC4=CC=C(N5CCN(C6CC6)CC5)C=C4C=C2C)CC
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=CN3C(SC4=CC=C5N=CC6=C(OCC(=O)N6C)C5=C4)=NN=C3C(F)=C2)S1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][P][C][=C][N][C][Branch2][Ring1][N][S][C][=C][C][=C][N][=C][C][=C][Branch1][O][O][C][C][=Branch1][C][=O][N][Ring1][#Branch1][C][C][Ring1][N][=C][Ring1][S][=N][N][=C][Ring2][Ring1][=Branch1][C][Branch1][C][F][=C][Ring2][Ring1][O][S][Ring2][Ring1][S]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][=Branch1][C][=O][N][C][=N][C][=C][C][=C][Branch1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][C][N][=N][NH1][C][Ring1][=Branch2][=O][C][=C][Ring1][P][Ring2][Ring1][Branch1].[N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][#Branch1][=Branch1][C][=C][C][=C][C][=Branch2][=Branch1][=Branch1][=C][N][=C][Branch2][Branch1][O][C][=C][C][=C][Branch2][Ring2][P][N][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring1][#C][C][=C][N][=C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][=C][C][=C][C][=C][Ring1][P][Ring1][=Branch1][C][=C][Ring2][Ring1][#Branch1][C][=C][Ring2][Ring1][S][C][=C][Ring2][Ring2][=Branch1][C][=C][Ring2][Ring2][=N][=C][Ring2][Branch1][Ring1]
generated smiles CC(C)C(=O)N1C=NC=C2C=C(C3=CC4=CC=C3CN=N[NH1]C4)OC=C21.NC(=O)C=CC=C5CC=CC=C6C(=CN=C(C=CC=C(NC(=O)C=CC=CC(C7=CN=C(C8=CC=C(F)C=C8)C9=CC=CC=C79)C=C)C)C6C)C5=C
added!
adding editted molecule!!!
===== for SMILES CC(=O)N1CCC2=CC=C(NC3=NC=C(Cl)C(NC4=CC=CC=C4C(=O)NN)=N3)C=C2C(C)C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][C][=O][N][C][C][C][=C][C][=C][Branch2][Ring1][#C][N][C][=N][C][=C][Branch1][C][Cl][C][Branch1][S][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][N][N][=N][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch2][C][Branch1][C][C][C][Ring2][Ring1][#C]<eom>
Output: 
output selfies [C][C][Branch1][C][C][C][C][=C][Branch1][#C][N][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=Branch2][N][=C][N][Branch1][=N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1][Cl][C][=Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1]
generated smiles CC(C1)CC2=C(NC3=NC4=CC=CC=C4C3)N=CN(C5=CC=C(Cl)C=C5Cl)C2C(=O)N1C6=CC=C(Cl)C=C6
added!
adding editted molecule!!!
===== for SMILES O=C(NC1=CC=C(OC2=CC=NC(NC(=O)N3CCC3)=C2)C(F)=C1)C1=CN(CC2CC2)C(=O)N(C2=CC=C(F)C=C2)C1=O =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][Branch2][Ring2][#Branch1][N][C][=C][C][=C][Branch2][Ring1][#Branch1][O][C][=C][C][=N][C][Branch1][N][N][C][=Branch1][C][=O][N][C][C][C][Ring1][Ring2][=C][Ring1][=N][C][Branch1][C][F][=C][Ring2][Ring1][Branch1][C][=C][N][Branch1][#Branch1][C][C][C][C][Ring1][Ring1][C][=Branch1][C][=O][N][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][Ring2][Ring1][C][=O]<eom>
Output: 
output selfies [C][C][C][C][=N][C][Branch2][Ring2][=Branch1][C][=C][C][=C][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][Cl][C][=C][Ring2][Ring1][C][=C][C][=C][Ring2][Ring1][Branch2][C][=Branch1][C][=O][N][Ring2][Ring1][=N][C][C][C][N][C][C][C][C][C][Ring1][=Branch1]
generated smiles C1CC2C=NC3(C=CC=C(NC4=CC=C(C(F)(F)F)C=C4Cl)C3=CC=C2)C(=O)N1CCCN5CCCCC5
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C2=C(C=C1F)N=C(C#N)C2)N1N=NC2=NC=C(C3=CN(O)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][Branch2][C][=C][Branch1][C][F][C][=C][Branch1][=Branch1][C][=C][Ring1][#Branch1][F][N][=C][Branch1][Ring1][C][#N][C][Ring1][#Branch2][N][N][=N][C][=N][C][=C][Branch1][O][C][=C][N][Branch1][C][O][N][=C][Ring1][=Branch1][N][=C][Ring1][N][Ring1][#C]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][Branch2][Ring1][P][C][=C][C][=C][C][Branch2][Ring1][Ring2][N][C][=C][N][=C][C][=C][Branch1][C][Br][C][=C][C][Ring1][#Branch1][=N][Ring1][O][=C][Ring1][P][=C][C][=C][Ring2][Ring1][Branch2][N][Ring2][Ring1][N]
generated smiles C12C(C3)(C)C=CC=CC2(C=CC=CC1(NC4=CN=C5C=C(Br)C=CC5=N4)CC=C)N3
added!
adding editted molecule!!!
===== for SMILES CN1C=NOC(C2=CN=C3C=CC([C@H](F)C4=NN=C5C(N)=CC(N)=CN54)=CC3=C2)=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=N][O][C][Branch2][Ring2][O][C][=C][N][=C][C][=C][C][Branch2][Ring1][Branch2][C@H1][Branch1][C][F][C][=N][N][=C][C][Branch1][C][N][=C][C][Branch1][C][N][=C][N][Ring1][Branch2][Ring1][O][=C][C][Ring2][Ring1][Ring1][=C][Ring2][Ring1][#Branch1][=C][Ring2][Ring1][=N]<eom>
Output: 
output selfies [N][C][=N][C][=N][C][=C][Ring1][=Branch1][C][Branch1][=Branch1][C][=Branch1][C][=O][O][=C][C][=C][C][Branch1][C][N][=C][C][=C][Ring1][#Branch1][Ring1][S]
generated smiles NC1=NC2=NC=C1C(C(=O)O)=CC3=CC(N)=CC=C32
added!
adding editted molecule!!!
fp_scores_to_top [0.18309859154929578, 0.6509433962264151, 0.7522935779816514, 0.0380952380952381, 0.1724137931034483, 0.128, 0.16783216783216784, 0.1686046511627907, 0.2, 0.1388888888888889, 0.15748031496062992, 0.07017543859649122, 0.16233766233766234, 0.03636363636363636, 0.1506849315068493, 0.15476190476190477, 0.16233766233766234, 0.1796875, 0.18796992481203006, 0.05660377358490566, 0.09302325581395349, 0.1388888888888889, 0.1044776119402985, 0.1564625850340136, 0.16535433070866143, 0.88, 0.13392857142857142, 0.0660377358490566, 0.18309859154929578, 0.0660377358490566, 0.19736842105263158, 0.20134228187919462, 0.15827338129496402, 0.17791411042944785, 0.16556291390728478, 0.48412698412698413, 0.08888888888888889, 0.21830985915492956, 0.1724137931034483, 0.11016949152542373, 0.16556291390728478, 0.18803418803418803, 0.09022556390977443, 0.0660377358490566, 0.14743589743589744, 0.08823529411764706, 0.16551724137931034, 0.1780821917808219, 0.15, 0.16901408450704225, 0.11904761904761904, 0.18604651162790697, 0.09868421052631579, 0.15822784810126583, 0.0782608695652174, 0.21301775147928995, 0.1390728476821192, 0.20945945945945946, 0.2323943661971831, 0.1411764705882353, 0.12, 0.09701492537313433, 0.144, 0.11382113821138211, 0.1527777777777778, 0.15, 0.1657142857142857, 0.16541353383458646, 0.14473684210526316, 0.16216216216216217, 0.1116751269035533, 0.16666666666666666, 0.16149068322981366, 0.1488095238095238, 0.17482517482517482, 0.17105263157894737, 0.11904761904761904, 0.18309859154929578, 0.1326530612244898, 0.17105263157894737, 0.18382352941176472, 0.14948453608247422, 0.17073170731707318, 0.16167664670658682, 0.13432835820895522, 0.1005586592178771, 0.1676300578034682, 0.11578947368421053, 0.16233766233766234, 0.14375, 0.15584415584415584, 0.14743589743589744, 0.15254237288135594, 0.14361702127659576, 0.1793478260869565, 0.12014134275618374, 0.18023255813953487, 0.1340782122905028, 0.11728395061728394, 0.176]
top 70 [25  2  1 35 58 37 55 57 31  8 30 41 18 51 80 28  0 77 96 17 94 47 33 99
 74 38  4 75 79 82 49  7  6 86 71 66 40 34 46 67 24 12 88 16 69 83 72 32
 53 10 23 90 15 64 92 14 65 48 81 73 91 44 68 62 89 93 59 56  9 21]
len offspring_mol 70
188
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Cc1nn2ccc3nc2c1C(=O)NC[C@H](c1cccs1)Oc1ccc(F)c(C#N)c1CN3O

Boltz running on GPU 0
11.73
Already in buffer
Already in buffer
CN[C@H]1CNC(=O)c2c(N)nn3ccc(nc23)N(CCCO)Cc2c(ccc(F)c2N=O)O1

Boltz running on GPU 1
10.88
900/1000 | avg_top1: 12.510 | avg_top10: 12.110 | avg_top100: 11.589 | avg_sa: 3.744 | div: 0.806
{'avg_top1': 12.51, 'avg_top10': 12.110000000000001, 'avg_top100': 11.589400000000001, 'auc_top1': 10.82195000000001, 'auc_top10': 10.590859999999997, 'auc_top100': 10.044125309523803, 'avg_sa': 3.7437745093540142, 'diversity_top100': 0.8058468823851528, 'n_oracle': 900}
O=C1OCC2=NC(c3ccc(F)cc3F)C(Oc3ccnc4c3CC=CN4)=C12

Boltz running on GPU 1
8.1
CC(=NN)c1cnc2nnn(-c3c(I)ccn(-c4ccc(F)cc4)c3=O)c2n1

Boltz running on GPU 1
8.98
O=C1NCCCCn2cc(cn2)-c2cnc3ccc(cc3c2)CCn2nc(ccc2=O)-c2ccc1c(F)c2

Boltz running on GPU 0
12.06
Cc1c(Cc2cnc3ccc(/C(C#N)=N/OC(N)=O)nn23)c(F)cc2ncccc12

Boltz running on GPU 0
10.63
N#C/C(=N\OC(=O)Cl)c1ccc2ncc(Cc3c(F)cc4ncccc4c3F)n2n1

Boltz running on GPU 0
11.35
N#CC(c1c(F)cc2ncc(F)cc2c1F)n1nnc2ncc(-c3ccc(C(N)=O)c(F)c3)nc21

Boltz running on GPU 1
11.17
N#CC1=Nc2cc(F)c(C(NN)n3nnc4ncc(-c5cnn(F)c5)nc43)c(F)c2C1

Boltz running on GPU 0
11.28
c1csc(-c2ccc3ncccc3c2)c1

Boltz running on GPU 0
7.06
Cn1cc(-c2cnc3nnn(-c4ccc(F)cc4)c3n2)cn1

Boltz running on GPU 0
7.76
O=C1OCC2=NC(c3ccc(F)cc3F)C(OC3=CN=C4N=NN(Cc5cc6cccnc6cc5F)C34)=C12

Boltz running on GPU 1
11.18
910/1000 | avg_top1: 12.510 | avg_top10: 12.126 | avg_top100: 11.598 | avg_sa: 3.773 | div: 0.803
{'avg_top1': 12.51, 'avg_top10': 12.126000000000001, 'avg_top100': 11.597899999999997, 'auc_top1': 10.94705000000001, 'auc_top10': 10.712039999999996, 'auc_top100': 10.160061809523802, 'avg_sa': 3.7725751902347544, 'diversity_top100': 0.8033483102486295, 'n_oracle': 910}
Already in buffer
Already in buffer
Already in buffer
Already in buffer
N#CC(=O)c1ccc(-c2ccc3nnc(C#N)n3c2)s1

Boltz running on GPU 1
8.38
Already in buffer
COCCCc1ccc2ncc(Cc3c(F)cc4ncccc4c3F)n2n1

Boltz running on GPU 0
10.2
COc1cnc2cc(F)c(C(O)n3nnc4ncc(-c5ccc(C(=O)F)c(F)c5)nc43)c(F)c2c1

Boltz running on GPU 1
11.82
Already in buffer
Already in buffer
Already in buffer
CNC(=O)c1ccc(-c2ccc(=O)n(CCc3ccc4ncc(-c5cnn(N)c5)cc4c3)n2)cc1C(F)(F)F

Boltz running on GPU 0
12.05
Already in buffer
Already in buffer
Already in buffer
Cc1cnc2cc(F)c(C(C)c3nnc4c(F)cc(N)cn34)c(F)c2c1

Boltz running on GPU 0
11.11
CC(c1c(F)cc2ncc(-c3cnn(-c4ccc(F)cc4F)c3)cc2c1F)c1nnc2c(F)cc(N)cn12

Boltz running on GPU 1
10.76
CC(N=O)c1ccc2nnc(Cc3c(F)cc4c(c3F)CC(Cl)=N4)n2n1

Boltz running on GPU 1
11.14
Already in buffer
O=C(O)c1ccccc1C=C1C=Cc2ccc(-c3ccccc3-c3c[nH]nn3)cc21

Boltz running on GPU 0
7.41
C[C@H](c1c(F)cc2ncccc2c1F)c1nnc2ccc(-c3nnc4ncc(-c5cnn(C)c5)nn34)nn12

Boltz running on GPU 1
11.2
CCn1cc(-c2cnc3nnn([C@@H](F)c4ccc5ncccc5c4)c3n2)cn1

Boltz running on GPU 0
11.38
920/1000 | avg_top1: 12.510 | avg_top10: 12.140 | avg_top100: 11.612 | avg_sa: 3.771 | div: 0.802
{'avg_top1': 12.51, 'avg_top10': 12.14, 'avg_top100': 11.6116, 'auc_top1': 11.072150000000011, 'auc_top10': 10.833369999999997, 'auc_top100': 10.276109309523802, 'avg_sa': 3.771310931925529, 'diversity_top100': 0.8024745168556812, 'n_oracle': 920}
CC(=NOO)c1ccc2nnc([C@H](C)c3c(CO)cc4ncccc4c3F)n2n1

Boltz running on GPU 0
10.2
CC(c1c(F)cc2ncc(O)cc2c1F)n1nnc2ncc(C(N)=O)nc21

Boltz running on GPU 0
10.1
COc1cnc2cc(F)c(-c3ccc(F)cc3F)c(F)c2c1

Boltz running on GPU 0
7.17
Cc1cc(C2=CN=C(c3ccc(F)cc3F)C2)on1

Boltz running on GPU 0
6.7
Already in buffer
Already in buffer
CC(c1c(F)cc2ncc(-c3cnn(C)c3)cc2c1F)n1nnc2ncc(F)nc21

Boltz running on GPU 0
10.67
N=C(NNC(=O)F)c1cnc2nnn(Cc3ccc4ncccc4c3)c2n1

Boltz running on GPU 0
11.43
Already in buffer
Already in buffer
CNc1cnc2nnn(Cc3cc4cccnc4cc3F)c2c1

Boltz running on GPU 0
10.4
CC(=NN)c1cnc2nnn(C(F)c3ccc4ncc(-c5cnn(C)c5)cc4c3)c2n1

Boltz running on GPU 0
11.62
NNC(=O)c1ccccc1Nc1nc(F)ncc1Cl

Boltz running on GPU 1
7.45
CNC(=O)Nc1ccc(Oc2ccnc3cc(OC)c(OC)cc23)c(F)c1

Boltz running on GPU 0
9.01
930/1000 | avg_top1: 12.510 | avg_top10: 12.140 | avg_top100: 11.616 | avg_sa: 3.771 | div: 0.803
{'avg_top1': 12.51, 'avg_top10': 12.14, 'avg_top100': 11.616, 'auc_top1': 11.197250000000011, 'auc_top10': 10.954769999999996, 'auc_top100': 10.392247309523803, 'avg_sa': 3.771483561378263, 'diversity_top100': 0.8030710061871875, 'n_oracle': 930}
Already in buffer
Cn1cc(-c2cnc3cc(F)c(C(F)n4nnc5ncc(-c6cnn(C)c6)nc54)c(F)c3c2)cn1

Boltz running on GPU 0
11.53
CN=C(C)c1ccc2nnc([C@@H](C)c3ccc4ncccc4c3)n2n1

Boltz running on GPU 0
10.4
Already in buffer
CC(=NF)c1cnc2nnc(C(F)(F)c3ccc4ncccc4c3)n2n1

Boltz running on GPU 0
11.18
CC1=NC(C(F)n2nnc3ncc(-c4ccncc4)nc32)C=C1

Boltz running on GPU 0
8.13
Cn1cc(-c2ccc(C(N)=O)c(F)c2)cn1

Boltz running on GPU 0
6.55
Already in buffer
Already in buffer
Already in buffer
CNC1=Nc2cc(F)c(C(C)n3nnc4c3=NC(c3cnn(C)c3)=[SH]C=4)c(F)c2C1

Boltz running on GPU 0
11.13
COOC1=Cn2c(nnc2[C@@H](C)c2ccc3ncc(CCO)cc3c2)C(F)C1

Boltz running on GPU 0
10.22
COc1cnc2cc3ncccc3c(F)c2c1

Boltz running on GPU 0
6.49
Already in buffer
Already in buffer
COCCOC1=CN=C(c2cnc3nnn(C(C)c4c(F)cc5ncc(OC)cc5c4F)c3n2)C1

Boltz running on GPU 0
11.09
CNC(=O)c1ccc(COc2ccnc3cc(OC)ccc23)cc1C(F)(F)F

Boltz running on GPU 0
8.19
940/1000 | avg_top1: 12.510 | avg_top10: 12.140 | avg_top100: 11.618 | avg_sa: 3.785 | div: 0.802
{'avg_top1': 12.51, 'avg_top10': 12.14, 'avg_top100': 11.618199999999996, 'auc_top1': 11.32235000000001, 'auc_top10': 11.076169999999996, 'auc_top100': 10.508418309523805, 'avg_sa': 3.784994221892045, 'diversity_top100': 0.802138372237666, 'n_oracle': 940}
FC1=CN=C2N=NN(C(F)c3c(F)cc4ncc(F)cc4c3F)C2C1

Boltz running on GPU 0
10.16
Fc1cnc2cc(F)c(C(F)n3nnc4ncc(F)cc43)c(F)c2c1

Boltz running on GPU 1
10.25
[(12.51, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c270>), (12.48, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3f90>), (12.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be37b0>), (12.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a270>), (12.06, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05580>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9aac0>), (12.0, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8ba0>), (11.98, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b7b0>), (11.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c120>), (11.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b270>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15350>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afce40>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9add0>), (11.82, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ac10>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12eb0>), (11.75, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8ac0>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b350>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4db30>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c74a0>), (11.73, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa270>), (11.73, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bb6eb0>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c0b0>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c200>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3890>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b059e0>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc80>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b057b0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7200>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d66126dd0>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (11.65, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bacc80>), (11.65, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a890>), (11.64, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15dd0>), (11.63, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba85f0>), (11.63, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15820>), (11.62, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3e40>), (11.62, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc890>), (11.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15040>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c970>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b4bf90>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8190>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05cf0>), (11.59, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8cf0>), (11.58, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bc80>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (11.56, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3b30>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ac0>), (11.54, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bb30>), (11.53, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c80>), (11.51, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15d60>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc820>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a200>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a740>), (11.49, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b172e0>), (11.48, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b4b200>), (11.47, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ab30>), (11.47, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b430>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c3c0>), (11.43, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afccf0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b154a0>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc7b0>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b050b0>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ccf0>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa350>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9aeb0>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b900>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05900>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c890>), (11.35, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05eb0>), (11.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcdd0>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7a50>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b3c0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c430>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15f20>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bc10>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15890>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc740>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9aa50>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba83c0>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b4a0>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9be40>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15ba0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17510>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05270>), (11.27, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bff200>), (11.26, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b174a0>)]
[0.008999093616464539, 0.008977513056233382, 0.008747320413767704, 0.008747320413767704, 0.00867538521299718, 0.008668191692920128, 0.008668191692920128, 0.008632224092534866, 0.008617837052380761, 0.008596256492149602, 0.008567482411841394, 0.00856028889176434, 0.00856028889176434, 0.008545901851610237, 0.008545901851610237, 0.00853151481145613, 0.00853151481145613, 0.008502740731147922, 0.00849554721107087, 0.008488353690993817, 0.008481160170916763, 0.008481160170916763, 0.008481160170916763, 0.008452386090608555, 0.008445192570531501, 0.008445192570531501, 0.008445192570531501, 0.00843799905045445, 0.00843799905045445, 0.008430805530377398, 0.008423612010300344, 0.008423612010300344, 0.008423612010300344, 0.008416418490223291, 0.008416418490223291, 0.008416418490223291, 0.008416418490223291, 0.00840922497014624, 0.00840922497014624, 0.008394837929992134, 0.008394837929992134, 0.008394837929992134, 0.008394837929992134, 0.008387644409915082, 0.00838045088983803, 0.00838045088983803, 0.008373257369760977, 0.008366063849683926, 0.008366063849683926, 0.008358870329606872, 0.008358870329606872, 0.008351676809529819, 0.008344483289452767, 0.008344483289452767, 0.008344483289452767, 0.008344483289452767, 0.008337289769375715, 0.008330096249298662, 0.00832290272922161, 0.008315709209144559, 0.008308515689067505, 0.008308515689067505, 0.008301322168990452, 0.0082941286489134, 0.008286935128836348, 0.008286935128836348, 0.008279741608759295, 0.008272548088682243, 0.008272548088682243, 0.008272548088682243, 0.008265354568605192, 0.008258161048528138, 0.008250967528451086, 0.008250967528451086, 0.008229386968219928, 0.008229386968219928, 0.008222193448142876, 0.008214999928065823, 0.008214999928065823, 0.008214999928065823, 0.008214999928065823, 0.008207806407988771, 0.008207806407988771, 0.008207806407988771, 0.00820061288791172, 0.008193419367834666, 0.008193419367834666, 0.008186225847757614, 0.008186225847757614, 0.008186225847757614, 0.008186225847757614, 0.00817903232768056, 0.00817903232768056, 0.00817903232768056, 0.008171838807603509, 0.008171838807603509, 0.008164645287526456, 0.008157451767449404, 0.008150258247372352, 0.008150258247372352, 0.008150258247372352, 0.008143064727295299, 0.008143064727295299, 0.008143064727295299, 0.008143064727295299, 0.008143064727295299, 0.008135871207218247, 0.008135871207218247, 0.008135871207218247, 0.008128677687141195, 0.008128677687141195, 0.008121484167064142, 0.008121484167064142, 0.008114290646987089, 0.008114290646987089, 0.008114290646987089, 0.008114290646987089, 0.008114290646987089, 0.008107097126910037, 0.008099903606832983]
[(11.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcdd0>), (11.73, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bb6eb0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05270>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b350>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b900>), (11.35, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05eb0>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9aac0>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc2e0>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.47, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ab30>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05cf0>), (11.49, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b172e0>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8190>), (11.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15040>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (11.64, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15dd0>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ac0>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b4bf90>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4db30>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ccf0>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc740>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc7b0>), (11.51, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15d60>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c970>), (11.98, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b7b0>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b4bf90>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3890>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c74a0>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8190>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9aa50>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c80>), (11.63, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15820>), (11.63, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15820>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (11.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b350>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (11.82, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ac10>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (11.82, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ac10>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.65, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bacc80>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4db30>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05900>), (11.62, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc890>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15ba0>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b270>), (11.62, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc890>), (11.62, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc890>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (11.49, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b172e0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15f20>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.64, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15dd0>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b050b0>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b050b0>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c890>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (12.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a270>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8190>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15f20>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (11.58, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bc80>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d66126dd0>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ccf0>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.63, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba85f0>), (11.48, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b4b200>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b350>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcdd0>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05cf0>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b900>), (11.43, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afccf0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.82, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ac10>), (11.62, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc890>), (11.64, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15dd0>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d66126dd0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05270>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b4bf90>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b3c0>), (11.47, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b430>), (11.56, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3b30>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (12.06, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05580>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc820>), (11.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b059e0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15890>), (11.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcdd0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c430>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12eb0>), (11.65, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a890>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.28, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4ddd0>), (11.51, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15d60>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a740>)]
Bin size: 100
===== for SMILES N#CC1=C2CN(O)C3=NC4=C(C(=O)NC[C@H](C5=CC=CS5)OC2=CC=C1F)C(N)=NN4C=C3 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][#C][C][=C][C][N][Branch1][C][O][C][=N][C][=C][Branch2][Ring1][=N][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][C][Ring2][Ring1][Ring2][=C][C][=C][Ring2][Ring1][Branch2][F][C][Branch1][C][N][=N][N][Ring2][Ring1][=Branch1][C][=C][Ring2][Ring1][#Branch2]<eom>
Output: 
output selfies [C][C][=C][C][=C][Branch2][Branch1][#C][C][=C][C][=C][C][Branch2][Ring2][P][N][C][=Branch1][C][=O][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][Ring1][O][C][=C][C][=C][Branch2][Ring1][Branch1][O][C][=N][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][Cl][C][=C][Ring2][Ring1][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][P][C][=C][Ring2][Ring2][#Branch2]
generated smiles C1C=C2C=C(C=CC=CC13NC(=O)NC(=O)C=CC=COC4=CC=C(OC5=NC=C(C(F)(F)F)C=C5Cl)C=C4C)C=C3C=C2
added!
adding editted molecule!!!
===== for SMILES O=C1NCCCCN2C=C(C=N2)C2=CC3=CC(=CC=C3N=C2)CCN2N=C(C=CC2=O)C2=CC(C3=CC=CS3)=C1C=C2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][C][=C][C][=Branch1][#Branch2][=C][C][=C][Ring1][=Branch1][N][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][=C][Ring2][Ring2][#Branch1][C][=C][Ring1][O]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][C][N][=N][NH1][C][=Ring1][Branch1][C][=C][Ring2][Ring1][Ring2][Ring1][P]
generated smiles O=C(O)C1=CC=CC=C1C=C2C=CC3=CC=C(C4=CC=CC=C4C=5N=N[NH1]C=5)C=C23
added!
adding editted molecule!!!
===== for SMILES C[C@@H](C1=CC2=CC(C3=CN(C)N=C3)=CN=C2C=C1)C1=NN=C2C(F)=CC(C3=CN(N)C=N3)=CN21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C@@H1][Branch2][Ring1][O][C][=C][C][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][N][=C][Ring1][N][C][=C][Ring1][S][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][N][Branch1][C][N][C][=N][Ring1][=Branch1][=C][N][Ring1][=N][Ring1][S]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][Ring1][=C][C][=C][Ring2][Ring1][Branch2][N][C][=N][C][=C][Branch1][=Branch2][C][Branch1][C][N][=N][C][Ring1][#Branch1][C][=C][Ring1][O]
generated smiles C1C=CC(F)=C(C2=CC3=CC(=C2)C(F)(F)C4=CC(F)=CC=C43)C=C1N5C=NC=C(C(N)=NC)C=C5
added!
adding editted molecule!!!
===== for SMILES N#CC1=C(F)C=CC2=C1CN(CF)C1=NC3=C(C(=O)NC[C@H](C4=CC=CS4)O2)C(N)=NN3C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][#C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][C][N][Branch1][Ring1][C][F][C][=N][C][=C][Branch2][Ring1][Branch1][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][Ring2][Ring1][Branch1][C][Branch1][C][N][=N][N][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][N][C][=N][C][=C][C][Branch2][Ring1][S][N][C][C][=C][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][C][F][C][Branch1][=Branch1][C][=Branch1][C][=O][O][=C][Ring1][#Branch2][C][=C][Ring1][S][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][=N][C]
generated smiles CCOC(=O)N1C=NC=CC(NCC2=CC=C(C3=CC=C(F)C(C(=O)O)=C3)C=C2)=C1C=CC
added!
adding editted molecule!!!
===== for SMILES O=C1NCCCCn2cc(cn2)-c2cnc3ccc(cc3c2)CCn2nc(ccc2=O)-c2ccc1c(F)c2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][N][=C][C][=C][C][=Branch1][Branch2][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][=C][Ring2][Ring2][C][C][Branch1][C][F][=C][Ring1][#Branch1]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][=Branch1][C][=Branch1][C][=O][O][=C][N][Ring1][=N][C][C][C][C][N][C][C][N][Branch1][N][C][C][C][C][C][=C][C][=C][C][=C][Ring1][=Branch1][C][C][Ring1][#C]
generated smiles O=C(O)C1=CC=CC=C1C2=CC=CC(=C2)C(C(=O)O)=CNCCCCNC3CN(CCCCC4=CC=CC=C4)CC3
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=NN(CCC3=CC4=CC(C5=CN(N)N=C5)=CN=C4C=C3)C(=O)C=C2)C=C1C(F)(F)F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][N][C][=N][N][Branch2][Ring1][=N][C][C][C][=C][C][=C][C][Branch1][O][C][=C][N][Branch1][C][N][N][=C][Ring1][=Branch1][=C][N][=C][Ring1][N][C][=C][Ring1][S][C][=Branch1][C][=O][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][#C][C][Branch1][C][F][Branch1][C][F][F]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][C][=C][Branch2][Ring1][P][C][=C][C][=C][C][=Branch1][Ring2][=N][Ring1][=Branch1][C][Branch1][=Branch2][N][C][=N][C][C][N][Ring1][Branch1][=C][Ring1][=N][C][=C][Ring2][Ring1][=Branch1][C][Ring2][Ring1][O][=C][Ring2][Ring1][S][=C][Ring2][Ring2][Ring2]
generated smiles C1C(C)(C2)C=CC=C3C(C=CC4=CN=CC=C(C5=C6C=CC(=N5)C(NC7=NCCN7)=C6C=C4C3)C2)=C1
added!
adding editted molecule!!!
===== for SMILES O=C1NCCCCN2C=C(C=N2)C2=CN=C3C=CC(=CC3=C2)CCN2N=C(C=CC2=O)C2=CC=C1C(C(F)(F)F)=C2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][N][=C][C][=C][C][=Branch1][Branch2][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][=C][Ring2][Ring2][C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][Ring2][Ring1][C][=C][Ring2][Ring1][=Branch1]
generated smiles O=C(O)C1=C2C=CC3=C1C=CC4=CC5=CC=C(N(C)C)C=C5N=C4C3=C2
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(O)=CC2=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][=Branch1][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][C][O][=C][C][Ring1][#Branch1][=C][Ring1][N][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [N][C][=N][C][Branch1][C][F][=C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][O][N][C][=N][C][=C][C][Branch1][P][C][=C][C][=C][Branch1][=Branch1][C][=Branch1][C][=O][O][C][=C][Ring1][=Branch2][F][=C][Ring1][S][C][=C][Ring2][Ring1][Branch2][Ring2][Ring1][N]
generated smiles NC=NC(F)=CC1=CC(F)=C(NC2=NC=CC(C3=CC=C(C(=O)O)C=C3F)=C2)C=C1
added!
adding editted molecule!!!
===== for SMILES CCN1CC2=C(C=CC(F)=C2/C(C)=N/OCl)O[C@@H](C2=CC=CS2)CNC(=O)C2=C3N=C1C=CN3N=C2N =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][P][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][/C][Branch1][C][C][=N][/O][Cl][O][C@@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][C][N][C][=Branch1][C][=O][C][=C][N][=C][Ring2][Ring1][=N][C][=C][N][Ring1][=Branch1][N][=C][Ring1][=Branch2][N]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][C][=C][Branch1][C][C][N][C][=C][C][=C][Branch2][Ring1][O][C][=Branch1][C][=O][N][C][C][C][Branch1][P][C][=Branch1][C][=O][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][C][Ring1][S][C][=C][Ring2][Ring1][=Branch1][Ring2][Ring1][N].[C][C][=C][C][=C][Branch2][Ring1][=Branch1][C][=Branch1][C][=O][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][C][=C][Ring2][Ring1][C]
generated smiles CCOC(=O)C1=C(C)NC=CC2=C(C(=O)N3CCCC(=O)NC4=CC=C(F)C=C45)CC3C=C21.CC=CC=C5C(=O)NC=CC=C(C(F)(F)F)C=C
added!
adding editted molecule!!!
===== for SMILES O=C1NCCCCN2C=C(C=N2)C2=CC3=CC(=CC=C3N=C2)CCN2N=C(C=CC2=O)C2=CC(C(O)(F)F)=C1C=C2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][C][=C][C][=Branch1][#Branch2][=C][C][=C][Ring1][=Branch1][N][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][Branch1][=Branch2][C][Branch1][C][O][Branch1][C][F][F][=C][Ring2][Ring2][=Branch1][C][=C][Ring1][#Branch2]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][Ring2][Ring1][C][=N][Ring2][Ring1][=Branch1]
generated smiles O=C(O)C1=C2C=CC3=C1C=CC4=CC5=CC=C(N(C)C)C=C5N=C4C3=N2
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CN(C)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][N][=C][Ring1][N][Ring1][#C]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Ring2][S][=C][C][=C][C][Branch2][Ring1][N][N][=N][C][=C][C][=C][Branch1][P][C][=C][N][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][Ring1][=C][C][=C][Ring1][S][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring2][Ring2][=Branch1]
generated smiles CC1=CC(F)=CC(=C1)C=NC=NC(=CC=CC(N=NC2=CC=C(C3=CN=C4C=CC=CC4=C32)C=C)=CC=CC5=CC)CC=C5
added!
adding editted molecule!!!
===== for SMILES CN1C=C(C2=CN3C(=NN=C3C3=CN=C4N=NN(CC5=CC6=CC=CN=C6C=C5F)C4=N3)C(F)=C2)C=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=C][Branch2][Branch1][Branch1][C][=C][N][C][=Branch2][Ring2][=Branch1][=N][N][=C][Ring1][Branch1][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1][C][Branch1][C][F][=C][Ring2][Ring1][#C][C][=N][Ring2][Ring2][Ring2]<eom>
Output: 
output selfies [F][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][=N][C][Branch1][C][F][=C][C][=C][C][Branch1][#C][N][C][=C][N][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][=N][N][Ring2][Ring1][C][Ring1][S]
generated smiles FC1=CC=CC(F)=C1C=NC(F)=CC2=CC(NC3=CN=C4C=CC=CC4=C3)=NN2
added!
adding editted molecule!!!
===== for SMILES CN1C=C(CN2C=C(C(=O)NC3=C(F)C=C(C4=CNC5=NC=NC(N)=C45)C(F)=C3)C(=O)C(C3=CC=C(F)C=C3)=C2)C=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=C][Branch2][=Branch1][Ring2][C][N][C][=C][Branch2][Ring2][#Branch1][C][=Branch1][C][=O][N][C][=C][Branch1][C][F][C][=C][Branch1][P][C][=C][N][C][=N][C][=N][C][Branch1][C][N][=C][Ring1][#Branch2][Ring1][#Branch1][C][Branch1][C][F][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][=C][Ring2][Ring2][Ring1][C][=N][Ring2][Ring2][=Branch2]<eom>
Output: 
output selfies [N][C][=C][C][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][Ring1][=N][C][=C][Ring2][Ring1][=Branch1][F]
generated smiles NC1=CC=C(C2=CC=C3C(=C2)C(F)(F)C4=CC(F)=CC=C43)C=C1F
added!
adding editted molecule!!!
===== for SMILES CCN1CC2=C(C#N)C(F)=CC=C2O[C@@H](C2=CC=CS2)CNC(=O)C2=C3N=C1C=CN3N=C2N =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][Ring1][C][#N][C][Branch1][C][F][=C][C][=C][Ring1][=Branch2][O][C@@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][C][N][C][=Branch1][C][=O][C][=C][N][=C][Ring2][Ring1][#Branch2][C][=C][N][Ring1][=Branch1][N][=C][Ring1][=Branch2][N]<eom>
Output: 
output selfies [C][C][C][=C][Branch1][C][C][C][=C][Branch2][Ring1][O][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][C][=C][C][Branch1][C][C][=C][C][Ring1][=Branch2][=N][Ring1][=N][C][=C][Ring2][Ring1][=Branch1][N][C][C][N][Branch2][Ring1][O][C][=C][C][=C][C][Branch1][P][C][=Branch1][C][=O][N][C][C][N][Branch1][Ring1][C][C][C][C][Ring1][#Branch1][=C][Ring1][S][C][C][Ring2][Ring1][=Branch1]
generated smiles CC1C=C(C)C=C(C2=C3C=CC(=C2)C(C)=CC(C)=CC=N3)C=C1N4CCN(C5=CC=CC(C(=O)NC6CN(CC)CC6)=C5)CC4
added!
adding editted molecule!!!
===== for SMILES CCN1CC2=C(C=CC(F)=C2C#N)O[C@@H](C2=CC=CS2)CNC(=O)C2=C3N=C1C=CN3N=C2N =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][N][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][#N][O][C@@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][C][N][C][=Branch1][C][=O][C][=C][N][=C][Ring2][Ring1][#Branch2][C][=C][N][Ring1][=Branch1][N][=C][Ring1][=Branch2][N]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring2][=Branch1][N][C][=Branch1][C][=O][N][C][C][C][C@@H1][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][C][C][Ring2][Ring1][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][S][C]
generated smiles C1COC(=O)C2=CC=CC(NC(=O)NCCC[C@@H1]1NC3=CC=C(C(F)(F)F)C=C3CC)=C2C=CC
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=C][N][=C][Branch1][#Branch2][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=N][=C][Ring1][P][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][F]
generated smiles C12C=CC(F)=C(C3=CC=C4C=CN=C(NC5=CC=CC=C5)C4=C3C=C1)C=C2C6=CC=CC=C6F
added!
adding editted molecule!!!
===== for SMILES CC(c1c(F)cc2ncc(-c3cnn(C)c3)cc2c1F)n1nnc2ncc(-c3ccc(C(N)=O)c(F)c3)nc21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][C][=N][N][Branch1][C][C][C][=Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][Branch2][Ring1][N][N][C][=N][C][=C][C][Branch1][P][C][=C][N][Branch1][C][C][C][=C][C][=C][C][=C][Ring1][#Branch2][Ring1][=Branch1][=N][Ring1][S][C][=C][Ring2][Ring1][#Branch1][C][=C][Ring2][Ring1][S][NH1][Ring2][Ring1][#C]
generated smiles C1C(C)(C)C2=CC=CC1C=CC3=CN=C(NC4=NC=CC(C5=CN(C)C6=CC=CC=C56)=N4)C=C3C=C2[NH1]
added!
adding editted molecule!!!
===== for SMILES COC1=CC2=C(F)C(C(O)N3N=NC4=NC=C(C5=CC=C(C(=O)F)C(F)=C5)N=C43)=C(F)C=C2N=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=C][Branch1][C][F][C][Branch2][Ring2][Branch2][C][Branch1][C][O][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][=Branch1][C][=O][F][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1][=C][Branch1][C][F][C][=C][Ring2][Ring1][=N][N][=C][Ring2][Ring1][P]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=N][C][=C][Ring1][#Branch2][N][C][=N][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][C][Ring1][#Branch2][=N][Ring2][Ring1][=Branch1][=C][Ring2][Ring1][#C]
generated smiles CC(C)(C)C=CC=CCC=CC1=CC(C(F)(F)F)=NC=C1NC2=NC3=CC(F)=CC=C3C2=N
added!
adding editted molecule!!!
===== for SMILES CC(=NF)C1=NN2C(CC3=C(F)C=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Ring1][=N][F][C][=N][N][C][Branch2][Ring1][Ring2][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][=C][N][=C][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch1][Ring1][C][#N][C][Ring1][Branch2][=N][Ring1][P]
generated smiles CC1=CC(F)=CC(=C1)C=NC(F)=C2C=CC=C(C#N)C2=N
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=NN(CCC3=CC=C4N=CC(C5=CN(CCO)N=C5)=CC4=C3)C(=O)C=C2)C=C1C(F)(F)F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][#C][C][=N][N][Branch2][Ring1][S][C][C][C][=C][C][=C][N][=C][C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][=C][C][Ring1][=C][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][P][C][Branch1][C][F][Branch1][C][F][F]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][C][=C][Branch2][Ring1][P][N][C][=Branch1][C][=O][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2][C][=C][Ring1][S][Ring2][Ring1][#Branch1][=C][C][=C][Ring2][Ring1][=N][Ring2][Ring1][P]
generated smiles CC(C)(C)C1=CC=CC2(C=CC=CN=CC3=CNC(=O)NC=CC=C3C=CC=CC(C(F)(F)F)=C)C=C21
added!
adding editted molecule!!!
===== for SMILES CC(N=O)C1=NN2C(=NN=C2CC2=C(F)C=C3N=CC=CC3=C2F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch1][Ring1][N][=O][C][=N][N][C][=Branch2][Ring1][=Branch2][=N][N][=C][Ring1][Branch1][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch2][Ring2][C][C][=C][C][=C][C][Branch2][Ring1][=Branch1][N][C][=Branch1][C][=O][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][=C][Ring2][Ring1][Ring1][=C][C][=C][Ring2][Ring1][#Branch2][F]
generated smiles C1C(C)(C2)C=NC(C=CC=CC1(NC(=O)C3=NC4=CC=CC=C4C=C3F)C)C=C2F
added!
adding editted molecule!!!
===== for SMILES CC(=NC1=CC2=CC(C3=CN(C)N=C3)=CN=C2C=C1)C1=CSC(C2=NN3C(=NN=C3CC3=CC=C4N=CC=CC4=C3)C=C2)=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch2][Ring1][N][=N][C][=C][C][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][N][=C][Ring1][N][C][=C][Ring1][S][C][=C][S][C][Branch2][Ring1][P][C][=N][N][C][=Branch2][Ring1][Branch1][=N][N][=C][Ring1][Branch1][C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][=C][Ring2][Ring1][Ring2][=C][Ring2][Ring1][=Branch2]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][C][=C][C][=N][C][=N][C][=Branch2][=Branch1][Branch1][=C][C][=C][C][=C][Branch2][Ring2][S][N][=C][N][=C][Branch2][Ring1][Ring2][N][C][=C][C][=C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring1][N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1][Ring2][Ring1][=Branch1][C][=C][Ring2][Ring1][S][C][=C][Ring2][Ring2][=Branch1][C][Ring2][Ring2][#Branch2][=C][Ring2][Ring2][=C]
generated smiles C1C=CC(C)=CC=NC=NC=CC=CC=C1N=CN=C(NC2=CC=C(C3=CC=CC=C3)C=C2)C4=CC=C(Cl)C=C4
added!
adding editted molecule!!!
===== for SMILES N#CC1=C(F)C=CC2=C1CN(CCCO)C1=NC3=C(C(=O)NC[C@H](C4=CC=CS4)O2)C(N)=NN3C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][#C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][C][N][Branch1][Branch1][C][C][C][O][C][=N][C][=C][Branch2][Ring1][Branch1][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][Ring2][Ring1][#Branch1][C][Branch1][C][N][=N][N][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][N][C][=N][C][=C][C][Branch2][Ring1][#Branch2][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2][Cl][=C][C][=C][Ring2][Ring1][#Branch1][N][Ring2][Ring1][#Branch2][C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1]
generated smiles CCOC(=O)NC1=NC=CC(OC2=CC=CC=C2C3=CC=C(F)C(F)=C3Cl)C=C1NCC4=CC=C(F)C=C4
added!
adding editted molecule!!!
===== for SMILES C[C@@H](C1=NN=C2C=CC(C(F)=NOC(N)=O)=NN21)C1=C(F)C=C2N=CC=CC2=C1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C@@H1][Branch2][Ring1][O][C][=N][N][=C][C][=C][C][Branch1][N][C][Branch1][C][F][=N][O][C][Branch1][C][N][=O][=N][N][Ring1][=N][Ring1][S][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F]<eom>
Output: 
output selfies [C][C][Branch1][C][C][O][C][=N][C][Branch1][C][F][=C][C][Branch2][Ring1][=Branch1][N][C][=N][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][F][F][C][=C][Ring1][=Branch2][N][Ring1][N][=C][Ring2][Ring1][Ring1][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][F]
generated smiles CC(C)OC=NC(F)=CC(NC1=NC2=CC=C(C(F)F)C=C2N1)=CC3=CC=C(F)C=C3F
added!
adding editted molecule!!!
===== for SMILES NC(=O)C1=CC=C(C2=CN=C3N=NN(C(F)C4=C(F)C5=CC(F)=CN=C5C=C4F)C3=N2)C=C1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][N][C][=C][N][=C][N][=N][N][Branch2][Ring1][#Branch2][C][Branch1][C][F][C][=C][Branch1][C][F][C][=C][C][Branch1][C][F][=C][N][=C][Ring1][#Branch1][C][=C][Ring1][N][F][C][Ring2][Ring1][Ring2][=N][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][=C][F]<eom>
Output: 
output selfies [N][C][=Branch1][C][=O][C][=C][C][Branch1][C][F][=C][C][Branch2][Ring2][=Branch1][N][C][=N][C][=C][C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][=N][C][=C][N][=C][Branch1][C][F][C][=C][Ring2][Ring1][C][Ring1][#Branch1][=C][Ring2][Ring1][O][F][=C][Ring2][Ring1][P]
generated smiles N1C(=O)C=CC(F)=CC1NC=NC=CC(C2=CC=CC=C2)=NC3=CN=C(F)C=C3
added!
adding editted molecule!!!
===== for SMILES COC1=CC2=CC([C@H](C)N=C(C)C3=CN=C4N=NN(CC5=CC6=CC=CN=C6C=C5F)C4=N3)=CC=C2N=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=C][C][Branch2][Ring2][#Branch2][C@H1][Branch1][C][C][N][=C][Branch1][C][C][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1][=C][C][=C][Ring2][Ring1][S][N][=C][Ring2][Ring2][Ring2]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][N][=C][Branch2][Ring1][N][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][=C][Ring1][S][C][Ring2][Ring1][#Branch1][=C][Ring2][Ring1][O][=C][Ring2][Ring1][S]
generated smiles C1OC=CC=CC1C=CC2=CN=C3N=C(NC=CC4=C(C=CC5=CC=C6N=CC=CC6=C5)C=C4)C3=C2C
added!
adding editted molecule!!!
===== for SMILES NC(=O)C1=CC=C(C2=CN=C3N=NN(C(F)C4=C(F)C=C5N=CC(F)=CC5=C4F)C3=N2)C=C1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][N][C][=C][N][=C][N][=N][N][Branch2][Ring1][#Branch2][C][Branch1][C][F][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][C][F][=C][C][Ring1][#Branch1][=C][Ring1][N][F][C][Ring2][Ring1][Ring2][=N][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][=C][F]<eom>
Output: 
output selfies [F][C][=C][C][=C][Branch2][Ring2][C][C][=C][C][=N][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][C][=C][Ring1][#Branch2][N][=C][Ring1][=C][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][=C][Ring2][Ring1][=N]
generated smiles FC1=CC=C(C=CC2=NC3=CC(C(F)(F)F)=CC=C3N=C2C4=CC=CCF)C4C=C1
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=CC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=C][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Branch1][=Branch1][=C][C][=C][C][=C][Branch2][Ring2][=Branch1][N][C][=C][C][=C][Branch2][Ring1][Branch2][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][N][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][#C][C][=C][Ring2][Ring1][Branch1][C][=C][Ring2][Ring1][=N][C][=C][Ring2][Ring2][C][C][N][Ring2][Ring2][=Branch1]
generated smiles CC1=CC(F)=CC(=C1)C=NC=NC(=CC=CC=C2NC=CC=C(C3=CC=CC(F)=C3NC4=CC=CC=C4)C2C=C)CN
added!
adding editted molecule!!!
===== for SMILES Cc1nn2ccc3nc2c1C(=O)NC[C@H](c1cccs1)Oc1ccc(F)c(C#N)c1CN3O =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=N][N][C][=C][C][=N][C][Ring1][=Branch1][=C][Ring1][=Branch2][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][C][=C][C][=C][Branch1][C][F][C][Branch1][Ring1][C][#N][=C][Ring1][=Branch2][C][N][Ring2][Ring1][#Branch2][O]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][N][C][=C][C][=C][C][Branch2][Ring1][#C][N][C][=Branch1][C][=O][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][=C][=C][Ring2][Ring1][#Branch1][C][=C][Ring2][Ring1][N][N][C][=Branch1][C][=O][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][=C]
generated smiles CCOC(=O)NC1=CC=CC(NC(=O)C2=CC(C(F)(F)F)=CCC(F)(F)F)=C2C1C=CNC(=O)C3=CC(C(F)(F)F)=CC(C(F)(F)F)=C3
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Ring2][S][=C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][N][=C][Ring1][O][C][=C][C][=C][Branch1][S][N][C][C][N][Branch1][=Branch1][C][C][C][Ring1][Ring1][C][C][Ring1][=Branch2][C][=C][Ring1][#C][C][=C][Ring2][Ring1][P][C][=C][Ring2][Ring2][=Branch1][C]
generated smiles CC1=CC(F)=CC(=C12)C=NC=NC(=CC3=C(F)C=CC=C3N=CC4=CC=C(N5CCN(C6CC6)CC5)C=C4C=C2C)CC
added!
adding editted molecule!!!
fp_scores_to_top [0.16455696202531644, 0.1553398058252427, 0.05660377358490566, 0.10606060606060606, 0.13157894736842105, 0.09615384615384616, 0.15267175572519084, 0.5128205128205128, 0.1386861313868613, 0.1927710843373494, 0.19205298013245034, 0.05405405405405406, 0.10526315789473684, 0.16891891891891891, 0.15492957746478872, 0.18309859154929578, 0.17159763313609466, 0.22929936305732485, 0.14685314685314685, 0.1349206349206349, 0.2064516129032258, 0.15172413793103448, 0.17037037037037037, 0.045871559633027525, 0.16296296296296298, 0.1349206349206349, 0.09523809523809523, 0.0761904761904762, 0.12396694214876033, 0.16455696202531644, 0.13636363636363635, 0.14935064935064934, 0.152317880794702, 0.17791411042944785, 0.1791907514450867, 0.17261904761904762, 0.2361111111111111, 0.16901408450704225, 0.1657142857142857, 0.09090909090909091, 0.14545454545454545, 0.16901408450704225, 0.07407407407407407, 0.18633540372670807, 0.0660377358490566, 0.16296296296296298, 0.10852713178294573, 0.16981132075471697, 0.15315315315315314, 0.1588235294117647, 0.08552631578947369, 0.06451612903225806, 0.11764705882352941, 0.1506849315068493, 0.1323529411764706, 0.13432835820895522, 0.05172413793103448, 0.18333333333333332, 0.15384615384615385, 0.12931034482758622, 0.09016393442622951, 0.15625, 0.16666666666666666, 0.16901408450704225, 0.14634146341463414, 0.15492957746478872, 0.17647058823529413, 0.13076923076923078, 0.20253164556962025, 0.028037383177570093, 0.1116751269035533, 0.16666666666666666, 0.1488095238095238, 0.16149068322981366, 0.12105263157894737, 0.14857142857142858, 0.17482517482517482, 0.17105263157894737, 0.11904761904761904, 0.18309859154929578, 0.1326530612244898, 0.17105263157894737, 0.18382352941176472, 0.14948453608247422, 0.17073170731707318, 0.16167664670658682, 0.15517241379310345, 0.1144578313253012, 0.13432835820895522, 0.1005586592178771, 0.16233766233766234, 0.11578947368421053, 0.1676300578034682, 0.14375, 0.15584415584415584, 0.15254237288135594, 0.14743589743589744, 0.14361702127659576, 0.09900990099009901, 0.1793478260869565]
top 70 [ 7 36 17 20 68  9 10 43 82 57 79 15 99 34 33 66 76 35 16 81 77 84 22 47
 63 37 41 13 92 62 71 38  0 29 24 45 90 85 73 49 61 94  1 86 14 65 58 48
  6 95 32 21 53 83 31 72 75 96 18 64 40 93 97  8 30 25 19 55 88 80]
len offspring_mol 70
187
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Nc1nn2ccc3nc2c1C(=O)NC[C@H](F)Oc1ccc(F)c(F)c1CN3C(=O)F

Boltz running on GPU 0
11.4
CC(N=O)c1ccc2nnc(-c3ccc4cc(F)c(Cc5cccs5)n4n3)n2n1

Boltz running on GPU 0
9.66
NC(=O)c1ccc(C2CNc3nn4c(Cc5ccc6ncccc6c5)nnc4cc3N2)cc1F

Boltz running on GPU 1
10.82
CC(c1c(F)cc2c(c1F)C=CCN2)n1nnc2ncc(-c3ccc(C(N)=O)c(F)c3)nc21

Boltz running on GPU 0
11.08
CC(=O)N1CCc2ccc(Nc3ncc(F)c(Nc4ccccc4C(=O)NN)n3)cc2C(C)C1

Boltz running on GPU 0
10.87
CNC(=O)c1ccc(-c2cc(F)c3nnc(SC4CCc5cc(-c6cnn(C)c6)cnc5C4)n3c2)s1

Boltz running on GPU 1
10.96
Cn1cc(-c2ccn3c([C@@H](F)c4ccc5ncc(OO)cc5c4)nnc3c2N)cn1

Boltz running on GPU 0
10.8
Cc1csc(-c2cc(F)c3nnc([C@H](F)c4nnc5c(N)cc(-c6cc(C)no6)cn45)n3c2)c1

Boltz running on GPU 0
11.0
950/1000 | avg_top1: 12.510 | avg_top10: 12.140 | avg_top100: 11.619 | avg_sa: 3.808 | div: 0.803
{'avg_top1': 12.51, 'avg_top10': 12.14, 'avg_top100': 11.619099999999998, 'auc_top1': 11.447450000000012, 'auc_top10': 11.197569999999995, 'auc_top100': 10.624604809523804, 'avg_sa': 3.8078031257125144, 'diversity_top100': 0.8025707454184408, 'n_oracle': 950}
Already in buffer
N#CNC(=O)c1ccc(-c2ccc(=O)n(CCc3ccc4ncc(-c5cnn(CCO)c5)cc4c3)n2)cc1C(F)(F)F

Boltz running on GPU 0
11.47
Already in buffer
Already in buffer
Already in buffer
NC(=O)c1ccc(-c2cnc3nnn(C(F)c4c(F)cc5ncc(F)cc5c4-c4cn(N)cn4)c3n2)cc1F

Boltz running on GPU 0
11.52
C/C(=N\OCCCO)c1ccc2nnc(Cc3ccc4ncc5c(c4c3)OCC(=O)N5C)n2n1

Boltz running on GPU 0
11.34
CCn1nnc2ncc(-c3c(F)cc4ncccc4c3F)nc21

Boltz running on GPU 0
9.33
Already in buffer
NC(=O)c1ccc(-c2cnc3nnn(C(OC(=O)Cl)c4c(F)cc5ncc(F)cc5c4F)c3n2)cc1F

Boltz running on GPU 0
11.6
Cn1cnc(-c2cc(F)c3nnc([C@@H](N)c4ccc5ncc(-c6cnn(CCO)c6)cc5c4)n3c2)c1

Boltz running on GPU 0
10.85
Already in buffer
Already in buffer
Already in buffer
Cc1cnc2nnn(Cc3cc4cccnc4cc3F)c2n1

Boltz running on GPU 0
10.47
COCCc1cnc2ccc([C@H](F)c3nnc4c(N)cc(-c5cc(C)no5)cn34)cc2c1

Boltz running on GPU 0
11.19
NN=C(F)c1cnc2nnn(Cc3cc4cccnc4cc3F)c2n1

Boltz running on GPU 0
11.02
CC(=NN)c1cnc2nnn(C(F)c3ccc4ncccc4c3)c2n1

Boltz running on GPU 0
11.23
960/1000 | avg_top1: 12.510 | avg_top10: 12.140 | avg_top100: 11.626 | avg_sa: 3.807 | div: 0.804
{'avg_top1': 12.51, 'avg_top10': 12.14, 'avg_top100': 11.625599999999997, 'auc_top1': 11.572550000000012, 'auc_top10': 11.318969999999995, 'auc_top100': 10.740828309523804, 'avg_sa': 3.8067755584429017, 'diversity_top100': 0.8038460967654407, 'n_oracle': 960}
N=C(C(N)=O)c1cnc2nnn(Cc3ccc4ncccc4c3)c2n1

Boltz running on GPU 0
10.58
FC1C=CC=C1Cc1cnc2ccc(-c3cc(Cl)c4ncccc4c3)nn12

Boltz running on GPU 0
9.56
Already in buffer
CNC1=Nc2cc(F)c(C(C)n3nnc4ncc(-c5cn(C)[nH]5)nc43)c(F)c2C1

Boltz running on GPU 0
10.95
Already in buffer
CCc1cnc2ccc([C@H](C)N=C(C)c3cnc4nnn(Cc5cc6cccnc6cc5F)c4n3)cc2c1

Boltz running on GPU 0
11.34
Nn1cnc(-c2cc(F)c3nnc(NC(=O)C4(C(=O)NC5=CCC(F)C=C5)CC4)n3c2)c1

Boltz running on GPU 0
9.23
Cc1cc(F)c2nnc([C@@H](C)c3ccc4ncc(C=CC(=N)NNC(N)=O)cc4c3)n2c1

Boltz running on GPU 0
10.78
C1=NN(Cc2ccc3ncccc3c2)Cc2ncccc21

Boltz running on GPU 0
7.84
FC1=Nn2c(Cc3c(F)cc4ncccc4c3F)cnc2C1

Boltz running on GPU 0
9.04
Already in buffer
Already in buffer
Already in buffer
CC(c1c(F)cc2ncc(C3=CN(C)N=CC3)cc2c1F)n1nnc2ncc(-c3cnn(C)c3)nc21

Boltz running on GPU 0
11.66
Cn1cc(Cc2c(F)cc3ncccc3c2F)cn1

Boltz running on GPU 0
8.94
970/1000 | avg_top1: 12.510 | avg_top10: 12.140 | avg_top100: 11.629 | avg_sa: 3.817 | div: 0.801
{'avg_top1': 12.51, 'avg_top10': 12.14, 'avg_top100': 11.629099999999996, 'auc_top1': 11.697650000000012, 'auc_top10': 11.440369999999996, 'auc_top100': 10.857101809523803, 'avg_sa': 3.816609099018499, 'diversity_top100': 0.8011500384523507, 'n_oracle': 970}
Already in buffer
N#Cc1ccc(F)cc1

Boltz running on GPU 0
5.53
Cn1cc(-c2ccnc(Nc3cc4c(cn3)C=CC3C=CC=C(C([NH])=C4)C(C)(C)C3)n2)c2ccccc21

Boltz running on GPU 0
8.74
CC1=CC(F)C(Cc2cnc3ccc(/C(C#N)=N/OC(=O)Cl)nn23)=C1

Boltz running on GPU 0
9.97
CNC(=N)c1cnc2nnn(Cc3ccc4ncccc4c3)c2n1

Boltz running on GPU 0
10.21
CNC(=O)c1ccccc1Nc1nc(NC2=CC=C(C)C2)ncc1Cl

Boltz running on GPU 0
10.68
Nc1cc2cccnc2cc1F

Boltz running on GPU 0
6.61
CC1=C(F)C(C(C)c2nnc3c(F)cc(N)cn23)=C(F)C1

Boltz running on GPU 0
8.64
Already in buffer
CC(=NNC(N)=O)c1ccc2nnc([C@@H](C)c3ccc4ncncc4c3)n2n1

Boltz running on GPU 0
10.36
CC(c1c(F)cc2ncc(F)cc2c1F)n1nnc2ncc(OO)nc21

Boltz running on GPU 0
11.34
CC(=NF)c1ccc2ncc(CC3C(F)Cc4ncccc4C3F)n2n1

Boltz running on GPU 0
9.98
980/1000 | avg_top1: 12.510 | avg_top10: 12.140 | avg_top100: 11.629 | avg_sa: 3.820 | div: 0.801
{'avg_top1': 12.51, 'avg_top10': 12.14, 'avg_top100': 11.629199999999996, 'auc_top1': 11.822750000000013, 'auc_top10': 11.561769999999996, 'auc_top100': 10.973393309523802, 'avg_sa': 3.8204050051082623, 'diversity_top100': 0.8014077258738787, 'n_oracle': 980}
Already in buffer
COc1cc2ncccc2cc1Cn1nnc2ncc(C(F)=NNC(N)=O)nc21

Boltz running on GPU 0
10.19
Already in buffer
CC12C=CC=C3CC4=Cc5c(NC6=NCCN6)c6ccc5c(n6)C(=CC=NC=C4C=CC3=CC1)CC2

Boltz running on GPU 0
9.0
Already in buffer
Cc1cnc2nnn(C(F)c3c(F)cc4ncc(F)cc4c3F)c2n1

Boltz running on GPU 0
10.87
COc1cnc2ccc3cccnc3c2c1

Boltz running on GPU 0
6.47
Already in buffer
Already in buffer
Already in buffer
CC(=NN)C(F)c1ccc2ncc(-c3cnn(C)c3)cc2c1

Boltz running on GPU 0
10.28
COc1c(F)cc2ncc(-c3cnn(C)c3)cc2c1F

Boltz running on GPU 0
9.04
Already in buffer
Already in buffer
Already in buffer
Already in buffer
[(12.51, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c270>), (12.48, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3f90>), (12.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be37b0>), (12.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a270>), (12.06, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05580>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9aac0>), (12.0, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8ba0>), (11.98, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b7b0>), (11.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c120>), (11.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b270>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15350>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afce40>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9add0>), (11.82, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ac10>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17270>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b4b040>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b056d0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12eb0>), (11.75, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8ac0>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b350>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4db30>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c74a0>), (11.73, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa270>), (11.73, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bb6eb0>), (11.72, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05740>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa4a0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c0b0>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c200>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3890>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b059e0>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c040>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc80>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b057b0>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7200>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa120>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b053c0>), (11.65, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bacc80>), (11.65, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a890>), (11.64, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15dd0>), (11.63, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba85f0>), (11.63, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15820>), (11.62, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3e40>), (11.62, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc890>), (11.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15040>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c970>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b4bf90>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8190>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ae40>), (11.59, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8cf0>), (11.58, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bc80>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (11.56, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3b30>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc10>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ac0>), (11.54, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bb30>), (11.53, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc510>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c80>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bff820>), (11.51, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15d60>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc820>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a200>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a740>), (11.49, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b172e0>), (11.48, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b4b200>), (11.47, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ab30>), (11.47, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b430>), (11.47, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b4b120>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c3c0>), (11.43, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afccf0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cf90>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17740>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b154a0>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc7b0>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05c10>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c200>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b050b0>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ccf0>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa350>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9aeb0>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b900>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05900>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1cdd0>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c890>), (11.35, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05eb0>), (11.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcdd0>), (11.34, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a2e0>), (11.34, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d6d0>), (11.34, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b80f90>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7a50>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b3c0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c430>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15f20>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bc10>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15890>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc740>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9aa50>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15200>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba83c0>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b4a0>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9be40>)]
[0.00899081513848595, 0.00896925443071997, 0.008739273547882839, 0.008739273547882839, 0.008667404521996236, 0.008660217619407575, 0.008660217619407575, 0.008624283106464273, 0.008609909301286953, 0.008588348593520971, 0.00855960098316633, 0.00855241408057767, 0.00855241408057767, 0.00853804027540035, 0.00853804027540035, 0.008523666470223028, 0.008523666470223028, 0.008494918859868387, 0.008487731957279728, 0.008487731957279728, 0.008480545054691067, 0.008473358152102406, 0.008473358152102406, 0.008473358152102406, 0.008444610541747765, 0.008437423639159105, 0.008437423639159105, 0.008437423639159105, 0.008430236736570444, 0.008430236736570444, 0.008423049833981785, 0.008415862931393124, 0.008415862931393124, 0.008415862931393124, 0.008408676028804463, 0.008408676028804463, 0.008408676028804463, 0.008408676028804463, 0.008401489126215802, 0.008401489126215802, 0.008387115321038483, 0.008387115321038483, 0.008387115321038483, 0.008379928418449822, 0.008379928418449822, 0.008372741515861162, 0.008372741515861162, 0.008365554613272501, 0.008358367710683842, 0.008358367710683842, 0.008351180808095179, 0.008351180808095179, 0.00834399390550652, 0.008336807002917859, 0.008336807002917859, 0.008336807002917859, 0.008336807002917859, 0.0083296201003292, 0.00832243319774054, 0.008315246295151879, 0.00830805939256322, 0.008300872489974558, 0.008300872489974558, 0.008293685587385897, 0.008286498684797236, 0.008279311782208577, 0.008279311782208577, 0.008279311782208577, 0.008272124879619916, 0.008264937977031256, 0.008264937977031256, 0.008264937977031256, 0.008257751074442597, 0.008250564171853936, 0.008243377269265276, 0.008243377269265276, 0.008243377269265276, 0.008221816561499293, 0.008221816561499293, 0.008214629658910634, 0.008207442756321974, 0.008207442756321974, 0.008207442756321974, 0.008207442756321974, 0.008200255853733313, 0.008200255853733313, 0.008200255853733313, 0.008193068951144654, 0.008193068951144654, 0.008185882048555993, 0.008185882048555993, 0.008178695145967333, 0.008178695145967333, 0.008178695145967333, 0.008178695145967333, 0.00817150824337867, 0.00817150824337867, 0.00817150824337867, 0.008164321340790011, 0.008164321340790011, 0.00815713443820135, 0.00814994753561269, 0.00814994753561269, 0.00814994753561269, 0.00814994753561269, 0.008142760633024031, 0.008142760633024031, 0.008142760633024031, 0.00813557373043537, 0.00813557373043537, 0.00813557373043537, 0.00813557373043537, 0.00813557373043537, 0.008128386827846711, 0.008128386827846711, 0.008128386827846711, 0.00812119992525805, 0.00812119992525805, 0.008114013022669389, 0.008114013022669389]
[(11.62, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc890>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c350>), (12.0, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8ba0>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9aeb0>), (11.34, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a2e0>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c0b0>), (11.8, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15120>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05900>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9aac0>), (12.48, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3f90>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc740>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9aeb0>), (11.82, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ac10>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a200>), (11.65, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a890>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b4b040>), (11.55, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05ac0>), (11.75, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8ac0>), (12.51, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c270>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b270>), (11.58, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bc80>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b4a0>), (12.06, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05580>), (11.48, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b4b200>), (12.06, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05580>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.61, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15040>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bff820>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a200>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3d660c7510>), (11.39, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc580>), (12.06, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05580>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05f20>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bc10>), (12.16, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be37b0>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4db30>), (11.67, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05120>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc80>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ae40>), (11.34, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b80f90>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (11.29, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9be40>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afce40>), (12.51, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c270>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9af20>), (11.37, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d970>), (11.51, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15d60>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15350>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b053c0>), (11.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c6d0>), (11.51, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15d60>), (11.36, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c890>), (11.42, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05190>), (11.75, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8ac0>), (11.38, <rdkit.Chem.rdchem.Mol object at 0x7f3d660aa350>), (11.34, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b80f90>), (11.73, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bb6eb0>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15350>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c3c0>), (11.41, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b17200>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (11.66, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b053c0>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.34, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4d6d0>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b059e0>), (11.43, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afccf0>), (11.57, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1c040>), (11.47, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b4b120>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15270>), (11.69, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcc80>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b059e0>), (12.48, <rdkit.Chem.rdchem.Mol object at 0x7f3d65be3f90>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8190>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b350>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9a740>), (11.75, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8ac0>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bc10>), (11.86, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05430>), (11.6, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ae40>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b12eb0>), (11.71, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b1ce40>), (11.31, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b05970>), (11.33, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b3c0>), (11.81, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b4b040>), (11.63, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba85f0>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b059e0>), (11.82, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9ac10>), (11.91, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b150b0>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9b350>), (11.58, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bc80>), (11.51, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15d60>), (11.79, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b173c0>), (11.88, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afce40>), (11.74, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4db30>), (11.64, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15dd0>), (11.62, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc890>), (11.63, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15820>), (11.75, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba8ac0>), (11.54, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9bb30>), (11.7, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b059e0>), (11.95, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c120>), (11.44, <rdkit.Chem.rdchem.Mol object at 0x7f3d65e4dac0>), (11.5, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afc820>), (11.34, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5afcdd0>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b054a0>), (11.3, <rdkit.Chem.rdchem.Mol object at 0x7f3d65ba83c0>), (12.05, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9aac0>), (11.65, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bacc80>), (11.4, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c200>), (11.32, <rdkit.Chem.rdchem.Mol object at 0x7f3d65b9c430>), (11.52, <rdkit.Chem.rdchem.Mol object at 0x7f3d65bff820>), (11.9, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b175f0>), (11.63, <rdkit.Chem.rdchem.Mol object at 0x7f3bd5b15820>)]
Bin size: 100
===== for SMILES N#CC1=C2CN(O)C3=NC4=C(C(=O)NC[C@H](C5=CC=CS5)OC2=CC=C1F)C(N)=NN4C=C3 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][#C][C][=C][C][N][Branch1][C][O][C][=N][C][=C][Branch2][Ring1][=N][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][C][Ring2][Ring1][Ring2][=C][C][=C][Ring2][Ring1][Branch2][F][C][Branch1][C][N][=N][N][Ring2][Ring1][=Branch1][C][=C][Ring2][Ring1][#Branch2]<eom>
Output: 
output selfies [C][C][=C][C][=C][Branch2][Branch1][#C][C][=C][C][=C][C][Branch2][Ring2][P][N][C][=Branch1][C][=O][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][Ring1][O][C][=C][C][=C][Branch2][Ring1][Branch1][O][C][=N][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][Cl][C][=C][Ring2][Ring1][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][P][C][=C][Ring2][Ring2][#Branch2]
generated smiles C1C=C2C=C(C=CC=CC13NC(=O)NC(=O)C=CC=COC4=CC=C(OC5=NC=C(C(F)(F)F)C=C5Cl)C=C4C)C=C3C=C2
added!
adding editted molecule!!!
===== for SMILES O=C1NCCCCN2C=C(C=N2)C2=CC3=CC(=CC=C3N=C2)CCN2N=C(C=CC2=O)C2=CC(C3=CC=CS3)=C1C=C2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][C][=C][C][=Branch1][#Branch2][=C][C][=C][Ring1][=Branch1][N][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][=C][Ring2][Ring2][#Branch1][C][=C][Ring1][O]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][C][N][=N][NH1][C][=Ring1][Branch1][C][=C][Ring2][Ring1][Ring2][Ring1][P]
generated smiles O=C(O)C1=CC=CC=C1C=C2C=CC3=CC=C(C4=CC=CC=C4C=5N=N[NH1]C=5)C=C23
added!
adding editted molecule!!!
===== for SMILES C[C@@H](C1=CC2=CC(C3=CN(C)N=C3)=CN=C2C=C1)C1=NN=C2C(F)=CC(C3=CN(N)C=N3)=CN21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C@@H1][Branch2][Ring1][O][C][=C][C][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][N][=C][Ring1][N][C][=C][Ring1][S][C][=N][N][=C][C][Branch1][C][F][=C][C][Branch1][O][C][=C][N][Branch1][C][N][C][=N][Ring1][=Branch1][=C][N][Ring1][=N][Ring1][S]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][Ring1][=C][C][=C][Ring2][Ring1][Branch2][N][C][=N][C][=C][Branch1][=Branch2][C][Branch1][C][N][=N][C][Ring1][#Branch1][C][=C][Ring1][O]
generated smiles C1C=CC(F)=C(C2=CC3=CC(=C2)C(F)(F)C4=CC(F)=CC=C43)C=C1N5C=NC=C(C(N)=NC)C=C5
added!
adding editted molecule!!!
===== for SMILES N#CC1=C(F)C=CC2=C1CN(CF)C1=NC3=C(C(=O)NC[C@H](C4=CC=CS4)O2)C(N)=NN3C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][#C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][C][N][Branch1][Ring1][C][F][C][=N][C][=C][Branch2][Ring1][Branch1][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][Ring2][Ring1][Branch1][C][Branch1][C][N][=N][N][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][N][C][=N][C][=C][C][Branch2][Ring1][S][N][C][C][=C][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][C][F][C][Branch1][=Branch1][C][=Branch1][C][=O][O][=C][Ring1][#Branch2][C][=C][Ring1][S][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][=N][C]
generated smiles CCOC(=O)N1C=NC=CC(NCC2=CC=C(C3=CC=C(F)C(C(=O)O)=C3)C=C2)=C1C=CC
added!
adding editted molecule!!!
===== for SMILES O=C1NCCCCN2C=C(C=N2)C2=CC3=CC(=CC=C3N=C2)CCN2N=C(C=CC2=O)C2=CC(F)=C1C=C2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][C][=C][C][=Branch1][#Branch2][=C][C][=C][Ring1][=Branch1][N][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][Branch1][C][F][=C][Ring2][Ring2][Ring1][C][=C][Ring1][#Branch1]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][=Branch1][C][=Branch1][C][=O][O][=C][N][Ring1][=Branch2][C][C][C][N][C][C][N][Branch1][N][C][C][C][C][=C][C][=C][C][=C][Ring1][=Branch1][C][C][Ring1][#C]
generated smiles O=C(O)C1=CC=CC=C1C2=CC=C3C(=C2)C(C(=O)O)=CN3CCCN4CCN(CCCC5=CC=CC=C5)CC4
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=NN(CCC3=CC4=CC(C5=CN(N)N=C5)=CN=C4C=C3)C(=O)C=C2)C=C1C(F)(F)F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][N][C][=N][N][Branch2][Ring1][=N][C][C][C][=C][C][=C][C][Branch1][O][C][=C][N][Branch1][C][N][N][=C][Ring1][=Branch1][=C][N][=C][Ring1][N][C][=C][Ring1][S][C][=Branch1][C][=O][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][#C][C][Branch1][C][F][Branch1][C][F][F]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][C][=C][Branch2][Ring1][P][C][=C][C][=C][C][=Branch1][Ring2][=N][Ring1][=Branch1][C][Branch1][=Branch2][N][C][=N][C][C][N][Ring1][Branch1][=C][Ring1][=N][C][=C][Ring2][Ring1][=Branch1][C][Ring2][Ring1][O][=C][Ring2][Ring1][S][=C][Ring2][Ring2][Ring2]
generated smiles C1C(C)(C2)C=CC=C3C(C=CC4=CN=CC=C(C5=C6C=CC(=N5)C(NC7=NCCN7)=C6C=C4C3)C2)=C1
added!
adding editted molecule!!!
===== for SMILES O=C1NCCCCN2C=C(C=N2)C2=CN=C3C=CC(=CC3=C2)CCN2N=C(C=CC2=O)C2=CC=C1C(C(F)(F)F)=C2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][N][=C][C][=C][C][=Branch1][Branch2][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][=C][Ring2][Ring2][C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][Ring2][Ring1][C][=C][Ring2][Ring1][=Branch1]
generated smiles O=C(O)C1=C2C=CC3=C1C=CC4=CC5=CC=C(N(C)C)C=C5N=C4C3=C2
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(O)=CC2=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][=Branch1][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][C][O][=C][C][Ring1][#Branch1][=C][Ring1][N][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [N][C][=N][C][Branch1][C][F][=C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][O][N][C][=N][C][=C][C][Branch1][P][C][=C][C][=C][Branch1][=Branch1][C][=Branch1][C][=O][O][C][=C][Ring1][=Branch2][F][=C][Ring1][S][C][=C][Ring2][Ring1][Branch2][Ring2][Ring1][N]
generated smiles NC=NC(F)=CC1=CC(F)=C(NC2=NC=CC(C3=CC=C(C(=O)O)C=C3F)=C2)C=C1
added!
adding editted molecule!!!
===== for SMILES CCN1CC2=C(C=CC(F)=C2/C(C)=N/OCl)O[C@@H](C2=CC=CS2)CNC(=O)C2=C3N=C1C=CN3N=C2N =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][P][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][/C][Branch1][C][C][=N][/O][Cl][O][C@@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][C][N][C][=Branch1][C][=O][C][=C][N][=C][Ring2][Ring1][=N][C][=C][N][Ring1][=Branch1][N][=C][Ring1][=Branch2][N]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][C][=C][Branch1][C][C][N][C][=C][C][=C][Branch2][Ring1][O][C][=Branch1][C][=O][N][C][C][C][Branch1][P][C][=Branch1][C][=O][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][C][C][Ring1][S][C][=C][Ring2][Ring1][=Branch1][Ring2][Ring1][N].[C][C][=C][C][=C][Branch2][Ring1][=Branch1][C][=Branch1][C][=O][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][C][=C][Ring2][Ring1][C]
generated smiles CCOC(=O)C1=C(C)NC=CC2=C(C(=O)N3CCCC(=O)NC4=CC=C(F)C=C45)CC3C=C21.CC=CC=C5C(=O)NC=CC=C(C(F)(F)F)C=C
added!
adding editted molecule!!!
===== for SMILES O=C1NCCCCN2C=C(C=N2)C2=CC3=CC(=CC=C3N=C2)CCN2N=C(C=CC2=O)C2=CC(C(O)(F)F)=C1C=C2 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[O][=C][N][C][C][C][C][N][C][=C][Branch1][Branch1][C][=N][Ring1][Branch1][C][=C][C][=C][C][=Branch1][#Branch2][=C][C][=C][Ring1][=Branch1][N][=C][Ring1][#Branch2][C][C][N][N][=C][Branch1][#Branch1][C][=C][C][Ring1][=Branch1][=O][C][=C][C][Branch1][=Branch2][C][Branch1][C][O][Branch1][C][F][F][=C][Ring2][Ring2][=Branch1][C][=C][Ring1][#Branch2]<eom>
Output: 
output selfies [O][=C][Branch1][C][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][C][=C][C][=C][Branch1][=Branch1][N][Branch1][C][C][C][C][=C][Ring1][=Branch2][N][=C][Ring1][=N][C][Ring2][Ring1][C][=N][Ring2][Ring1][=Branch1]
generated smiles O=C(O)C1=C2C=CC3=C1C=CC4=CC5=CC=C(N(C)C)C=C5N=C4C3=N2
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CN(C)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][N][=C][Ring1][N][Ring1][#C]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Ring2][S][=C][C][=C][C][Branch2][Ring1][N][N][=N][C][=C][C][=C][Branch1][P][C][=C][N][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][Ring1][=C][C][=C][Ring1][S][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][S][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring2][Ring2][=Branch1]
generated smiles CC1=CC(F)=CC(=C1)C=NC=NC(=CC=CC(N=NC2=CC=C(C3=CN=C4C=CC=CC4=C32)C=C)=CC=CC5=CC)CC=C5
added!
adding editted molecule!!!
===== for SMILES CN1C=C(C2=CN3C(=NN=C3C3=CN=C4N=NN(CC5=CC6=CC=CN=C6C=C5F)C4=N3)C(F)=C2)C=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=C][Branch2][Branch1][Branch1][C][=C][N][C][=Branch2][Ring2][=Branch1][=N][N][=C][Ring1][Branch1][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1][C][Branch1][C][F][=C][Ring2][Ring1][#C][C][=N][Ring2][Ring2][Ring2]<eom>
Output: 
output selfies [F][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][=N][C][Branch1][C][F][=C][C][=C][C][Branch1][#C][N][C][=C][N][=C][C][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][=N][N][Ring2][Ring1][C][Ring1][S]
generated smiles FC1=CC=CC(F)=C1C=NC(F)=CC2=CC(NC3=CN=C4C=CC=CC4=C3)=NN2
added!
adding editted molecule!!!
===== for SMILES CN1C=C(CN2C=C(C(=O)NC3=C(F)C=C(C4=CNC5=NC=NC(N)=C45)C(F)=C3)C(=O)C(C3=CC=C(F)C=C3)=C2)C=N1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=C][Branch2][=Branch1][Ring2][C][N][C][=C][Branch2][Ring2][#Branch1][C][=Branch1][C][=O][N][C][=C][Branch1][C][F][C][=C][Branch1][P][C][=C][N][C][=N][C][=N][C][Branch1][C][N][=C][Ring1][#Branch2][Ring1][#Branch1][C][Branch1][C][F][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][Branch1][N][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][=C][Ring2][Ring2][Ring1][C][=N][Ring2][Ring2][=Branch2]<eom>
Output: 
output selfies [N][C][=C][C][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][F][Branch1][C][F][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][Ring1][=N][C][=C][Ring2][Ring1][=Branch1][F]
generated smiles NC1=CC=C(C2=CC=C3C(=C2)C(F)(F)C4=CC(F)=CC=C43)C=C1F
added!
adding editted molecule!!!
===== for SMILES CCN1CC2=C(C#N)C(F)=CC=C2O[C@@H](C2=CC=CS2)CNC(=O)C2=C3N=C1C=CN3N=C2N =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][Ring1][C][#N][C][Branch1][C][F][=C][C][=C][Ring1][=Branch2][O][C@@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][C][N][C][=Branch1][C][=O][C][=C][N][=C][Ring2][Ring1][#Branch2][C][=C][N][Ring1][=Branch1][N][=C][Ring1][=Branch2][N]<eom>
Output: 
output selfies [C][C][C][=C][Branch1][C][C][C][=C][Branch2][Ring1][O][C][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][C][Branch1][C][C][=C][C][Branch1][C][C][=C][C][Ring1][=Branch2][=N][Ring1][=N][C][=C][Ring2][Ring1][=Branch1][N][C][C][N][Branch2][Ring1][O][C][=C][C][=C][C][Branch1][P][C][=Branch1][C][=O][N][C][C][N][Branch1][Ring1][C][C][C][C][Ring1][#Branch1][=C][Ring1][S][C][C][Ring2][Ring1][=Branch1]
generated smiles CC1C=C(C)C=C(C2=C3C=CC(=C2)C(C)=CC(C)=CC=N3)C=C1N4CCN(C5=CC=CC(C(=O)NC6CN(CC)CC6)=C5)CC4
added!
adding editted molecule!!!
===== for SMILES CCN1CC2=C(C=CC(F)=C2C#N)O[C@@H](C2=CC=CS2)CNC(=O)C2=C3N=C1C=CN3N=C2N =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][N][C][C][=C][Branch1][N][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][#N][O][C@@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][C][N][C][=Branch1][C][=O][C][=C][N][=C][Ring2][Ring1][#Branch2][C][=C][N][Ring1][=Branch1][N][=C][Ring1][=Branch2][N]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][Branch2][Ring2][=Branch1][N][C][=Branch1][C][=O][N][C][C][C][C@@H1][Branch2][Ring1][=Branch1][N][C][=C][C][=C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][C][=C][Ring1][#Branch2][C][C][Ring2][Ring1][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][S][C]
generated smiles C1COC(=O)C2=CC=CC(NC(=O)NCCC[C@@H1]1NC3=CC=C(C(F)(F)F)C=C3CC)=C2C=CC
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=NC=C(C3=CC=C(C(N)=O)C(F)=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][Branch2][Ring1][#C][C][=C][C][=C][C][=C][N][=C][Branch1][#Branch2][N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][Ring1][=N][=C][Ring1][P][C][=C][Ring2][Ring1][=Branch2][C][=C][Ring2][Ring1][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][F]
generated smiles C12C=CC(F)=C(C3=CC=C4C=CN=C(NC5=CC=CC=C5)C4=C3C=C1)C=C2C6=CC=CC=C6F
added!
adding editted molecule!!!
===== for SMILES CC(c1c(F)cc2ncc(-c3cnn(C)c3)cc2c1F)n1nnc2ncc(-c3ccc(C(N)=O)c(F)c3)nc21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][C][=N][N][Branch1][C][C][C][=Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][N][=O][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][Branch2][Ring1][N][N][C][=N][C][=C][C][Branch1][P][C][=C][N][Branch1][C][C][C][=C][C][=C][C][=C][Ring1][#Branch2][Ring1][=Branch1][=N][Ring1][S][C][=C][Ring2][Ring1][#Branch1][C][=C][Ring2][Ring1][S][NH1][Ring2][Ring1][#C]
generated smiles C1C(C)(C)C2=CC=CC1C=CC3=CN=C(NC4=NC=CC(C5=CN(C)C6=CC=CC=C56)=N4)C=C3C=C2[NH1]
added!
adding editted molecule!!!
===== for SMILES COC1=CC2=C(F)C(C(O)N3N=NC4=NC=C(C5=CC=C(C(=O)F)C(F)=C5)N=C43)=C(F)C=C2N=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=C][Branch1][C][F][C][Branch2][Ring2][Branch2][C][Branch1][C][O][N][N][=N][C][=N][C][=C][Branch2][Ring1][Ring1][C][=C][C][=C][Branch1][=Branch1][C][=Branch1][C][=O][F][C][Branch1][C][F][=C][Ring1][#Branch2][N][=C][Ring1][S][Ring2][Ring1][Ring1][=C][Branch1][C][F][C][=C][Ring2][Ring1][=N][N][=C][Ring2][Ring1][P]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=N][C][=C][Ring1][#Branch2][N][C][=N][C][=C][C][Branch1][C][F][=C][C][=C][Ring1][#Branch1][C][Ring1][#Branch2][=N][Ring2][Ring1][=Branch1][=C][Ring2][Ring1][#C]
generated smiles CC(C)(C)C=CC=CCC=CC1=CC(C(F)(F)F)=NC=C1NC2=NC3=CC(F)=CC=C3C2=N
added!
adding editted molecule!!!
===== for SMILES CC(=NF)C1=NN2C(CC3=C(F)C=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Ring1][=N][F][C][=N][N][C][Branch2][Ring1][Ring2][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][=C][N][=C][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch1][Ring1][C][#N][C][Ring1][Branch2][=N][Ring1][P]
generated smiles CC1=CC(F)=CC(=C1)C=NC(F)=C2C=CC=C(C#N)C2=N
added!
adding editted molecule!!!
===== for SMILES CC(=NF)C1=NN2C(CC3=C(F)C=C4N=CC=CC4=C3F)=CN=C2C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch1][Ring1][=N][F][C][=N][N][C][Branch2][Ring1][Ring2][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][=C][N][=C][Ring2][Ring1][C][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][Branch1][C][F][=C][C][=C][C][=C][Branch1][Ring1][C][#N][C][Ring1][Branch2][=N][Ring1][P]
generated smiles CC1=CC(F)=CC(=C1)C=NC(F)=C2C=CC=C(C#N)C2=N
added!
adding editted molecule!!!
===== for SMILES CNC(=O)C1=CC=C(C2=NN(CCC3=CC=C4N=CC(C5=CN(CCO)N=C5)=CC4=C3)C(=O)C=C2)C=C1C(F)(F)F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][#C][C][=N][N][Branch2][Ring1][S][C][C][C][=C][C][=C][N][=C][C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][=C][C][Ring1][=C][=C][Ring2][Ring1][C][C][=Branch1][C][=O][C][=C][Ring2][Ring1][O][C][=C][Ring2][Ring1][P][C][Branch1][C][F][Branch1][C][F][F]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][C][=C][Branch2][Ring1][P][N][C][=Branch1][C][=O][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][#Branch2][C][=C][Ring1][S][Ring2][Ring1][#Branch1][=C][C][=C][Ring2][Ring1][=N][Ring2][Ring1][P]
generated smiles CC(C)(C)C1=CC=CC2(C=CC=CN=CC3=CNC(=O)NC=CC=C3C=CC=CC(C(F)(F)F)=C)C=C21
added!
adding editted molecule!!!
===== for SMILES CC(=NC1=CC2=CC(C3=CN(C)N=C3)=CN=C2C=C1)C1=CSC(C2=NN3C(=NN=C3CC3=CC=C4N=CC=CC4=C3)C=C2)=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=Branch2][Ring1][N][=N][C][=C][C][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][N][=C][Ring1][N][C][=C][Ring1][S][C][=C][S][C][Branch2][Ring1][P][C][=N][N][C][=Branch2][Ring1][Branch1][=N][N][=C][Ring1][Branch1][C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][=C][Ring2][Ring1][Ring2][=C][Ring2][Ring1][=Branch2]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][C][=C][C][=N][C][=N][C][=Branch2][=Branch1][Branch1][=C][C][=C][C][=C][Branch2][Ring2][S][N][=C][N][=C][Branch2][Ring1][Ring2][N][C][=C][C][=C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring1][N][C][=C][C][=C][Branch1][C][Cl][C][=C][Ring1][#Branch1][Ring2][Ring1][=Branch1][C][=C][Ring2][Ring1][S][C][=C][Ring2][Ring2][=Branch1][C][Ring2][Ring2][#Branch2][=C][Ring2][Ring2][=C]
generated smiles C1C=CC(C)=CC=NC=NC=CC=CC=C1N=CN=C(NC2=CC=C(C3=CC=CC=C3)C=C2)C4=CC=C(Cl)C=C4
added!
adding editted molecule!!!
===== for SMILES CC(N=O)C1=NN2C(=NN=C2CC2=C(F)C=C3N=CC=CC3=C2F)C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch1][Ring1][N][=O][C][=N][N][C][=Branch2][Ring1][=Branch2][=N][N][=C][Ring1][Branch1][C][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F][C][=C][Ring2][Ring1][=Branch1]<eom>
Output: 
output selfies [C][C][Branch1][C][C][Branch1][C][C][C][=N][C][Branch2][Ring2][C][C][=C][C][=C][C][Branch2][Ring1][=Branch1][N][C][=Branch1][C][=O][C][=N][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][=C][Ring2][Ring1][Ring1][=C][C][=C][Ring2][Ring1][#Branch2][F]
generated smiles C1C(C)(C2)C=NC(C=CC=CC1(NC(=O)C3=NC4=CC=CC=C4C=C3F)C)C=C2F
added!
adding editted molecule!!!
===== for SMILES N#CC1=C(F)C=CC2=C1CN(CCCO)C1=NC3=C(C(=O)NC[C@H](C4=CC=CS4)O2)C(N)=NN3C=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][#C][C][=C][Branch1][C][F][C][=C][C][=C][Ring1][#Branch1][C][N][Branch1][Branch1][C][C][C][O][C][=N][C][=C][Branch2][Ring1][Branch1][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][Ring2][Ring1][#Branch1][C][Branch1][C][N][=N][N][Ring1][P][C][=C][Ring2][Ring1][Branch1]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][N][C][=N][C][=C][C][Branch2][Ring1][#Branch2][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=C][C][=C][Branch1][C][F][C][Branch1][C][F][=C][Ring1][Branch2][Cl][=C][C][=C][Ring2][Ring1][#Branch1][N][Ring2][Ring1][#Branch2][C][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1]
generated smiles CCOC(=O)NC1=NC=CC(OC2=CC=CC=C2C3=CC=C(F)C(F)=C3Cl)C=C1NCC4=CC=C(F)C=C4
added!
adding editted molecule!!!
===== for SMILES C[C@@H](C1=NN=C2C=CC(C(F)=NOC(N)=O)=NN21)C1=C(F)C=C2N=CC=CC2=C1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C@@H1][Branch2][Ring1][O][C][=N][N][=C][C][=C][C][Branch1][N][C][Branch1][C][F][=N][O][C][Branch1][C][N][=O][=N][N][Ring1][=N][Ring1][S][C][=C][Branch1][C][F][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][O][F]<eom>
Output: 
output selfies [C][C][Branch1][C][C][O][C][=N][C][Branch1][C][F][=C][C][Branch2][Ring1][=Branch1][N][C][=N][C][=C][C][=C][Branch1][=Branch1][C][Branch1][C][F][F][C][=C][Ring1][=Branch2][N][Ring1][N][=C][Ring2][Ring1][Ring1][C][=C][C][=C][Branch1][C][F][C][=C][Ring1][#Branch1][F]
generated smiles CC(C)OC=NC(F)=CC(NC1=NC2=CC=C(C(F)F)C=C2N1)=CC3=CC=C(F)C=C3F
added!
adding editted molecule!!!
===== for SMILES NC(=O)C1=CC=C(C2=CN=C3N=NN(C(F)C4=C(F)C=C5N=CC(F)=CC5=C4F)C3=N2)C=C1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][N][C][=C][N][=C][N][=N][N][Branch2][Ring1][#Branch2][C][Branch1][C][F][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][C][F][=C][C][Ring1][#Branch1][=C][Ring1][N][F][C][Ring2][Ring1][Ring2][=N][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][=C][F]<eom>
Output: 
output selfies [F][C][=C][C][=C][Branch2][Ring2][C][C][=C][C][=N][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][C][=C][Ring1][#Branch2][N][=C][Ring1][=C][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][C][=C][Ring2][Ring1][=N]
generated smiles FC1=CC=C(C=CC2=NC3=CC(C(F)(F)F)=CC=C3N=C2C4=CC=CCF)C4C=C1
added!
adding editted molecule!!!
===== for SMILES COC1=CC2=CC([C@H](C)N=C(C)C3=CN=C4N=NN(CC5=CC6=CC=CN=C6C=C5F)C4=N3)=CC=C2N=C1 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][O][C][=C][C][=C][C][Branch2][Ring2][#Branch2][C@H1][Branch1][C][C][N][=C][Branch1][C][C][C][=C][N][=C][N][=N][N][Branch1][P][C][C][=C][C][=C][C][=C][N][=C][Ring1][=Branch1][C][=C][Ring1][#Branch2][F][C][Ring1][P][=N][Ring2][Ring1][Branch1][=C][C][=C][Ring2][Ring1][S][N][=C][Ring2][Ring2][Ring2]<eom>
Output: 
output selfies [C][O][C][=C][C][=C][C][Branch2][Ring2][S][C][=C][C][=C][N][=C][N][=C][Branch2][Ring1][N][N][C][=C][C][=C][Branch1][P][C][=C][C][=C][C][=C][N][=C][C][=C][C][Ring1][=Branch1][=C][Ring1][#Branch2][C][=C][Ring1][S][C][Ring2][Ring1][#Branch1][=C][Ring2][Ring1][O][=C][Ring2][Ring1][S]
generated smiles C1OC=CC=CC1C=CC2=CN=C3N=C(NC=CC4=C(C=CC5=CC=C6N=CC=CC6=C5)C=C4)C3=C2C
added!
adding editted molecule!!!
===== for SMILES NC(=O)C1=CC=C(C2=CN=C3N=NN(C(F)C4=C(F)C5=CC(F)=CN=C5C=C4F)C3=N2)C=C1F =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[N][C][=Branch1][C][=O][C][=C][C][=C][Branch2][Ring2][N][C][=C][N][=C][N][=N][N][Branch2][Ring1][#Branch2][C][Branch1][C][F][C][=C][Branch1][C][F][C][=C][C][Branch1][C][F][=C][N][=C][Ring1][#Branch1][C][=C][Ring1][N][F][C][Ring2][Ring1][Ring2][=N][Ring2][Ring1][Branch2][C][=C][Ring2][Ring1][=C][F]<eom>
Output: 
output selfies [N][C][=Branch1][C][=O][C][=C][C][Branch1][C][F][=C][C][Branch2][Ring2][=Branch1][N][C][=N][C][=C][C][Branch1][=Branch2][C][=C][C][=C][C][=C][Ring1][=Branch1][=N][C][=C][N][=C][Branch1][C][F][C][=C][Ring2][Ring1][C][Ring1][#Branch1][=C][Ring2][Ring1][O][F][=C][Ring2][Ring1][P]
generated smiles N1C(=O)C=CC(F)=CC1NC=NC=CC(C2=CC=CC=C2)=NC3=CN=C(F)C=C3
added!
adding editted molecule!!!
===== for SMILES Cc1nn2ccc3nc2c1C(=O)NC[C@H](c1cccs1)Oc1ccc(F)c(C#N)c1CN3O =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][=N][N][C][=C][C][=N][C][Ring1][=Branch1][=C][Ring1][=Branch2][C][=Branch1][C][=O][N][C][C@H1][Branch1][Branch2][C][=C][C][=C][S][Ring1][Branch1][O][C][=C][C][=C][Branch1][C][F][C][Branch1][Ring1][C][#N][=C][Ring1][=Branch2][C][N][Ring2][Ring1][#Branch2][O]<eom>
Output: 
output selfies [C][C][O][C][=Branch1][C][=O][N][C][=C][C][=C][C][Branch2][Ring1][#C][N][C][=Branch1][C][=O][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][=C][=C][Ring2][Ring1][#Branch1][C][=C][Ring2][Ring1][N][N][C][=Branch1][C][=O][C][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][C][Branch1][=Branch2][C][Branch1][C][F][Branch1][C][F][F][=C][Ring1][=C]
generated smiles CCOC(=O)NC1=CC=CC(NC(=O)C2=CC(C(F)(F)F)=CCC(F)(F)F)=C2C1C=CNC(=O)C3=CC(C(F)(F)F)=CC(C(F)(F)F)=C3
added!
adding editted molecule!!!
===== for SMILES CC(C1=C(F)C=C2N=CC(C3=CN(C)N=C3)=CC2=C1F)N1N=NC2=CC=C(C3=CN(CCO)N=C3)N=C21 =====
sample model input Definition: You are given a molecule SELFIES. Your job is to generate a SELFIES molecule that is a greater inhibitor of c-MET.

Now complete the following example -
Input: <bom>[C][C][Branch2][Ring1][#C][C][=C][Branch1][C][F][C][=C][N][=C][C][Branch1][O][C][=C][N][Branch1][C][C][N][=C][Ring1][=Branch1][=C][C][Ring1][N][=C][Ring1][P][F][N][N][=N][C][=C][C][=C][Branch1][=N][C][=C][N][Branch1][Ring2][C][C][O][N][=C][Ring1][Branch2][N][=C][Ring1][=C][Ring1][P]<eom>
Output: 
output selfies [C][C][=C][C][Branch1][C][F][=C][C][=Branch1][Ring2][=C][Ring1][#Branch1][C][=N][C][=N][C][=Branch2][Branch1][=Branch1][=C][C][=C][C][=C][Branch2][Ring2][=Branch1][N][C][=C][C][=C][Branch2][Ring1][Branch2][C][=C][C][=C][C][Branch1][C][F][=C][Ring1][#Branch1][N][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][#C][C][=C][Ring2][Ring1][Branch1][C][=C][Ring2][Ring1][=N][C][=C][Ring2][Ring2][C][C][N][Ring2][Ring2][=Branch1]
generated smiles CC1=CC(F)=CC(=C1)C=NC=NC(=CC=CC=C2NC=CC=C(C3=CC=CC(F)=C3NC4=CC=CC=C4)C2C=C)CN
added!
adding editted molecule!!!
fp_scores_to_top [0.18125, 0.19333333333333333, 0.22972972972972974, 0.14685314685314685, 0.18120805369127516, 0.17791411042944785, 0.14634146341463414, 0.17105263157894737, 0.17647058823529413, 0.1870967741935484, 0.11538461538461539, 0.16891891891891891, 0.07547169811320754, 0.06837606837606838, 0.08130081300813008, 0.17575757575757575, 0.17164179104477612, 0.08653846153846154, 0.1987179487179487, 0.18045112781954886, 0.05660377358490566, 0.18023255813953487, 0.12598425196850394, 0.5625, 0.16541353383458646, 0.15172413793103448, 0.1297709923664122, 0.18, 0.1780821917808219, 0.15602836879432624, 0.13432835820895522, 0.17880794701986755, 0.1791907514450867, 0.14705882352941177, 0.7522935779816514, 0.19333333333333333, 0.13432835820895522, 0.15333333333333332, 0.04672897196261682, 0.1953125, 0.21301775147928995, 0.16541353383458646, 0.12931034482758622, 0.44171779141104295, 0.02631578947368421, 0.6612903225806451, 0.13636363636363635, 0.04672897196261682, 0.10852713178294573, 0.17532467532467533, 0.17218543046357615, 0.1437908496732026, 0.11214953271028037, 0.1694915254237288, 0.14893617021276595, 0.0660377358490566, 0.13333333333333333, 0.12931034482758622, 0.2023121387283237, 0.1171875, 0.88, 0.16993464052287582, 0.16891891891891891, 0.18796992481203006, 0.16091954022988506, 0.11206896551724138, 0.04672897196261682, 0.036036036036036036, 0.18120805369127516, 0.1736111111111111, 0.1116751269035533, 0.16666666666666666, 0.1488095238095238, 0.16149068322981366, 0.13736263736263737, 0.14857142857142858, 0.17482517482517482, 0.17105263157894737, 0.11904761904761904, 0.18309859154929578, 0.1326530612244898, 0.17105263157894737, 0.18382352941176472, 0.14948453608247422, 0.17073170731707318, 0.16167664670658682, 0.15517241379310345, 0.1144578313253012, 0.13432835820895522, 0.13432835820895522, 0.1005586592178771, 0.11578947368421053, 0.16233766233766234, 0.1676300578034682, 0.14375, 0.14743589743589744, 0.15254237288135594, 0.15584415584415584, 0.09900990099009901, 0.14361702127659576]
top 70 [60 34 45 23 43  2 40 58 18 39  1 35 63  9 82 79  0  4 68 19 21 27 32 31
 28  5  8 15 49 76 69 50 16  7 81 77 84 61 53 11 62 93 71 41 24 92 85 73
 64 29 97 86 37 96 25 83 54 72 75 95 33  3  6 51 94 99 74 46 36 30]
len offspring_mol 70
187
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
Already in buffer
N#Cc1c(F)ccc2c1CN(N)c1ccn3nc(N)c(c3n1)C(=O)NC[C@H](c1cccs1)O2

Boltz running on GPU 0
12.26
N#Cc1c(F)ccc2c1CN(CF)c1ccn3nc(F)c(c3n1)C(=O)NC[C@H](c1cccs1)O2

Boltz running on GPU 0
12.05
CCN1Cc2c(ccc(-c3cnn(C)c3)c2C#N)O[C@@H](c2cccs2)CNC(=O)c2c(N)nn3ccc1nc23

Boltz running on GPU 0
10.87
Cc1nn2ccc3nc2c1C(=O)NC[C@H](C)Oc1ccc(F)c(C#N)c1CN3F

Boltz running on GPU 0
11.07
990/1000 | avg_top1: 12.510 | avg_top10: 12.178 | avg_top100: 11.646 | avg_sa: 3.842 | div: 0.801
{'avg_top1': 12.51, 'avg_top10': 12.178, 'avg_top100': 11.645599999999996, 'auc_top1': 11.947850000000013, 'auc_top10': 11.683359999999995, 'auc_top100': 11.089767309523802, 'avg_sa': 3.842470480255285, 'diversity_top100': 0.8009298555663326, 'n_oracle': 990}
C[C@H]1CNC(=O)c2c(N)nn3ccc(nc23)N(F)Cc2c(ccc(-c3cnc4nnn(Cc5cc6cccnc6cc5F)c4n3)c2C#N)O1

Boltz running on GPU 0
11.54
CC(c1c(F)cc2c(c1F)CC(C#N)=N2)n1nnc2ncc(-c3ccc(F)cc3)nc21

Boltz running on GPU 0
10.97
Already in buffer
C[C@@H](Cn1nc(-c2ccc(C(=O)NC#N)c(C(F)(F)F)c2)ccc1=O)c1nnc2c(F)cc(-c3cn(C)cn3)cn12

Boltz running on GPU 0
10.11
C[C@H](c1c(F)cc2ncccc2c1F)c1nnc2ccc(N3N=NC4=NC=CCC43)nn12

Boltz running on GPU 0
11.54
N#Cc1nnc2c(F)cc(-c3ccc(C(=O)NF)s3)cn12

Boltz running on GPU 0
8.68
Already in buffer
CC(c1c(F)cc2c(c1F)CC(C#N)=N2)n1nnc2ncc(C3=C[C@H](C)N=C3)nc21

Boltz running on GPU 0
11.18
N#CC1=CN=C2N=NN(Cc3cc4cccnc4cc3F)C12

Boltz running on GPU 0
9.23
CCc1csc(-c2cc(F)c3nnc(COc4ccnc5cc(OC)ccc45)n3c2)c1

Boltz running on GPU 0
11.35
Already in buffer
Already in buffer
Cc1cc(C(=O)Nc2nnc3ccc(C(F)=NOC(N)=O)nn23)c(=O)n(-c2ccc(F)cc2)c1

Boltz running on GPU 0
9.36
CO/N=C(\F)c1csc(C2=NC=C(C(O)c3c(F)cc4ncccc4c3F)C2)c1

Boltz running on GPU 0
10.32
1000/1000 | avg_top1: 12.510 | avg_top10: 12.178 | avg_top100: 11.650 | avg_sa: 3.871 | div: 0.802
{'avg_top1': 12.51, 'avg_top10': 12.178, 'avg_top100': 11.649699999999996, 'auc_top1': 12.072950000000013, 'auc_top10': 11.805139999999996, 'auc_top100': 11.206243809523803, 'avg_sa': 3.870544663952714, 'diversity_top100': 0.8016482857554125, 'n_oracle': 1000}
C[C@H](c1ccc2ncccc2c1F)c1nnc2ccc(C(F)=NOC(N)=O)nn12

Boltz running on GPU 0
11.11
Saving molecules...
---- The whole process takes 34.97 hours ----
